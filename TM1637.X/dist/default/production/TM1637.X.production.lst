

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Oct 04 14:03:13 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1827 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019F                     	;# 
   144  020C                     	;# 
   145  020D                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  0219                     	;# 
   162  021A                     	;# 
   163  021B                     	;# 
   164  021C                     	;# 
   165  021D                     	;# 
   166  021E                     	;# 
   167  021F                     	;# 
   168  0291                     	;# 
   169  0291                     	;# 
   170  0292                     	;# 
   171  0293                     	;# 
   172  0294                     	;# 
   173  0295                     	;# 
   174  0295                     	;# 
   175  0296                     	;# 
   176  0298                     	;# 
   177  0298                     	;# 
   178  0299                     	;# 
   179  029A                     	;# 
   180  029B                     	;# 
   181  029C                     	;# 
   182  029C                     	;# 
   183  029D                     	;# 
   184  029E                     	;# 
   185  029E                     	;# 
   186  0311                     	;# 
   187  0311                     	;# 
   188  0312                     	;# 
   189  0313                     	;# 
   190  0318                     	;# 
   191  0318                     	;# 
   192  0319                     	;# 
   193  031A                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  039A                     	;# 
   198  039C                     	;# 
   199  039D                     	;# 
   200  039E                     	;# 
   201  039F                     	;# 
   202  0415                     	;# 
   203  0416                     	;# 
   204  0417                     	;# 
   205  041C                     	;# 
   206  041D                     	;# 
   207  041E                     	;# 
   208  0FE4                     	;# 
   209  0FE5                     	;# 
   210  0FE6                     	;# 
   211  0FE7                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEF                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0095                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009B                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  010C                     	;# 
   266  010D                     	;# 
   267  0111                     	;# 
   268  0112                     	;# 
   269  0113                     	;# 
   270  0114                     	;# 
   271  0115                     	;# 
   272  0116                     	;# 
   273  0117                     	;# 
   274  0118                     	;# 
   275  0119                     	;# 
   276  011A                     	;# 
   277  011B                     	;# 
   278  011D                     	;# 
   279  011E                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0191                     	;# 
   283  0191                     	;# 
   284  0192                     	;# 
   285  0193                     	;# 
   286  0193                     	;# 
   287  0193                     	;# 
   288  0194                     	;# 
   289  0195                     	;# 
   290  0196                     	;# 
   291  0199                     	;# 
   292  019A                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019C                     	;# 
   298  019C                     	;# 
   299  019D                     	;# 
   300  019E                     	;# 
   301  019F                     	;# 
   302  020C                     	;# 
   303  020D                     	;# 
   304  0211                     	;# 
   305  0211                     	;# 
   306  0212                     	;# 
   307  0212                     	;# 
   308  0213                     	;# 
   309  0213                     	;# 
   310  0214                     	;# 
   311  0214                     	;# 
   312  0215                     	;# 
   313  0215                     	;# 
   314  0215                     	;# 
   315  0216                     	;# 
   316  0216                     	;# 
   317  0217                     	;# 
   318  0217                     	;# 
   319  0219                     	;# 
   320  021A                     	;# 
   321  021B                     	;# 
   322  021C                     	;# 
   323  021D                     	;# 
   324  021E                     	;# 
   325  021F                     	;# 
   326  0291                     	;# 
   327  0291                     	;# 
   328  0292                     	;# 
   329  0293                     	;# 
   330  0294                     	;# 
   331  0295                     	;# 
   332  0295                     	;# 
   333  0296                     	;# 
   334  0298                     	;# 
   335  0298                     	;# 
   336  0299                     	;# 
   337  029A                     	;# 
   338  029B                     	;# 
   339  029C                     	;# 
   340  029C                     	;# 
   341  029D                     	;# 
   342  029E                     	;# 
   343  029E                     	;# 
   344  0311                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0318                     	;# 
   349  0318                     	;# 
   350  0319                     	;# 
   351  031A                     	;# 
   352  0394                     	;# 
   353  0395                     	;# 
   354  0396                     	;# 
   355  039A                     	;# 
   356  039C                     	;# 
   357  039D                     	;# 
   358  039E                     	;# 
   359  039F                     	;# 
   360  0415                     	;# 
   361  0416                     	;# 
   362  0417                     	;# 
   363  041C                     	;# 
   364  041D                     	;# 
   365  041E                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001E                     	;# 
   405  001F                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  0091                     	;# 
   409  0092                     	;# 
   410  0093                     	;# 
   411  0094                     	;# 
   412  0095                     	;# 
   413  0096                     	;# 
   414  0097                     	;# 
   415  0098                     	;# 
   416  0099                     	;# 
   417  009A                     	;# 
   418  009B                     	;# 
   419  009B                     	;# 
   420  009C                     	;# 
   421  009D                     	;# 
   422  009E                     	;# 
   423  010C                     	;# 
   424  010D                     	;# 
   425  0111                     	;# 
   426  0112                     	;# 
   427  0113                     	;# 
   428  0114                     	;# 
   429  0115                     	;# 
   430  0116                     	;# 
   431  0117                     	;# 
   432  0118                     	;# 
   433  0119                     	;# 
   434  011A                     	;# 
   435  011B                     	;# 
   436  011D                     	;# 
   437  011E                     	;# 
   438  018C                     	;# 
   439  018D                     	;# 
   440  0191                     	;# 
   441  0191                     	;# 
   442  0192                     	;# 
   443  0193                     	;# 
   444  0193                     	;# 
   445  0193                     	;# 
   446  0194                     	;# 
   447  0195                     	;# 
   448  0196                     	;# 
   449  0199                     	;# 
   450  019A                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019C                     	;# 
   456  019C                     	;# 
   457  019D                     	;# 
   458  019E                     	;# 
   459  019F                     	;# 
   460  020C                     	;# 
   461  020D                     	;# 
   462  0211                     	;# 
   463  0211                     	;# 
   464  0212                     	;# 
   465  0212                     	;# 
   466  0213                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0214                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0216                     	;# 
   474  0216                     	;# 
   475  0217                     	;# 
   476  0217                     	;# 
   477  0219                     	;# 
   478  021A                     	;# 
   479  021B                     	;# 
   480  021C                     	;# 
   481  021D                     	;# 
   482  021E                     	;# 
   483  021F                     	;# 
   484  0291                     	;# 
   485  0291                     	;# 
   486  0292                     	;# 
   487  0293                     	;# 
   488  0294                     	;# 
   489  0295                     	;# 
   490  0295                     	;# 
   491  0296                     	;# 
   492  0298                     	;# 
   493  0298                     	;# 
   494  0299                     	;# 
   495  029A                     	;# 
   496  029B                     	;# 
   497  029C                     	;# 
   498  029C                     	;# 
   499  029D                     	;# 
   500  029E                     	;# 
   501  029E                     	;# 
   502  0311                     	;# 
   503  0311                     	;# 
   504  0312                     	;# 
   505  0313                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  0394                     	;# 
   511  0395                     	;# 
   512  0396                     	;# 
   513  039A                     	;# 
   514  039C                     	;# 
   515  039D                     	;# 
   516  039E                     	;# 
   517  039F                     	;# 
   518  0415                     	;# 
   519  0416                     	;# 
   520  0417                     	;# 
   521  041C                     	;# 
   522  041D                     	;# 
   523  041E                     	;# 
   524  0FE4                     	;# 
   525  0FE5                     	;# 
   526  0FE6                     	;# 
   527  0FE7                     	;# 
   528  0FE8                     	;# 
   529  0FE9                     	;# 
   530  0FEA                     	;# 
   531  0FEB                     	;# 
   532  0FED                     	;# 
   533  0FEE                     	;# 
   534  0FEF                     	;# 
   535  0000                     	;# 
   536  0001                     	;# 
   537  0002                     	;# 
   538  0003                     	;# 
   539  0004                     	;# 
   540  0005                     	;# 
   541  0006                     	;# 
   542  0007                     	;# 
   543  0008                     	;# 
   544  0009                     	;# 
   545  000A                     	;# 
   546  000B                     	;# 
   547  000C                     	;# 
   548  000D                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0013                     	;# 
   552  0014                     	;# 
   553  0015                     	;# 
   554  0016                     	;# 
   555  0016                     	;# 
   556  0017                     	;# 
   557  0018                     	;# 
   558  0019                     	;# 
   559  001A                     	;# 
   560  001B                     	;# 
   561  001C                     	;# 
   562  001E                     	;# 
   563  001F                     	;# 
   564  008C                     	;# 
   565  008D                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0093                     	;# 
   569  0094                     	;# 
   570  0095                     	;# 
   571  0096                     	;# 
   572  0097                     	;# 
   573  0098                     	;# 
   574  0099                     	;# 
   575  009A                     	;# 
   576  009B                     	;# 
   577  009B                     	;# 
   578  009C                     	;# 
   579  009D                     	;# 
   580  009E                     	;# 
   581  010C                     	;# 
   582  010D                     	;# 
   583  0111                     	;# 
   584  0112                     	;# 
   585  0113                     	;# 
   586  0114                     	;# 
   587  0115                     	;# 
   588  0116                     	;# 
   589  0117                     	;# 
   590  0118                     	;# 
   591  0119                     	;# 
   592  011A                     	;# 
   593  011B                     	;# 
   594  011D                     	;# 
   595  011E                     	;# 
   596  018C                     	;# 
   597  018D                     	;# 
   598  0191                     	;# 
   599  0191                     	;# 
   600  0192                     	;# 
   601  0193                     	;# 
   602  0193                     	;# 
   603  0193                     	;# 
   604  0194                     	;# 
   605  0195                     	;# 
   606  0196                     	;# 
   607  0199                     	;# 
   608  019A                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019C                     	;# 
   614  019C                     	;# 
   615  019D                     	;# 
   616  019E                     	;# 
   617  019F                     	;# 
   618  020C                     	;# 
   619  020D                     	;# 
   620  0211                     	;# 
   621  0211                     	;# 
   622  0212                     	;# 
   623  0212                     	;# 
   624  0213                     	;# 
   625  0213                     	;# 
   626  0214                     	;# 
   627  0214                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0215                     	;# 
   631  0216                     	;# 
   632  0216                     	;# 
   633  0217                     	;# 
   634  0217                     	;# 
   635  0219                     	;# 
   636  021A                     	;# 
   637  021B                     	;# 
   638  021C                     	;# 
   639  021D                     	;# 
   640  021E                     	;# 
   641  021F                     	;# 
   642  0291                     	;# 
   643  0291                     	;# 
   644  0292                     	;# 
   645  0293                     	;# 
   646  0294                     	;# 
   647  0295                     	;# 
   648  0295                     	;# 
   649  0296                     	;# 
   650  0298                     	;# 
   651  0298                     	;# 
   652  0299                     	;# 
   653  029A                     	;# 
   654  029B                     	;# 
   655  029C                     	;# 
   656  029C                     	;# 
   657  029D                     	;# 
   658  029E                     	;# 
   659  029E                     	;# 
   660  0311                     	;# 
   661  0311                     	;# 
   662  0312                     	;# 
   663  0313                     	;# 
   664  0318                     	;# 
   665  0318                     	;# 
   666  0319                     	;# 
   667  031A                     	;# 
   668  0394                     	;# 
   669  0395                     	;# 
   670  0396                     	;# 
   671  039A                     	;# 
   672  039C                     	;# 
   673  039D                     	;# 
   674  039E                     	;# 
   675  039F                     	;# 
   676  0415                     	;# 
   677  0416                     	;# 
   678  0417                     	;# 
   679  041C                     	;# 
   680  041D                     	;# 
   681  041E                     	;# 
   682  0FE4                     	;# 
   683  0FE5                     	;# 
   684  0FE6                     	;# 
   685  0FE7                     	;# 
   686  0FE8                     	;# 
   687  0FE9                     	;# 
   688  0FEA                     	;# 
   689  0FEB                     	;# 
   690  0FED                     	;# 
   691  0FEE                     	;# 
   692  0FEF                     	;# 
   693  0000                     	;# 
   694  0001                     	;# 
   695  0002                     	;# 
   696  0003                     	;# 
   697  0004                     	;# 
   698  0005                     	;# 
   699  0006                     	;# 
   700  0007                     	;# 
   701  0008                     	;# 
   702  0009                     	;# 
   703  000A                     	;# 
   704  000B                     	;# 
   705  000C                     	;# 
   706  000D                     	;# 
   707  0011                     	;# 
   708  0012                     	;# 
   709  0013                     	;# 
   710  0014                     	;# 
   711  0015                     	;# 
   712  0016                     	;# 
   713  0016                     	;# 
   714  0017                     	;# 
   715  0018                     	;# 
   716  0019                     	;# 
   717  001A                     	;# 
   718  001B                     	;# 
   719  001C                     	;# 
   720  001E                     	;# 
   721  001F                     	;# 
   722  008C                     	;# 
   723  008D                     	;# 
   724  0091                     	;# 
   725  0092                     	;# 
   726  0093                     	;# 
   727  0094                     	;# 
   728  0095                     	;# 
   729  0096                     	;# 
   730  0097                     	;# 
   731  0098                     	;# 
   732  0099                     	;# 
   733  009A                     	;# 
   734  009B                     	;# 
   735  009B                     	;# 
   736  009C                     	;# 
   737  009D                     	;# 
   738  009E                     	;# 
   739  010C                     	;# 
   740  010D                     	;# 
   741  0111                     	;# 
   742  0112                     	;# 
   743  0113                     	;# 
   744  0114                     	;# 
   745  0115                     	;# 
   746  0116                     	;# 
   747  0117                     	;# 
   748  0118                     	;# 
   749  0119                     	;# 
   750  011A                     	;# 
   751  011B                     	;# 
   752  011D                     	;# 
   753  011E                     	;# 
   754  018C                     	;# 
   755  018D                     	;# 
   756  0191                     	;# 
   757  0191                     	;# 
   758  0192                     	;# 
   759  0193                     	;# 
   760  0193                     	;# 
   761  0193                     	;# 
   762  0194                     	;# 
   763  0195                     	;# 
   764  0196                     	;# 
   765  0199                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019C                     	;# 
   772  019C                     	;# 
   773  019D                     	;# 
   774  019E                     	;# 
   775  019F                     	;# 
   776  020C                     	;# 
   777  020D                     	;# 
   778  0211                     	;# 
   779  0211                     	;# 
   780  0212                     	;# 
   781  0212                     	;# 
   782  0213                     	;# 
   783  0213                     	;# 
   784  0214                     	;# 
   785  0214                     	;# 
   786  0215                     	;# 
   787  0215                     	;# 
   788  0215                     	;# 
   789  0216                     	;# 
   790  0216                     	;# 
   791  0217                     	;# 
   792  0217                     	;# 
   793  0219                     	;# 
   794  021A                     	;# 
   795  021B                     	;# 
   796  021C                     	;# 
   797  021D                     	;# 
   798  021E                     	;# 
   799  021F                     	;# 
   800  0291                     	;# 
   801  0291                     	;# 
   802  0292                     	;# 
   803  0293                     	;# 
   804  0294                     	;# 
   805  0295                     	;# 
   806  0295                     	;# 
   807  0296                     	;# 
   808  0298                     	;# 
   809  0298                     	;# 
   810  0299                     	;# 
   811  029A                     	;# 
   812  029B                     	;# 
   813  029C                     	;# 
   814  029C                     	;# 
   815  029D                     	;# 
   816  029E                     	;# 
   817  029E                     	;# 
   818  0311                     	;# 
   819  0311                     	;# 
   820  0312                     	;# 
   821  0313                     	;# 
   822  0318                     	;# 
   823  0318                     	;# 
   824  0319                     	;# 
   825  031A                     	;# 
   826  0394                     	;# 
   827  0395                     	;# 
   828  0396                     	;# 
   829  039A                     	;# 
   830  039C                     	;# 
   831  039D                     	;# 
   832  039E                     	;# 
   833  039F                     	;# 
   834  0415                     	;# 
   835  0416                     	;# 
   836  0417                     	;# 
   837  041C                     	;# 
   838  041D                     	;# 
   839  041E                     	;# 
   840  0FE4                     	;# 
   841  0FE5                     	;# 
   842  0FE6                     	;# 
   843  0FE7                     	;# 
   844  0FE8                     	;# 
   845  0FE9                     	;# 
   846  0FEA                     	;# 
   847  0FEB                     	;# 
   848  0FED                     	;# 
   849  0FEE                     	;# 
   850  0FEF                     	;# 
   851                           
   852                           	psect	idataBANK0
   853  06F1                     __pidataBANK0:
   854                           
   855                           ;initializer for _segdata
   856  06F1  343F               	retlw	63
   857  06F2  3406               	retlw	6
   858  06F3  345B               	retlw	91
   859  06F4  344F               	retlw	79
   860  06F5  3466               	retlw	102
   861  06F6  346D               	retlw	109
   862  06F7  347D               	retlw	125
   863  06F8  3407               	retlw	7
   864  06F9  347F               	retlw	127
   865  06FA  346F               	retlw	111
   866                           
   867                           ;initializer for main@F2502
   868  06FB  34FF               	retlw	255
   869  06FC  34FF               	retlw	255
   870  06FD  34FF               	retlw	255
   871  06FE  34FF               	retlw	255
   872  000D                     _PORTBbits	set	13
   873  008D                     _TRISBbits	set	141
   874  0095                     _OPTION_REGbits	set	149
   875  008D                     _TRISB	set	141
   876  008C                     _TRISA	set	140
   877  0097                     _WDTCON	set	151
   878  0098                     _OSCTUNE	set	152
   879  0099                     _OSCCON	set	153
   880  010D                     _LATBbits	set	269
   881  010C                     _LATAbits	set	268
   882  011E                     _APFCON1	set	286
   883  011D                     _APFCON0	set	285
   884  010D                     _LATB	set	269
   885  010C                     _LATA	set	268
   886  0116                     _BORCON	set	278
   887  018C                     _ANSELA	set	396
   888  018D                     _ANSELB	set	397
   889  020C                     _WPUA	set	524
   890  020D                     _WPUB	set	525
   891                           
   892                           	psect	cinit
   893  07EC                     start_initialization:	
   894                           ; #config settings
   895                           
   896  07EC                     __initialization:
   897                           
   898                           ; Initialize objects allocated to BANK0
   899  07EC  30F1               	movlw	low __pidataBANK0
   900  07ED  0084               	movwf	4
   901  07EE  3086               	movlw	(high __pidataBANK0)| (0+128)
   902  07EF  0085               	movwf	5
   903  07F0  3020               	movlw	low __pdataBANK0
   904  07F1  0086               	movwf	6
   905  07F2  3000               	movlw	high __pdataBANK0
   906  07F3  0087               	movwf	7
   907  07F4  300E               	movlw	14
   908  07F5  3186  26B8  3187   	fcall	init_ram
   909                           
   910                           ; Clear objects allocated to COMMON
   911  07F8  01FC               	clrf	__pbssCOMMON& (0+127)
   912                           
   913                           ; Clear objects allocated to BANK0
   914  07F9  01B6               	clrf	__pbssBANK0& (0+127)
   915  07FA  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   916  07FB  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   917  07FC  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   918  07FD                     end_of_initialization:	
   919                           ;End of C runtime variable initialization code
   920                           
   921  07FD                     __end_of__initialization:
   922  07FD  0020               	movlb	0
   923  07FE  3187  2FA1         	ljmp	_main	;jump to C main() function
   924                           
   925                           	psect	bssCOMMON
   926  007C                     __pbssCOMMON:
   927  007C                     _m_brightness:
   928  007C                     	ds	1
   929                           
   930                           	psect	bssBANK0
   931  0036                     __pbssBANK0:
   932  0036                     main@F2504:
   933  0036                     	ds	4
   934                           
   935                           	psect	dataBANK0
   936  0020                     __pdataBANK0:
   937  0020                     _segdata:
   938  0020                     	ds	10
   939  002A                     main@F2502:
   940  002A                     	ds	4
   941                           
   942                           	psect	inittext
   943  06B8                     init_ram:
   944  06B8  00FE               	movwf	btemp
   945  06B9                     initloop:
   946  06B9  0012               	moviw fsr0++
   947  06BA  001E               	movwi fsr1++
   948  06BB  0BFE               	decfsz	btemp,f
   949  06BC  2EB9               	goto	initloop
   950  06BD  3400               	retlw	0
   951                           
   952                           	psect	cstackCOMMON
   953  0070                     __pcstackCOMMON:
   954  0070                     ?_PIN_MANAGER_Initialize:
   955  0070                     ??_PIN_MANAGER_Initialize:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_OSCILLATOR_Initialize:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ??_OSCILLATOR_Initialize:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ?_WDT_Initialize:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ??_WDT_Initialize:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ?_encode_digit:	
   971                           ; 1 bytes @ 0x0
   972                           
   973  0070                     ??_encode_digit:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0070                     ?_set_brigthness:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0070                     ?_bit_delay:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0070                     ??_bit_delay:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ?_SYSTEM_Initialize:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ??_SYSTEM_Initialize:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ?_main:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ?_start:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ??_start:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?_stop:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ??_stop:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ?_write_byte:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     set_brigthness@on:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     encode_digit@digit:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015                           
  1016                           ; 1 bytes @ 0x0
  1017  0070                     	ds	1
  1018  0071                     ??_set_brigthness:
  1019  0071                     ??_write_byte:	
  1020                           ; 1 bytes @ 0x1
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0x1
  1024  0071                     	ds	1
  1025  0072                     write_byte@b:
  1026  0072                     set_brigthness@brightness:	
  1027                           ; 1 bytes @ 0x2
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x2
  1031  0072                     	ds	1
  1032  0073                     write_byte@ack:
  1033                           
  1034                           ; 1 bytes @ 0x3
  1035  0073                     	ds	1
  1036  0074                     write_byte@data:
  1037                           
  1038                           ; 1 bytes @ 0x4
  1039  0074                     	ds	1
  1040  0075                     write_byte@i:
  1041                           
  1042                           ; 1 bytes @ 0x5
  1043  0075                     	ds	1
  1044  0076                     ?_set_segments:
  1045  0076                     set_segments@length:	
  1046                           ; 1 bytes @ 0x6
  1047                           
  1048                           
  1049                           ; 1 bytes @ 0x6
  1050  0076                     	ds	1
  1051  0077                     set_segments@pos:
  1052                           
  1053                           ; 1 bytes @ 0x7
  1054  0077                     	ds	1
  1055  0078                     ??_set_segments:
  1056                           
  1057                           ; 1 bytes @ 0x8
  1058  0078                     	ds	1
  1059  0079                     set_segments@segments:
  1060                           
  1061                           ; 1 bytes @ 0x9
  1062  0079                     	ds	1
  1063  007A                     set_segments@k:
  1064                           
  1065                           ; 1 bytes @ 0xA
  1066  007A                     	ds	1
  1067  007B                     ??_main:
  1068                           
  1069                           ; 1 bytes @ 0xB
  1070  007B                     	ds	1
  1071                           
  1072                           	psect	cstackBANK0
  1073  002E                     __pcstackBANK0:
  1074  002E                     main@blank:
  1075                           
  1076                           ; 4 bytes @ 0x0
  1077  002E                     	ds	4
  1078  0032                     main@data:
  1079                           
  1080                           ; 4 bytes @ 0x4
  1081  0032                     	ds	4
  1082                           
  1083                           	psect	maintext
  1084  07A1                     __pmaintext:	
  1085 ;;
  1086 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1087 ;;
  1088 ;; *************** function _main *****************
  1089 ;; Defined at:
  1090 ;;		line 8 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  data            4    4[BANK0 ] unsigned char [4]
  1095 ;;  blank           4    0[BANK0 ] unsigned char [4]
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : B1F/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1105 ;;      Params:         0       0       0       0       0       0
  1106 ;;      Locals:         0       8       0       0       0       0
  1107 ;;      Temps:          1       0       0       0       0       0
  1108 ;;      Totals:         1       8       0       0       0       0
  1109 ;;Total ram usage:        9 bytes
  1110 ;; Hardware stack levels required when called:    3
  1111 ;; This function calls:
  1112 ;;		_SYSTEM_Initialize
  1113 ;;		_bit_delay
  1114 ;;		_encode_digit
  1115 ;;		_set_brigthness
  1116 ;;		_set_segments
  1117 ;; This function is called by:
  1118 ;;		Startup code after reset
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           
  1123                           ;psect for function _main
  1124  07A1                     _main:
  1125  07A1                     l964:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1128                           
  1129                           
  1130                           ;main.c: 11:     SYSTEM_Initialize();
  1131  07A1  3186  26E7  3187   	fcall	_SYSTEM_Initialize
  1132  07A4                     l966:
  1133  07A4  0022               	movlb	2	; select bank2
  1134  07A5  150C               	bsf	12,2	;volatile
  1135  07A6                     l968:
  1136                           
  1137                           ;main.c: 15:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
  1138  07A6  0020               	movlb	0	; select bank0
  1139  07A7  082D               	movf	main@F2502+3,w
  1140  07A8  00B5               	movwf	main@data+3
  1141  07A9  082C               	movf	main@F2502+2,w
  1142  07AA  00B4               	movwf	main@data+2
  1143  07AB  082B               	movf	main@F2502+1,w
  1144  07AC  00B3               	movwf	main@data+1
  1145  07AD  082A               	movf	main@F2502,w
  1146  07AE  00B2               	movwf	main@data
  1147  07AF                     l970:
  1148                           
  1149                           ;main.c: 16:     uint8_t blank[] = {0x00, 0x00, 0x00, 0x00};
  1150  07AF  3000               	movlw	0
  1151  07B0  00B1               	movwf	main@blank+3
  1152  07B1  3000               	movlw	0
  1153  07B2  00B0               	movwf	main@blank+2
  1154  07B3  3000               	movlw	0
  1155  07B4  00AF               	movwf	main@blank+1
  1156  07B5  3000               	movlw	0
  1157  07B6  00AE               	movwf	main@blank
  1158  07B7                     l972:
  1159                           
  1160                           ;main.c: 18:     data[0] = encode_digit(1);
  1161  07B7  3001               	movlw	1
  1162  07B8  3186  26C5  3187   	fcall	_encode_digit
  1163  07BB  00FB               	movwf	??_main
  1164  07BC  087B               	movf	??_main,w
  1165  07BD  0020               	movlb	0	; select bank0
  1166  07BE  00B2               	movwf	main@data
  1167  07BF                     l974:
  1168                           
  1169                           ;main.c: 19:     data[1] = encode_digit(2);
  1170  07BF  3002               	movlw	2
  1171  07C0  3186  26C5  3187   	fcall	_encode_digit
  1172  07C3  00FB               	movwf	??_main
  1173  07C4  087B               	movf	??_main,w
  1174  07C5  0020               	movlb	0	; select bank0
  1175  07C6  00B3               	movwf	main@data+1
  1176  07C7                     l976:
  1177                           
  1178                           ;main.c: 20:     data[2] = encode_digit(3);
  1179  07C7  3003               	movlw	3
  1180  07C8  3186  26C5  3187   	fcall	_encode_digit
  1181  07CB  00FB               	movwf	??_main
  1182  07CC  087B               	movf	??_main,w
  1183  07CD  0020               	movlb	0	; select bank0
  1184  07CE  00B4               	movwf	main@data+2
  1185  07CF                     l978:
  1186                           
  1187                           ;main.c: 21:     data[3] = encode_digit(4);
  1188  07CF  3004               	movlw	4
  1189  07D0  3186  26C5  3187   	fcall	_encode_digit
  1190  07D3  00FB               	movwf	??_main
  1191  07D4  087B               	movf	??_main,w
  1192  07D5  0020               	movlb	0	; select bank0
  1193  07D6  00B5               	movwf	main@data+3
  1194                           
  1195                           ;main.c: 24:     set_brigthness(0x0f, 1);
  1196  07D7  01F0               	clrf	set_brigthness@on
  1197  07D8  0AF0               	incf	set_brigthness@on,f
  1198  07D9  300F               	movlw	15
  1199  07DA  3186  26FF  3187   	fcall	_set_brigthness
  1200  07DD                     l980:
  1201                           
  1202                           ;main.c: 26:     set_segments(data, 4, 0);
  1203  07DD  3004               	movlw	4
  1204  07DE  00FB               	movwf	??_main
  1205  07DF  087B               	movf	??_main,w
  1206  07E0  00F6               	movwf	set_segments@length
  1207  07E1  01F7               	clrf	set_segments@pos
  1208  07E2  3032               	movlw	(low (main@data| 0))& (0+255)
  1209  07E3  3187  2728  3187   	fcall	_set_segments
  1210  07E6                     l982:
  1211                           
  1212                           ;main.c: 27:     bit_delay();
  1213  07E6  3186  26CD  3187   	fcall	_bit_delay
  1214  07E9                     l74:	
  1215                           ;main.c: 29:     while (1)
  1216                           
  1217  07E9                     l75:	
  1218                           ;main.c: 30:     {;main.c: 31:     }
  1219                           
  1220  07E9  2FE9               	goto	l74
  1221  07EA  3180  2802         	ljmp	start
  1222  07EC                     __end_of_main:
  1223                           
  1224                           	psect	text1
  1225  0728                     __ptext1:	
  1226 ;; *************** function _set_segments *****************
  1227 ;; Defined at:
  1228 ;;		line 102 in file "i2c_pp.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  segments        1    wreg     PTR const unsigned char 
  1231 ;;		 -> main@data(4), 
  1232 ;;  length          1    6[COMMON] unsigned char 
  1233 ;;  pos             1    7[COMMON] unsigned char 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  segments        1    9[COMMON] PTR const unsigned char 
  1236 ;;		 -> main@data(4), 
  1237 ;;  k               1   10[COMMON] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1247 ;;      Params:         2       0       0       0       0       0
  1248 ;;      Locals:         2       0       0       0       0       0
  1249 ;;      Temps:          1       0       0       0       0       0
  1250 ;;      Totals:         5       0       0       0       0       0
  1251 ;;Total ram usage:        5 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    2
  1254 ;; This function calls:
  1255 ;;		_start
  1256 ;;		_stop
  1257 ;;		_write_byte
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function _set_segments
  1265  0728                     _set_segments:
  1266                           
  1267                           ;incstack = 0
  1268                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1269                           ;set_segments@segments stored from wreg
  1270  0728  00F9               	movwf	set_segments@segments
  1271  0729                     l940:
  1272                           
  1273                           ;i2c_pp.c: 105:     start();
  1274  0729  3186  26D5  3187   	fcall	_start
  1275  072C                     l942:
  1276                           
  1277                           ;i2c_pp.c: 106:     write_byte(0x40);
  1278  072C  3040               	movlw	64
  1279  072D  3187  2762  3187   	fcall	_write_byte
  1280  0730                     l944:
  1281                           
  1282                           ;i2c_pp.c: 107:     stop();
  1283  0730  3186  26DE  3187   	fcall	_stop
  1284  0733                     l946:
  1285                           
  1286                           ;i2c_pp.c: 110:     start();
  1287  0733  3186  26D5  3187   	fcall	_start
  1288  0736                     l948:
  1289                           
  1290                           ;i2c_pp.c: 111:     write_byte(0xC0 + (pos & 0x03));
  1291  0736  0877               	movf	set_segments@pos,w
  1292  0737  3903               	andlw	3
  1293  0738  3EC0               	addlw	192
  1294  0739  3187  2762  3187   	fcall	_write_byte
  1295  073C                     l950:
  1296                           
  1297                           ;i2c_pp.c: 114:     for(uint8_t k = 0; k < length; k++){
  1298  073C  01FA               	clrf	set_segments@k
  1299  073D  2F4C               	goto	l956
  1300  073E                     l952:
  1301                           
  1302                           ;i2c_pp.c: 115:         write_byte(segments[k]);
  1303  073E  087A               	movf	set_segments@k,w
  1304  073F  0779               	addwf	set_segments@segments,w
  1305  0740  00F8               	movwf	??_set_segments
  1306  0741  0878               	movf	??_set_segments,w
  1307  0742  0086               	movwf	6
  1308  0743  0187               	clrf	7
  1309  0744  0801               	movf	1,w
  1310  0745  3187  2762  3187   	fcall	_write_byte
  1311  0748                     l954:
  1312                           
  1313                           ;i2c_pp.c: 116:     }
  1314  0748  3001               	movlw	1
  1315  0749  00F8               	movwf	??_set_segments
  1316  074A  0878               	movf	??_set_segments,w
  1317  074B  07FA               	addwf	set_segments@k,f
  1318  074C                     l956:
  1319  074C  0876               	movf	set_segments@length,w
  1320  074D  027A               	subwf	set_segments@k,w
  1321  074E  1C03               	skipc
  1322  074F  2F51               	goto	u101
  1323  0750  2F52               	goto	u100
  1324  0751                     u101:
  1325  0751  2F3E               	goto	l952
  1326  0752                     u100:
  1327  0752                     l958:
  1328                           
  1329                           ;i2c_pp.c: 118:     stop();
  1330  0752  3186  26DE  3187   	fcall	_stop
  1331                           
  1332                           ;i2c_pp.c: 121:     start();
  1333  0755  3186  26D5  3187   	fcall	_start
  1334  0758                     l960:
  1335                           
  1336                           ;i2c_pp.c: 122:     write_byte(0x80 + (m_brightness & 0x0f));
  1337  0758  087C               	movf	_m_brightness,w
  1338  0759  390F               	andlw	15
  1339  075A  3E80               	addlw	128
  1340  075B  3187  2762  3187   	fcall	_write_byte
  1341  075E                     l962:
  1342                           
  1343                           ;i2c_pp.c: 123:     stop();
  1344  075E  3186  26DE  3187   	fcall	_stop
  1345  0761                     l165:
  1346  0761  0008               	return
  1347  0762                     __end_of_set_segments:
  1348                           
  1349                           	psect	text2
  1350  0762                     __ptext2:	
  1351 ;; *************** function _write_byte *****************
  1352 ;; Defined at:
  1353 ;;		line 53 in file "i2c_pp.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  b               1    wreg     unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  b               1    2[COMMON] unsigned char 
  1358 ;;  i               1    5[COMMON] unsigned char 
  1359 ;;  data            1    4[COMMON] unsigned char 
  1360 ;;  ack             1    3[COMMON] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      unsigned char 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0, pclath, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1370 ;;      Params:         0       0       0       0       0       0
  1371 ;;      Locals:         4       0       0       0       0       0
  1372 ;;      Temps:          1       0       0       0       0       0
  1373 ;;      Totals:         5       0       0       0       0       0
  1374 ;;Total ram usage:        5 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    1
  1377 ;; This function calls:
  1378 ;;		_bit_delay
  1379 ;; This function is called by:
  1380 ;;		_set_segments
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           
  1385                           ;psect for function _write_byte
  1386  0762                     _write_byte:
  1387                           
  1388                           ;incstack = 0
  1389                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  1390                           ;write_byte@b stored from wreg
  1391  0762  00F2               	movwf	write_byte@b
  1392  0763                     l902:
  1393                           
  1394                           ;i2c_pp.c: 54:     uint8_t data = b;
  1395  0763  0872               	movf	write_byte@b,w
  1396  0764  00F1               	movwf	??_write_byte
  1397  0765  0871               	movf	??_write_byte,w
  1398  0766  00F4               	movwf	write_byte@data
  1399  0767                     l904:
  1400  0767  0021               	movlb	1	; select bank1
  1401  0768  128D               	bcf	13,5	;volatile
  1402  0769                     l906:
  1403                           
  1404                           ;i2c_pp.c: 57:     for(uint8_t i = 0; i < 8; i++){
  1405  0769  01F5               	clrf	write_byte@i
  1406  076A                     l129:	
  1407                           ;i2c_pp.c: 58:         do { LATBbits.LATB5 = 0; } while(0);
  1408                           
  1409  076A  0022               	movlb	2	; select bank2
  1410  076B  128D               	bcf	13,5	;volatile
  1411  076C                     l130:
  1412                           
  1413                           ;i2c_pp.c: 60:         if(data & 0x01){
  1414  076C  1C74               	btfss	write_byte@data,0
  1415  076D  2F6F               	goto	u61
  1416  076E  2F70               	goto	u60
  1417  076F                     u61:
  1418  076F  2F72               	goto	l135
  1419  0770                     u60:
  1420  0770                     l132:	
  1421                           ;i2c_pp.c: 61:             do { LATBbits.LATB2 = 1; } while(0);
  1422                           
  1423  0770  150D               	bsf	13,2	;volatile
  1424  0771  2F73               	goto	l137
  1425  0772                     l135:	
  1426                           ;i2c_pp.c: 63:             do { LATBbits.LATB2 = 0; } while(0);
  1427                           
  1428  0772  110D               	bcf	13,2	;volatile
  1429  0773                     l137:	
  1430                           ;i2c_pp.c: 66:         do { LATBbits.LATB5 = 1; } while(0);
  1431                           
  1432  0773  168D               	bsf	13,5	;volatile
  1433  0774                     l912:
  1434                           
  1435                           ;i2c_pp.c: 68:         data = data >> 1;
  1436  0774  3674               	lsrf	write_byte@data,w
  1437  0775  00F1               	movwf	??_write_byte
  1438  0776  0871               	movf	??_write_byte,w
  1439  0777  00F4               	movwf	write_byte@data
  1440                           
  1441                           ;i2c_pp.c: 69:     }
  1442  0778  3001               	movlw	1
  1443  0779  00F1               	movwf	??_write_byte
  1444  077A  0871               	movf	??_write_byte,w
  1445  077B  07F5               	addwf	write_byte@i,f
  1446  077C                     l914:
  1447  077C  3008               	movlw	8
  1448  077D  0275               	subwf	write_byte@i,w
  1449  077E  1C03               	skipc
  1450  077F  2F81               	goto	u71
  1451  0780  2F82               	goto	u70
  1452  0781                     u71:
  1453  0781  2F6A               	goto	l129
  1454  0782                     u70:
  1455  0782                     l139:	
  1456                           ;i2c_pp.c: 72:     do { LATBbits.LATB5 = 0; } while(0);
  1457                           
  1458  0782  128D               	bcf	13,5	;volatile
  1459  0783                     l141:	
  1460                           ;i2c_pp.c: 73:     do { LATBbits.LATB2 = 1; } while(0);
  1461                           
  1462  0783  150D               	bsf	13,2	;volatile
  1463  0784                     l143:	
  1464                           ;i2c_pp.c: 76:     do { LATBbits.LATB5 = 1; } while(0);
  1465                           
  1466  0784  168D               	bsf	13,5	;volatile
  1467  0785                     l145:	
  1468                           ;i2c_pp.c: 78:     do { TRISBbits.TRISB2 = 1; } while(0);
  1469                           
  1470  0785  0021               	movlb	1	; select bank1
  1471  0786  150D               	bsf	13,2	;volatile
  1472  0787                     l916:
  1473                           
  1474                           ;i2c_pp.c: 79:     bit_delay();
  1475  0787  3186  26CD  3187   	fcall	_bit_delay
  1476  078A                     l918:
  1477                           
  1478                           ;i2c_pp.c: 81:     uint8_t ack = PORTBbits.RB2;
  1479  078A  3000               	movlw	0
  1480  078B  0020               	movlb	0	; select bank0
  1481  078C  190D               	btfsc	13,2	;volatile
  1482  078D  3001               	movlw	1
  1483  078E  00F3               	movwf	write_byte@ack
  1484  078F                     l920:
  1485                           
  1486                           ;i2c_pp.c: 82:     if(ack == 0){
  1487  078F  0873               	movf	write_byte@ack,w
  1488  0790  1D03               	btfss	3,2
  1489  0791  2F93               	goto	u81
  1490  0792  2F94               	goto	u80
  1491  0793                     u81:
  1492  0793  2F98               	goto	l922
  1493  0794                     u80:
  1494  0794                     l148:	
  1495                           ;i2c_pp.c: 83:         do { TRISBbits.TRISB2 = 0; } while(0);
  1496                           
  1497  0794  0021               	movlb	1	; select bank1
  1498  0795  110D               	bcf	13,2	;volatile
  1499  0796                     l150:	
  1500                           ;i2c_pp.c: 84:         do { LATBbits.LATB2 = 0; } while(0);
  1501                           
  1502  0796  0022               	movlb	2	; select bank2
  1503  0797  110D               	bcf	13,2	;volatile
  1504  0798                     l922:
  1505                           
  1506                           ;i2c_pp.c: 87:     bit_delay();
  1507  0798  3186  26CD  3187   	fcall	_bit_delay
  1508  079B                     l924:
  1509  079B  0021               	movlb	1	; select bank1
  1510  079C  110D               	bcf	13,2	;volatile
  1511  079D                     l153:
  1512                           
  1513                           ;i2c_pp.c: 89:     bit_delay();
  1514  079D  3186  26CD  3187   	fcall	_bit_delay
  1515  07A0                     l154:
  1516  07A0  0008               	return
  1517  07A1                     __end_of_write_byte:
  1518                           
  1519                           	psect	text3
  1520  06CD                     __ptext3:	
  1521 ;; *************** function _bit_delay *****************
  1522 ;; Defined at:
  1523 ;;		line 27 in file "i2c_pp.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1537 ;;      Params:         0       0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0
  1539 ;;      Temps:          1       0       0       0       0       0
  1540 ;;      Totals:         1       0       0       0       0       0
  1541 ;;Total ram usage:        1 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		_main
  1547 ;;		_write_byte
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _bit_delay
  1553  06CD                     _bit_delay:
  1554  06CD                     l880:	
  1555                           ;incstack = 0
  1556                           ; Regs used in _bit_delay: [wreg]
  1557                           
  1558                           
  1559                           ;i2c_pp.c: 28:     _delay((unsigned long)((10)*(16000000/4000.0)));
  1560  06CD  3034               	movlw	52
  1561  06CE  00F0               	movwf	??_bit_delay
  1562  06CF  30F2               	movlw	242
  1563  06D0                     u117:
  1564  06D0  0B89               	decfsz	9,f
  1565  06D1  2ED0               	goto	u117
  1566  06D2  0BF0               	decfsz	??_bit_delay,f
  1567  06D3  2ED0               	goto	u117
  1568  06D4                     l92:
  1569  06D4  0008               	return
  1570  06D5                     __end_of_bit_delay:
  1571                           
  1572                           	psect	text4
  1573  06DE                     __ptext4:	
  1574 ;; *************** function _stop *****************
  1575 ;; Defined at:
  1576 ;;		line 42 in file "i2c_pp.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		None
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1590 ;;      Params:         0       0       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0       0
  1592 ;;      Temps:          0       0       0       0       0       0
  1593 ;;      Totals:         0       0       0       0       0       0
  1594 ;;Total ram usage:        0 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_set_segments
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           
  1604                           ;psect for function _stop
  1605  06DE                     _stop:
  1606  06DE                     l110:	
  1607                           ;incstack = 0
  1608                           ; Regs used in _stop: []
  1609                           ;i2c_pp.c: 43:     do { TRISBbits.TRISB2 = 0; } while(0);
  1610                           
  1611  06DE  0021               	movlb	1	; select bank1
  1612  06DF  110D               	bcf	13,2	;volatile
  1613  06E0                     l112:	
  1614                           ;i2c_pp.c: 44:     do { TRISBbits.TRISB5 = 0; } while(0);
  1615                           
  1616  06E0  128D               	bcf	13,5	;volatile
  1617  06E1                     l114:	
  1618                           ;i2c_pp.c: 46:     do { LATBbits.LATB5 = 0; } while(0);
  1619                           
  1620  06E1  0022               	movlb	2	; select bank2
  1621  06E2  128D               	bcf	13,5	;volatile
  1622  06E3                     l116:	
  1623                           ;i2c_pp.c: 47:     do { LATBbits.LATB2 = 0; } while(0);
  1624                           
  1625  06E3  110D               	bcf	13,2	;volatile
  1626  06E4                     l118:	
  1627                           ;i2c_pp.c: 49:     do { LATBbits.LATB5 = 1; } while(0);
  1628                           
  1629  06E4  168D               	bsf	13,5	;volatile
  1630  06E5                     l120:	
  1631                           ;i2c_pp.c: 50:     do { LATBbits.LATB2 = 1; } while(0);
  1632                           
  1633  06E5  150D               	bsf	13,2	;volatile
  1634  06E6                     l122:
  1635  06E6  0008               	return
  1636  06E7                     __end_of_stop:
  1637                           
  1638                           	psect	text5
  1639  06D5                     __ptext5:	
  1640 ;; *************** function _start *****************
  1641 ;; Defined at:
  1642 ;;		line 31 in file "i2c_pp.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		None
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1656 ;;      Params:         0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_set_segments
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function _start
  1671  06D5                     _start:
  1672  06D5                     l95:	
  1673                           ;incstack = 0
  1674                           ; Regs used in _start: []
  1675                           ;i2c_pp.c: 32:     do { TRISBbits.TRISB2 = 0; } while(0);
  1676                           
  1677  06D5  0021               	movlb	1	; select bank1
  1678  06D6  110D               	bcf	13,2	;volatile
  1679  06D7                     l97:	
  1680                           ;i2c_pp.c: 33:     do { TRISBbits.TRISB5 = 0; } while(0);
  1681                           
  1682  06D7  128D               	bcf	13,5	;volatile
  1683  06D8                     l99:	
  1684                           ;i2c_pp.c: 35:     do { LATBbits.LATB2 = 1; } while(0);
  1685                           
  1686  06D8  0022               	movlb	2	; select bank2
  1687  06D9  150D               	bsf	13,2	;volatile
  1688  06DA                     l101:	
  1689                           ;i2c_pp.c: 36:     do { LATBbits.LATB5 = 1; } while(0);
  1690                           
  1691  06DA  168D               	bsf	13,5	;volatile
  1692  06DB                     l103:	
  1693                           ;i2c_pp.c: 38:     do { LATBbits.LATB2 = 0; } while(0);
  1694                           
  1695  06DB  110D               	bcf	13,2	;volatile
  1696  06DC                     l105:	
  1697                           ;i2c_pp.c: 39:     do { LATBbits.LATB5 = 0; } while(0);
  1698                           
  1699  06DC  128D               	bcf	13,5	;volatile
  1700  06DD                     l107:
  1701  06DD  0008               	return
  1702  06DE                     __end_of_start:
  1703                           
  1704                           	psect	text6
  1705  06FF                     __ptext6:	
  1706 ;; *************** function _set_brigthness *****************
  1707 ;; Defined at:
  1708 ;;		line 94 in file "i2c_pp.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  brightness      1    wreg     unsigned char 
  1711 ;;  on              1    0[COMMON] unsigned char 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  brightness      1    2[COMMON] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1723 ;;      Params:         1       0       0       0       0       0
  1724 ;;      Locals:         1       0       0       0       0       0
  1725 ;;      Temps:          1       0       0       0       0       0
  1726 ;;      Totals:         3       0       0       0       0       0
  1727 ;;Total ram usage:        3 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _set_brigthness
  1738  06FF                     _set_brigthness:
  1739                           
  1740                           ;incstack = 0
  1741                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1742                           ;set_brigthness@brightness stored from wreg
  1743  06FF  00F2               	movwf	set_brigthness@brightness
  1744  0700                     l934:
  1745                           
  1746                           ;i2c_pp.c: 95:     if(on == 1){
  1747  0700  0370               	decf	set_brigthness@on,w
  1748  0701  1D03               	btfss	3,2
  1749  0702  2F04               	goto	u91
  1750  0703  2F05               	goto	u90
  1751  0704                     u91:
  1752  0704  2F0C               	goto	l938
  1753  0705                     u90:
  1754  0705                     l936:
  1755                           
  1756                           ;i2c_pp.c: 96:         m_brightness = (brightness & 0x7 | 0x08);
  1757  0705  0872               	movf	set_brigthness@brightness,w
  1758  0706  3907               	andlw	7
  1759  0707  3808               	iorlw	8
  1760  0708  00F1               	movwf	??_set_brigthness
  1761  0709  0871               	movf	??_set_brigthness,w
  1762  070A  00FC               	movwf	_m_brightness
  1763                           
  1764                           ;i2c_pp.c: 97:     }else{
  1765  070B  2F11               	goto	l159
  1766  070C                     l938:
  1767                           
  1768                           ;i2c_pp.c: 98:         m_brightness = (brightness & 0x7 | 0x00);
  1769  070C  0872               	movf	set_brigthness@brightness,w
  1770  070D  3907               	andlw	7
  1771  070E  00F1               	movwf	??_set_brigthness
  1772  070F  0871               	movf	??_set_brigthness,w
  1773  0710  00FC               	movwf	_m_brightness
  1774  0711                     l159:
  1775  0711  0008               	return
  1776  0712                     __end_of_set_brigthness:
  1777                           
  1778                           	psect	text7
  1779  06C5                     __ptext7:	
  1780 ;; *************** function _encode_digit *****************
  1781 ;; Defined at:
  1782 ;;		line 126 in file "i2c_pp.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  digit           1    wreg     unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  digit           1    0[COMMON] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      unsigned char 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1796 ;;      Params:         0       0       0       0       0       0
  1797 ;;      Locals:         1       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0
  1799 ;;      Totals:         1       0       0       0       0       0
  1800 ;;Total ram usage:        1 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _encode_digit
  1811  06C5                     _encode_digit:
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  1815                           ;encode_digit@digit stored from wreg
  1816  06C5  00F0               	movwf	encode_digit@digit
  1817  06C6                     l930:
  1818                           
  1819                           ;i2c_pp.c: 127:     return segdata[digit & 0x0f];
  1820  06C6  0870               	movf	encode_digit@digit,w
  1821  06C7  390F               	andlw	15
  1822  06C8  3E20               	addlw	(low (_segdata| 0))& (0+255)
  1823  06C9  0086               	movwf	6
  1824  06CA  0187               	clrf	7
  1825  06CB  0801               	movf	1,w
  1826  06CC                     l168:
  1827  06CC  0008               	return
  1828  06CD                     __end_of_encode_digit:
  1829                           
  1830                           	psect	text8
  1831  06E7                     __ptext8:	
  1832 ;; *************** function _SYSTEM_Initialize *****************
  1833 ;; Defined at:
  1834 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1848 ;;      Params:         0       0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    1
  1855 ;; This function calls:
  1856 ;;		_OSCILLATOR_Initialize
  1857 ;;		_PIN_MANAGER_Initialize
  1858 ;;		_WDT_Initialize
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _SYSTEM_Initialize
  1866  06E7                     _SYSTEM_Initialize:
  1867  06E7                     l928:	
  1868                           ;incstack = 0
  1869                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1870                           
  1871                           
  1872                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1873  06E7  3187  2712  3186   	fcall	_PIN_MANAGER_Initialize
  1874                           
  1875                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1876  06EA  3186  26BE  3186   	fcall	_OSCILLATOR_Initialize
  1877                           
  1878                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1879  06ED  3186  26B4  3186   	fcall	_WDT_Initialize
  1880  06F0                     l17:
  1881  06F0  0008               	return
  1882  06F1                     __end_of_SYSTEM_Initialize:
  1883                           
  1884                           	psect	text9
  1885  06B4                     __ptext9:	
  1886 ;; *************** function _WDT_Initialize *****************
  1887 ;; Defined at:
  1888 ;;		line 68 in file "mcc_generated_files/mcc.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1902 ;;      Params:         0       0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_SYSTEM_Initialize
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _WDT_Initialize
  1917  06B4                     _WDT_Initialize:
  1918  06B4                     l900:	
  1919                           ;incstack = 0
  1920                           ; Regs used in _WDT_Initialize: [wreg]
  1921                           
  1922                           
  1923                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  1924  06B4  3016               	movlw	22
  1925  06B5  0021               	movlb	1	; select bank1
  1926  06B6  0097               	movwf	23	;volatile
  1927  06B7                     l23:
  1928  06B7  0008               	return
  1929  06B8                     __end_of_WDT_Initialize:
  1930                           
  1931                           	psect	text10
  1932  0712                     __ptext10:	
  1933 ;; *************** function _PIN_MANAGER_Initialize *****************
  1934 ;; Defined at:
  1935 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1949 ;;      Params:         0       0       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0       0
  1952 ;;      Totals:         0       0       0       0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_SYSTEM_Initialize
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _PIN_MANAGER_Initialize
  1964  0712                     _PIN_MANAGER_Initialize:
  1965  0712                     l882:	
  1966                           ;incstack = 0
  1967                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1968                           
  1969                           
  1970                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1971  0712  0022               	movlb	2	; select bank2
  1972  0713  018C               	clrf	12	;volatile
  1973                           
  1974                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1975  0714  018D               	clrf	13	;volatile
  1976  0715                     l884:
  1977                           
  1978                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFB;
  1979  0715  30FB               	movlw	251
  1980  0716  0021               	movlb	1	; select bank1
  1981  0717  008C               	movwf	12	;volatile
  1982  0718                     l886:
  1983                           
  1984                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  1985  0718  30FF               	movlw	255
  1986  0719  008D               	movwf	13	;volatile
  1987  071A                     l888:
  1988                           
  1989                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xDA;
  1990  071A  30DA               	movlw	218
  1991  071B  0023               	movlb	3	; select bank3
  1992  071C  008D               	movwf	13	;volatile
  1993  071D                     l890:
  1994                           
  1995                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1B;
  1996  071D  301B               	movlw	27
  1997  071E  008C               	movwf	12	;volatile
  1998                           
  1999                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2000  071F  0024               	movlb	4	; select bank4
  2001  0720  018D               	clrf	13	;volatile
  2002                           
  2003                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2004  0721  018C               	clrf	12	;volatile
  2005  0722                     l892:
  2006                           
  2007                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2008  0722  0021               	movlb	1	; select bank1
  2009  0723  1795               	bsf	21,7	;volatile
  2010                           
  2011                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2012  0724  0022               	movlb	2	; select bank2
  2013  0725  019D               	clrf	29	;volatile
  2014                           
  2015                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2016  0726  019E               	clrf	30	;volatile
  2017  0727                     l48:
  2018  0727  0008               	return
  2019  0728                     __end_of_PIN_MANAGER_Initialize:
  2020                           
  2021                           	psect	text11
  2022  06BE                     __ptext11:	
  2023 ;; *************** function _OSCILLATOR_Initialize *****************
  2024 ;; Defined at:
  2025 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2039 ;;      Params:         0       0       0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0
  2042 ;;      Totals:         0       0       0       0       0       0
  2043 ;;Total ram usage:        0 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_SYSTEM_Initialize
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function _OSCILLATOR_Initialize
  2054  06BE                     _OSCILLATOR_Initialize:
  2055  06BE                     l894:	
  2056                           ;incstack = 0
  2057                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2058                           
  2059                           
  2060                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x78;
  2061  06BE  3078               	movlw	120
  2062  06BF  0021               	movlb	1	; select bank1
  2063  06C0  0099               	movwf	25	;volatile
  2064  06C1                     l896:
  2065                           
  2066                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  2067  06C1  0198               	clrf	24	;volatile
  2068  06C2                     l898:
  2069                           
  2070                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2071  06C2  0022               	movlb	2	; select bank2
  2072  06C3  0196               	clrf	22	;volatile
  2073  06C4                     l20:
  2074  06C4  0008               	return
  2075  06C5                     __end_of_OSCILLATOR_Initialize:
  2076  007E                     btemp	set	126	;btemp
  2077  007E                     wtemp0	set	126
  2078                           
  2079                           	psect	config
  2080                           
  2081                           ;Config register CONFIG1 @ 0x8007
  2082                           ;	Oscillator Selection
  2083                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2084                           ;	Watchdog Timer Enable
  2085                           ;	WDTE = OFF, WDT disabled
  2086                           ;	Power-up Timer Enable
  2087                           ;	PWRTE = OFF, PWRT disabled
  2088                           ;	MCLR Pin Function Select
  2089                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2090                           ;	Flash Program Memory Code Protection
  2091                           ;	CP = OFF, Program memory code protection is disabled
  2092                           ;	Data Memory Code Protection
  2093                           ;	CPD = OFF, Data memory code protection is disabled
  2094                           ;	Brown-out Reset Enable
  2095                           ;	BOREN = ON, Brown-out Reset enabled
  2096                           ;	Clock Out Enable
  2097                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2098                           ;	Internal/External Switchover
  2099                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2100                           ;	Fail-Safe Clock Monitor Enable
  2101                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2102  8007                     	org	32775
  2103  8007  3FE4               	dw	16356
  2104                           
  2105                           ;Config register CONFIG2 @ 0x8008
  2106                           ;	Flash Memory Self-Write Protection
  2107                           ;	WRT = OFF, Write protection off
  2108                           ;	PLL Enable
  2109                           ;	PLLEN = OFF, 4x PLL disabled
  2110                           ;	Stack Overflow/Underflow Reset Enable
  2111                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2112                           ;	Brown-out Reset Voltage Selection
  2113                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2114                           ;	Low-Voltage Programming Enable
  2115                           ;	LVP = ON, Low-voltage programming enabled
  2116  8008                     	org	32776
  2117  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      8      26
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> main@data(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_set_segments
    _set_segments->_write_byte
    _write_byte->_bit_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     702
                                             11 COMMON     1     1      0
                                              0 BANK0      8     8      0
                  _SYSTEM_Initialize
                          _bit_delay
                       _encode_digit
                     _set_brigthness
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_segments                                         5     3      2     440
                                              6 COMMON     5     3      2
                              _start
                               _stop
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     143
                                              1 COMMON     5     5      0
                          _bit_delay
 ---------------------------------------------------------------------------------
 (3) _bit_delay                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _encode_digit                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _bit_delay
   _encode_digit
   _set_brigthness
   _set_segments
     _start
     _stop
     _write_byte
       _bit_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      27       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      1A       6       32.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      27      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Oct 04 14:03:13 2020

                             l20 06C4                               l23 06B7                               l17 06F0  
                             l48 0727                               l74 07E9                               l75 07E9  
                             l92 06D4                               l95 06D5                               l97 06D7  
                             l99 06D8                               u60 0770                               u61 076F  
                             u70 0782                               u71 0781                               u80 0794  
                             u81 0793                               u90 0705                               u91 0704  
                            l101 06DA                              l110 06DE                              l103 06DB  
                            l120 06E5                              l112 06E0                              l105 06DC  
                            l122 06E6                              l114 06E1                              l130 076C  
                            l107 06DD                              l116 06E3                              l132 0770  
                            l141 0783                              l118 06E4                              l150 0796  
                            l143 0784                              l135 0772                              l153 079D  
                            l145 0785                              l137 0773                              l129 076A  
                            l154 07A0                              l139 0782                              l148 0794  
                            l165 0761                              l159 0711                              l168 06CC  
                            l900 06B4                              l902 0763                              l920 078F  
                            l912 0774                              l904 0767                              l930 06C6  
                            l922 0798                              l914 077C                              l906 0769  
                            l924 079B                              l916 0787                              l940 0729  
                            l934 0700                              l918 078A                              l950 073C  
                            l942 072C                              l928 06E7                              l936 0705  
                            l880 06CD                              l960 0758                              l952 073E  
                            l944 0730                              l890 071D                              l882 0712  
                            l938 070C                              l962 075E                              l954 0748  
                            l946 0733                              l970 07AF                              l892 0722  
                            l884 0715                              l956 074C                              l948 0736  
                            l980 07DD                              l972 07B7                              l964 07A1  
                            l894 06BE                              l886 0718                              l958 0752  
                            l982 07E6                              l974 07BF                              l966 07A4  
                            l896 06C1                              l888 071A                              l976 07C7  
                            l968 07A6                              l898 06C2                              l978 07CF  
                            u100 0752                              u101 0751                              u117 06D0  
                            wreg 0009                   ??_encode_digit 0070                             _LATA 010C  
                           _LATB 010D                             _WPUA 020C                             _WPUB 020D  
                           _main 07A1                    write_byte@ack 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             _stop 06DE  
                           start 0002   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 06C5  
                          ?_main 0070                            ?_stop 0070                            _TRISA 008C  
                          _TRISB 008D                   _WDT_Initialize 06B4                   write_byte@data 0074  
                          _start 06D5                            status 0003                            wtemp0 007E  
                __initialization 07EC                     __end_of_main 07EC                     __end_of_stop 06E7  
                         ??_main 007B                           ??_stop 0070           __end_of_WDT_Initialize 06B8  
                set_segments@pos 0077                           _ANSELA 018C                           _ANSELB 018D  
                         ?_start 0070                           _BORCON 0116                           _OSCCON 0099  
                         _WDTCON 0097             __end_of_encode_digit 06CD                  ?_WDT_Initialize 0070  
        __size_of_set_brigthness 0013                _SYSTEM_Initialize 06E7          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070         set_brigthness@brightness 0072                   __pcstackCOMMON 0070  
                   __pidataBANK0 06F1              ??_SYSTEM_Initialize 0070                    __end_of_start 06DE  
             __size_of_bit_delay 0008                   _OPTION_REGbits 0095        __end_of_SYSTEM_Initialize 06F1  
                        ??_start 0070                       __pbssBANK0 0036                       __pmaintext 07A1  
                        _APFCON0 011D                          _APFCON1 011E               set_segments@length 0076  
                        _OSCTUNE 0098                __end_of_bit_delay 06D5            __size_of_encode_digit 0008  
                  ?_set_segments 0076                          __ptext1 0728                          __ptext2 0762  
                        __ptext3 06CD                          __ptext4 06DE                          __ptext5 06D5  
                        __ptext6 06FF                          __ptext7 06C5                          __ptext8 06E7  
                        __ptext9 06B4            _OSCILLATOR_Initialize 06BE                          _segdata 0020  
       ??_PIN_MANAGER_Initialize 0070                   _set_brigthness 06FF       __size_of_SYSTEM_Initialize 000A  
           end_of_initialization 07FD                     _encode_digit 06C5                          init_ram 06B8  
                        initloop 06B9             set_segments@segments 0079                   ??_set_segments 0078  
               ??_WDT_Initialize 0070                        _PORTBbits 000D                     _m_brightness 007C  
         __end_of_set_brigthness 0712                        _TRISBbits 008D                       _write_byte 0762  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07EC                  ?_set_brigthness 0070  
__size_of_PIN_MANAGER_Initialize 0016                      __pdataBANK0 0020                      __pbssCOMMON 007C  
                      ___latbits 0001                    __pcstackBANK0 002E             __end_of_set_segments 0762  
               set_brigthness@on 0070           _PIN_MANAGER_Initialize 0712                        _bit_delay 06CD  
                    ?_write_byte 0070                   __size_of_start 0009                         _LATAbits 010C  
                       _LATBbits 010D                       ?_bit_delay 0070                        main@F2502 002A  
                      main@F2504 0036                encode_digit@digit 0070                        main@blank 002E  
                    write_byte@b 0072                      write_byte@i 0075              __size_of_write_byte 003F  
                  set_segments@k 007A          ??_OSCILLATOR_Initialize 0070                 ??_set_brigthness 0071  
          __size_of_set_segments 003A                         __ptext10 0712                         __ptext11 06BE  
                  __size_of_main 004B                    __size_of_stop 0009                      ??_bit_delay 0070  
                       main@data 0032                     _set_segments 0728          __size_of_WDT_Initialize 0004  
        ?_PIN_MANAGER_Initialize 0070                     ??_write_byte 0071                    ?_encode_digit 0070  
 __end_of_PIN_MANAGER_Initialize 0728               __end_of_write_byte 07A1  
