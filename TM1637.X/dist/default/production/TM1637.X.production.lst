

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 25 23:15:22 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F1827 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  011E                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020C                     	;# 
   152  020D                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0213                     	;# 
   159  0214                     	;# 
   160  0214                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0216                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0217                     	;# 
   168  0219                     	;# 
   169  021A                     	;# 
   170  021B                     	;# 
   171  021C                     	;# 
   172  021D                     	;# 
   173  021E                     	;# 
   174  021F                     	;# 
   175  0291                     	;# 
   176  0291                     	;# 
   177  0292                     	;# 
   178  0293                     	;# 
   179  0294                     	;# 
   180  0295                     	;# 
   181  0295                     	;# 
   182  0296                     	;# 
   183  0298                     	;# 
   184  0298                     	;# 
   185  0299                     	;# 
   186  029A                     	;# 
   187  029B                     	;# 
   188  029C                     	;# 
   189  029C                     	;# 
   190  029D                     	;# 
   191  029E                     	;# 
   192  029E                     	;# 
   193  0311                     	;# 
   194  0311                     	;# 
   195  0312                     	;# 
   196  0313                     	;# 
   197  0318                     	;# 
   198  0318                     	;# 
   199  0319                     	;# 
   200  031A                     	;# 
   201  0394                     	;# 
   202  0395                     	;# 
   203  0396                     	;# 
   204  039A                     	;# 
   205  039C                     	;# 
   206  039D                     	;# 
   207  039E                     	;# 
   208  039F                     	;# 
   209  0415                     	;# 
   210  0416                     	;# 
   211  0417                     	;# 
   212  041C                     	;# 
   213  041D                     	;# 
   214  041E                     	;# 
   215  0FE4                     	;# 
   216  0FE5                     	;# 
   217  0FE6                     	;# 
   218  0FE7                     	;# 
   219  0FE8                     	;# 
   220  0FE9                     	;# 
   221  0FEA                     	;# 
   222  0FEB                     	;# 
   223  0FED                     	;# 
   224  0FEE                     	;# 
   225  0FEF                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  0111                     	;# 
   275  0112                     	;# 
   276  0113                     	;# 
   277  0114                     	;# 
   278  0115                     	;# 
   279  0116                     	;# 
   280  0117                     	;# 
   281  0118                     	;# 
   282  0119                     	;# 
   283  011A                     	;# 
   284  011B                     	;# 
   285  011D                     	;# 
   286  011E                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0191                     	;# 
   290  0191                     	;# 
   291  0192                     	;# 
   292  0193                     	;# 
   293  0193                     	;# 
   294  0193                     	;# 
   295  0194                     	;# 
   296  0195                     	;# 
   297  0196                     	;# 
   298  0199                     	;# 
   299  019A                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019B                     	;# 
   303  019B                     	;# 
   304  019C                     	;# 
   305  019C                     	;# 
   306  019D                     	;# 
   307  019E                     	;# 
   308  019F                     	;# 
   309  020C                     	;# 
   310  020D                     	;# 
   311  0211                     	;# 
   312  0211                     	;# 
   313  0212                     	;# 
   314  0212                     	;# 
   315  0213                     	;# 
   316  0213                     	;# 
   317  0214                     	;# 
   318  0214                     	;# 
   319  0215                     	;# 
   320  0215                     	;# 
   321  0215                     	;# 
   322  0216                     	;# 
   323  0216                     	;# 
   324  0217                     	;# 
   325  0217                     	;# 
   326  0219                     	;# 
   327  021A                     	;# 
   328  021B                     	;# 
   329  021C                     	;# 
   330  021D                     	;# 
   331  021E                     	;# 
   332  021F                     	;# 
   333  0291                     	;# 
   334  0291                     	;# 
   335  0292                     	;# 
   336  0293                     	;# 
   337  0294                     	;# 
   338  0295                     	;# 
   339  0295                     	;# 
   340  0296                     	;# 
   341  0298                     	;# 
   342  0298                     	;# 
   343  0299                     	;# 
   344  029A                     	;# 
   345  029B                     	;# 
   346  029C                     	;# 
   347  029C                     	;# 
   348  029D                     	;# 
   349  029E                     	;# 
   350  029E                     	;# 
   351  0311                     	;# 
   352  0311                     	;# 
   353  0312                     	;# 
   354  0313                     	;# 
   355  0318                     	;# 
   356  0318                     	;# 
   357  0319                     	;# 
   358  031A                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  039A                     	;# 
   363  039C                     	;# 
   364  039D                     	;# 
   365  039E                     	;# 
   366  039F                     	;# 
   367  0415                     	;# 
   368  0416                     	;# 
   369  0417                     	;# 
   370  041C                     	;# 
   371  041D                     	;# 
   372  041E                     	;# 
   373  0FE4                     	;# 
   374  0FE5                     	;# 
   375  0FE6                     	;# 
   376  0FE7                     	;# 
   377  0FE8                     	;# 
   378  0FE9                     	;# 
   379  0FEA                     	;# 
   380  0FEB                     	;# 
   381  0FED                     	;# 
   382  0FEE                     	;# 
   383  0FEF                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  010C                     	;# 
   431  010D                     	;# 
   432  0111                     	;# 
   433  0112                     	;# 
   434  0113                     	;# 
   435  0114                     	;# 
   436  0115                     	;# 
   437  0116                     	;# 
   438  0117                     	;# 
   439  0118                     	;# 
   440  0119                     	;# 
   441  011A                     	;# 
   442  011B                     	;# 
   443  011D                     	;# 
   444  011E                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  0191                     	;# 
   448  0191                     	;# 
   449  0192                     	;# 
   450  0193                     	;# 
   451  0193                     	;# 
   452  0193                     	;# 
   453  0194                     	;# 
   454  0195                     	;# 
   455  0196                     	;# 
   456  0199                     	;# 
   457  019A                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019C                     	;# 
   463  019C                     	;# 
   464  019D                     	;# 
   465  019E                     	;# 
   466  019F                     	;# 
   467  020C                     	;# 
   468  020D                     	;# 
   469  0211                     	;# 
   470  0211                     	;# 
   471  0212                     	;# 
   472  0212                     	;# 
   473  0213                     	;# 
   474  0213                     	;# 
   475  0214                     	;# 
   476  0214                     	;# 
   477  0215                     	;# 
   478  0215                     	;# 
   479  0215                     	;# 
   480  0216                     	;# 
   481  0216                     	;# 
   482  0217                     	;# 
   483  0217                     	;# 
   484  0219                     	;# 
   485  021A                     	;# 
   486  021B                     	;# 
   487  021C                     	;# 
   488  021D                     	;# 
   489  021E                     	;# 
   490  021F                     	;# 
   491  0291                     	;# 
   492  0291                     	;# 
   493  0292                     	;# 
   494  0293                     	;# 
   495  0294                     	;# 
   496  0295                     	;# 
   497  0295                     	;# 
   498  0296                     	;# 
   499  0298                     	;# 
   500  0298                     	;# 
   501  0299                     	;# 
   502  029A                     	;# 
   503  029B                     	;# 
   504  029C                     	;# 
   505  029C                     	;# 
   506  029D                     	;# 
   507  029E                     	;# 
   508  029E                     	;# 
   509  0311                     	;# 
   510  0311                     	;# 
   511  0312                     	;# 
   512  0313                     	;# 
   513  0318                     	;# 
   514  0318                     	;# 
   515  0319                     	;# 
   516  031A                     	;# 
   517  0394                     	;# 
   518  0395                     	;# 
   519  0396                     	;# 
   520  039A                     	;# 
   521  039C                     	;# 
   522  039D                     	;# 
   523  039E                     	;# 
   524  039F                     	;# 
   525  0415                     	;# 
   526  0416                     	;# 
   527  0417                     	;# 
   528  041C                     	;# 
   529  041D                     	;# 
   530  041E                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  0011                     	;# 
   557  0012                     	;# 
   558  0013                     	;# 
   559  0014                     	;# 
   560  0015                     	;# 
   561  0016                     	;# 
   562  0016                     	;# 
   563  0017                     	;# 
   564  0018                     	;# 
   565  0019                     	;# 
   566  001A                     	;# 
   567  001B                     	;# 
   568  001C                     	;# 
   569  001E                     	;# 
   570  001F                     	;# 
   571  008C                     	;# 
   572  008D                     	;# 
   573  0091                     	;# 
   574  0092                     	;# 
   575  0093                     	;# 
   576  0094                     	;# 
   577  0095                     	;# 
   578  0096                     	;# 
   579  0097                     	;# 
   580  0098                     	;# 
   581  0099                     	;# 
   582  009A                     	;# 
   583  009B                     	;# 
   584  009B                     	;# 
   585  009C                     	;# 
   586  009D                     	;# 
   587  009E                     	;# 
   588  010C                     	;# 
   589  010D                     	;# 
   590  0111                     	;# 
   591  0112                     	;# 
   592  0113                     	;# 
   593  0114                     	;# 
   594  0115                     	;# 
   595  0116                     	;# 
   596  0117                     	;# 
   597  0118                     	;# 
   598  0119                     	;# 
   599  011A                     	;# 
   600  011B                     	;# 
   601  011D                     	;# 
   602  011E                     	;# 
   603  018C                     	;# 
   604  018D                     	;# 
   605  0191                     	;# 
   606  0191                     	;# 
   607  0192                     	;# 
   608  0193                     	;# 
   609  0193                     	;# 
   610  0193                     	;# 
   611  0194                     	;# 
   612  0195                     	;# 
   613  0196                     	;# 
   614  0199                     	;# 
   615  019A                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019C                     	;# 
   621  019C                     	;# 
   622  019D                     	;# 
   623  019E                     	;# 
   624  019F                     	;# 
   625  020C                     	;# 
   626  020D                     	;# 
   627  0211                     	;# 
   628  0211                     	;# 
   629  0212                     	;# 
   630  0212                     	;# 
   631  0213                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0214                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0216                     	;# 
   639  0216                     	;# 
   640  0217                     	;# 
   641  0217                     	;# 
   642  0219                     	;# 
   643  021A                     	;# 
   644  021B                     	;# 
   645  021C                     	;# 
   646  021D                     	;# 
   647  021E                     	;# 
   648  021F                     	;# 
   649  0291                     	;# 
   650  0291                     	;# 
   651  0292                     	;# 
   652  0293                     	;# 
   653  0294                     	;# 
   654  0295                     	;# 
   655  0295                     	;# 
   656  0296                     	;# 
   657  0298                     	;# 
   658  0298                     	;# 
   659  0299                     	;# 
   660  029A                     	;# 
   661  029B                     	;# 
   662  029C                     	;# 
   663  029C                     	;# 
   664  029D                     	;# 
   665  029E                     	;# 
   666  029E                     	;# 
   667  0311                     	;# 
   668  0311                     	;# 
   669  0312                     	;# 
   670  0313                     	;# 
   671  0318                     	;# 
   672  0318                     	;# 
   673  0319                     	;# 
   674  031A                     	;# 
   675  0394                     	;# 
   676  0395                     	;# 
   677  0396                     	;# 
   678  039A                     	;# 
   679  039C                     	;# 
   680  039D                     	;# 
   681  039E                     	;# 
   682  039F                     	;# 
   683  0415                     	;# 
   684  0416                     	;# 
   685  0417                     	;# 
   686  041C                     	;# 
   687  041D                     	;# 
   688  041E                     	;# 
   689  0FE4                     	;# 
   690  0FE5                     	;# 
   691  0FE6                     	;# 
   692  0FE7                     	;# 
   693  0FE8                     	;# 
   694  0FE9                     	;# 
   695  0FEA                     	;# 
   696  0FEB                     	;# 
   697  0FED                     	;# 
   698  0FEE                     	;# 
   699  0FEF                     	;# 
   700  0000                     	;# 
   701  0001                     	;# 
   702  0002                     	;# 
   703  0003                     	;# 
   704  0004                     	;# 
   705  0005                     	;# 
   706  0006                     	;# 
   707  0007                     	;# 
   708  0008                     	;# 
   709  0009                     	;# 
   710  000A                     	;# 
   711  000B                     	;# 
   712  000C                     	;# 
   713  000D                     	;# 
   714  0011                     	;# 
   715  0012                     	;# 
   716  0013                     	;# 
   717  0014                     	;# 
   718  0015                     	;# 
   719  0016                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001C                     	;# 
   727  001E                     	;# 
   728  001F                     	;# 
   729  008C                     	;# 
   730  008D                     	;# 
   731  0091                     	;# 
   732  0092                     	;# 
   733  0093                     	;# 
   734  0094                     	;# 
   735  0095                     	;# 
   736  0096                     	;# 
   737  0097                     	;# 
   738  0098                     	;# 
   739  0099                     	;# 
   740  009A                     	;# 
   741  009B                     	;# 
   742  009B                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009E                     	;# 
   746  010C                     	;# 
   747  010D                     	;# 
   748  0111                     	;# 
   749  0112                     	;# 
   750  0113                     	;# 
   751  0114                     	;# 
   752  0115                     	;# 
   753  0116                     	;# 
   754  0117                     	;# 
   755  0118                     	;# 
   756  0119                     	;# 
   757  011A                     	;# 
   758  011B                     	;# 
   759  011D                     	;# 
   760  011E                     	;# 
   761  018C                     	;# 
   762  018D                     	;# 
   763  0191                     	;# 
   764  0191                     	;# 
   765  0192                     	;# 
   766  0193                     	;# 
   767  0193                     	;# 
   768  0193                     	;# 
   769  0194                     	;# 
   770  0195                     	;# 
   771  0196                     	;# 
   772  0199                     	;# 
   773  019A                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  019C                     	;# 
   780  019D                     	;# 
   781  019E                     	;# 
   782  019F                     	;# 
   783  020C                     	;# 
   784  020D                     	;# 
   785  0211                     	;# 
   786  0211                     	;# 
   787  0212                     	;# 
   788  0212                     	;# 
   789  0213                     	;# 
   790  0213                     	;# 
   791  0214                     	;# 
   792  0214                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0216                     	;# 
   797  0216                     	;# 
   798  0217                     	;# 
   799  0217                     	;# 
   800  0219                     	;# 
   801  021A                     	;# 
   802  021B                     	;# 
   803  021C                     	;# 
   804  021D                     	;# 
   805  021E                     	;# 
   806  021F                     	;# 
   807  0291                     	;# 
   808  0291                     	;# 
   809  0292                     	;# 
   810  0293                     	;# 
   811  0294                     	;# 
   812  0295                     	;# 
   813  0295                     	;# 
   814  0296                     	;# 
   815  0298                     	;# 
   816  0298                     	;# 
   817  0299                     	;# 
   818  029A                     	;# 
   819  029B                     	;# 
   820  029C                     	;# 
   821  029C                     	;# 
   822  029D                     	;# 
   823  029E                     	;# 
   824  029E                     	;# 
   825  0311                     	;# 
   826  0311                     	;# 
   827  0312                     	;# 
   828  0313                     	;# 
   829  0318                     	;# 
   830  0318                     	;# 
   831  0319                     	;# 
   832  031A                     	;# 
   833  0394                     	;# 
   834  0395                     	;# 
   835  0396                     	;# 
   836  039A                     	;# 
   837  039C                     	;# 
   838  039D                     	;# 
   839  039E                     	;# 
   840  039F                     	;# 
   841  0415                     	;# 
   842  0416                     	;# 
   843  0417                     	;# 
   844  041C                     	;# 
   845  041D                     	;# 
   846  041E                     	;# 
   847  0FE4                     	;# 
   848  0FE5                     	;# 
   849  0FE6                     	;# 
   850  0FE7                     	;# 
   851  0FE8                     	;# 
   852  0FE9                     	;# 
   853  0FEA                     	;# 
   854  0FEB                     	;# 
   855  0FED                     	;# 
   856  0FEE                     	;# 
   857  0FEF                     	;# 
   858                           
   859                           	psect	idataBANK0
   860  067C                     __pidataBANK0:
   861                           
   862                           ;initializer for _segdata
   863  067C  343F               	retlw	63
   864  067D  3406               	retlw	6
   865  067E  345B               	retlw	91
   866  067F  344F               	retlw	79
   867  0680  3466               	retlw	102
   868  0681  346D               	retlw	109
   869  0682  347D               	retlw	125
   870  0683  3407               	retlw	7
   871  0684  347F               	retlw	127
   872  0685  346F               	retlw	111
   873                           
   874                           ;initializer for main@F2504
   875  0686  34FF               	retlw	255
   876  0687  34FF               	retlw	255
   877  0688  34FF               	retlw	255
   878  0689  34FF               	retlw	255
   879  000C                     _PORTAbits	set	12
   880  0097                     _WDTCON	set	151
   881  0098                     _OSCTUNE	set	152
   882  0099                     _OSCCON	set	153
   883  0095                     _OPTION_REGbits	set	149
   884  008D                     _TRISB	set	141
   885  008C                     _TRISA	set	140
   886  0116                     _BORCON	set	278
   887  011E                     _APFCON1	set	286
   888  011D                     _APFCON0	set	285
   889  010D                     _LATB	set	269
   890  010C                     _LATA	set	268
   891  018C                     _ANSELA	set	396
   892  018D                     _ANSELB	set	397
   893  020C                     _WPUA	set	524
   894  020D                     _WPUB	set	525
   895                           
   896                           	psect	cinit
   897  07EC                     start_initialization:	
   898                           ; #config settings
   899                           
   900  07EC                     __initialization:
   901                           
   902                           ; Initialize objects allocated to BANK0
   903  07EC  307C               	movlw	low __pidataBANK0
   904  07ED  0084               	movwf	4
   905  07EE  3086               	movlw	(high __pidataBANK0)| (0+128)
   906  07EF  0085               	movwf	5
   907  07F0  3020               	movlw	low __pdataBANK0
   908  07F1  0086               	movwf	6
   909  07F2  3000               	movlw	high __pdataBANK0
   910  07F3  0087               	movwf	7
   911  07F4  300E               	movlw	14
   912  07F5  3186  265D  3187   	fcall	init_ram
   913                           
   914                           ; Clear objects allocated to BANK0
   915  07F8  01B8               	clrf	__pbssBANK0& (0+127)
   916  07F9  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   917  07FA  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   918  07FB  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   919  07FC  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   920  07FD                     end_of_initialization:	
   921                           ;End of C runtime variable initialization code
   922                           
   923  07FD                     __end_of__initialization:
   924  07FD  0020               	movlb	0
   925  07FE  3187  2F72         	ljmp	_main	;jump to C main() function
   926                           
   927                           	psect	bssBANK0
   928  0038                     __pbssBANK0:
   929  0038                     clear_segment@F2511:
   930  0038                     	ds	4
   931  003C                     _m_brightness:
   932  003C                     	ds	1
   933                           
   934                           	psect	dataBANK0
   935  0020                     __pdataBANK0:
   936  0020                     _segdata:
   937  0020                     	ds	10
   938  002A                     main@F2504:
   939  002A                     	ds	4
   940                           
   941                           	psect	inittext
   942  065D                     init_ram:
   943  065D  00FE               	movwf	btemp
   944  065E                     initloop:
   945  065E  0012               	moviw fsr0++
   946  065F  001E               	movwi fsr1++
   947  0660  0BFE               	decfsz	btemp,f
   948  0661  2E5E               	goto	initloop
   949  0662  3400               	retlw	0
   950                           
   951                           	psect	cstackCOMMON
   952  0070                     __pcstackCOMMON:
   953  0070                     ?_OSCILLATOR_Initialize:
   954  0070                     ??_OSCILLATOR_Initialize:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_WDT_Initialize:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ??_WDT_Initialize:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_PIN_MANAGER_Initialize:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ??_PIN_MANAGER_Initialize:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_SYSTEM_Initialize:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ??_SYSTEM_Initialize:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_CLK_SET_OUTPUT:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ??_CLK_SET_OUTPUT:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_CLK_SET_HIGH:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ??_CLK_SET_HIGH:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_CLK_SET_LOW:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ??_CLK_SET_LOW:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ?_DIO_SET_OUTPUT:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ??_DIO_SET_OUTPUT:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     ?_DIO_SET_INPUT:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0070                     ??_DIO_SET_INPUT:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0070                     ?_DIO_SET_HIGH:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ??_DIO_SET_HIGH:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0070                     ?_DIO_SET_LOW:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0070                     ??_DIO_SET_LOW:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0070                     ?_start_segment:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0070                     ?_stop_segment:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0070                     ?_get_DIO_PIN_value:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0070                     ??_get_DIO_PIN_value:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0070                     ?_write_byte:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0070                     ?_set_brigthness:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0070                     ?_clear_segment:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0070                     ?_encode_digit:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0070                     ??_encode_digit:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0070                     ?_main:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0070                     set_brigthness@on:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0070                     encode_digit@digit:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053                           
  1054                           ; 1 bytes @ 0x0
  1055  0070                     	ds	1
  1056  0071                     ??_start_segment:
  1057  0071                     ??_stop_segment:	
  1058                           ; 1 bytes @ 0x1
  1059                           
  1060  0071                     ??_write_byte:	
  1061                           ; 1 bytes @ 0x1
  1062                           
  1063  0071                     ??_set_brigthness:	
  1064                           ; 1 bytes @ 0x1
  1065                           
  1066                           
  1067                           ; 1 bytes @ 0x1
  1068  0071                     	ds	1
  1069  0072                     write_byte@b:
  1070  0072                     set_brigthness@brightness:	
  1071                           ; 1 bytes @ 0x2
  1072                           
  1073                           
  1074                           ; 1 bytes @ 0x2
  1075  0072                     	ds	1
  1076  0073                     write_byte@ack:
  1077                           
  1078                           ; 1 bytes @ 0x3
  1079  0073                     	ds	1
  1080  0074                     write_byte@data:
  1081                           
  1082                           ; 1 bytes @ 0x4
  1083  0074                     	ds	1
  1084  0075                     write_byte@i:
  1085                           
  1086                           ; 1 bytes @ 0x5
  1087  0075                     	ds	1
  1088  0076                     ?_set_segments:
  1089  0076                     set_segments@length:	
  1090                           ; 1 bytes @ 0x6
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x6
  1094  0076                     	ds	1
  1095  0077                     set_segments@pos:
  1096                           
  1097                           ; 1 bytes @ 0x7
  1098  0077                     	ds	1
  1099  0078                     ??_set_segments:
  1100                           
  1101                           ; 1 bytes @ 0x8
  1102  0078                     	ds	1
  1103  0079                     set_segments@segments:
  1104                           
  1105                           ; 1 bytes @ 0x9
  1106  0079                     	ds	1
  1107  007A                     set_segments@k:
  1108                           
  1109                           ; 1 bytes @ 0xA
  1110  007A                     	ds	1
  1111  007B                     ??_clear_segment:
  1112                           
  1113                           ; 1 bytes @ 0xB
  1114  007B                     	ds	1
  1115  007C                     ??_main:
  1116                           
  1117                           ; 1 bytes @ 0xC
  1118  007C                     	ds	2
  1119                           
  1120                           	psect	cstackBANK0
  1121  002E                     __pcstackBANK0:
  1122  002E                     clear_segment@data:
  1123                           
  1124                           ; 4 bytes @ 0x0
  1125  002E                     	ds	4
  1126  0032                     main@k:
  1127                           
  1128                           ; 1 bytes @ 0x4
  1129  0032                     	ds	1
  1130  0033                     main@data:
  1131                           
  1132                           ; 4 bytes @ 0x5
  1133  0033                     	ds	4
  1134  0037                     main@i:
  1135                           
  1136                           ; 1 bytes @ 0x9
  1137  0037                     	ds	1
  1138                           
  1139                           	psect	maintext
  1140  0772                     __pmaintext:	
  1141 ;;
  1142 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1143 ;;
  1144 ;; *************** function _main *****************
  1145 ;; Defined at:
  1146 ;;		line 5 in file "main.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  i               1    9[BANK0 ] unsigned char 
  1151 ;;  data            4    5[BANK0 ] unsigned char [4]
  1152 ;;  k               1    4[BANK0 ] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : B1F/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1162 ;;      Params:         0       0       0       0       0       0
  1163 ;;      Locals:         0       6       0       0       0       0
  1164 ;;      Temps:          2       0       0       0       0       0
  1165 ;;      Totals:         2       6       0       0       0       0
  1166 ;;Total ram usage:        8 bytes
  1167 ;; Hardware stack levels required when called: 4
  1168 ;; This function calls:
  1169 ;;		_SYSTEM_Initialize
  1170 ;;		_clear_segment
  1171 ;;		_encode_digit
  1172 ;;		_set_brigthness
  1173 ;;		_set_segments
  1174 ;; This function is called by:
  1175 ;;		Startup code after reset
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _main
  1181  0772                     _main:
  1182  0772                     l1104:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1185                           
  1186                           
  1187                           ;main.c: 8:     SYSTEM_Initialize();
  1188  0772  3186  2672  3187   	fcall	_SYSTEM_Initialize
  1189  0775                     l1106:
  1190                           
  1191                           ;main.c: 10:     ANSELA = 0x00;
  1192  0775  0023               	movlb	3	; select bank3
  1193  0776  018C               	clrf	12	;volatile
  1194  0777                     l1108:
  1195                           
  1196                           ;main.c: 11:     TRISA = 0x00;
  1197  0777  0021               	movlb	1	; select bank1
  1198  0778  018C               	clrf	12	;volatile
  1199  0779                     l1110:
  1200                           
  1201                           ;main.c: 12:     LATA = 0x00;
  1202  0779  0022               	movlb	2	; select bank2
  1203  077A  018C               	clrf	12	;volatile
  1204  077B                     l1112:
  1205                           
  1206                           ;main.c: 14:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
  1207  077B  0020               	movlb	0	; select bank0
  1208  077C  082D               	movf	main@F2504+3,w
  1209  077D  00B6               	movwf	main@data+3
  1210  077E  082C               	movf	main@F2504+2,w
  1211  077F  00B5               	movwf	main@data+2
  1212  0780  082B               	movf	main@F2504+1,w
  1213  0781  00B4               	movwf	main@data+1
  1214  0782  082A               	movf	main@F2504,w
  1215  0783  00B3               	movwf	main@data
  1216  0784                     l1114:
  1217                           
  1218                           ;main.c: 16:     clear_segment();
  1219  0784  3186  26B0  3187   	fcall	_clear_segment
  1220  0787                     l1116:
  1221                           
  1222                           ;main.c: 18:     data[0] = encode_digit(1);
  1223  0787  3001               	movlw	1
  1224  0788  3186  266A  3187   	fcall	_encode_digit
  1225  078B  00FC               	movwf	??_main
  1226  078C  087C               	movf	??_main,w
  1227  078D  0020               	movlb	0	; select bank0
  1228  078E  00B3               	movwf	main@data
  1229  078F                     l1118:
  1230                           
  1231                           ;main.c: 19:     data[1] = encode_digit(9);
  1232  078F  3009               	movlw	9
  1233  0790  3186  266A  3187   	fcall	_encode_digit
  1234  0793  00FC               	movwf	??_main
  1235  0794  087C               	movf	??_main,w
  1236  0795  0020               	movlb	0	; select bank0
  1237  0796  00B4               	movwf	main@data+1
  1238  0797                     l1120:
  1239                           
  1240                           ;main.c: 20:     data[2] = encode_digit(8);
  1241  0797  3008               	movlw	8
  1242  0798  3186  266A  3187   	fcall	_encode_digit
  1243  079B  00FC               	movwf	??_main
  1244  079C  087C               	movf	??_main,w
  1245  079D  0020               	movlb	0	; select bank0
  1246  079E  00B5               	movwf	main@data+2
  1247  079F                     l1122:
  1248                           
  1249                           ;main.c: 21:     data[3] = encode_digit(4);
  1250  079F  3004               	movlw	4
  1251  07A0  3186  266A  3187   	fcall	_encode_digit
  1252  07A3  00FC               	movwf	??_main
  1253  07A4  087C               	movf	??_main,w
  1254  07A5  0020               	movlb	0	; select bank0
  1255  07A6  00B6               	movwf	main@data+3
  1256  07A7                     l1124:
  1257                           
  1258                           ;main.c: 24:     set_brigthness(0x0f, 1);
  1259  07A7  01F0               	clrf	set_brigthness@on
  1260  07A8  0AF0               	incf	set_brigthness@on,f
  1261  07A9  300F               	movlw	15
  1262  07AA  3186  26C3  3187   	fcall	_set_brigthness
  1263  07AD                     l1126:
  1264                           
  1265                           ;main.c: 25:     set_segments(data, 4, 0);
  1266  07AD  3004               	movlw	4
  1267  07AE  00FC               	movwf	??_main
  1268  07AF  087C               	movf	??_main,w
  1269  07B0  00F6               	movwf	set_segments@length
  1270  07B1  01F7               	clrf	set_segments@pos
  1271  07B2  3033               	movlw	(low (main@data| 0))& (0+255)
  1272  07B3  3186  26EE  3187   	fcall	_set_segments
  1273  07B6                     l1128:
  1274                           
  1275                           ;main.c: 27:     uint8_t k = 0;
  1276  07B6  0020               	movlb	0	; select bank0
  1277  07B7  01B2               	clrf	main@k
  1278  07B8                     l1130:
  1279                           
  1280                           ;main.c: 31:     {;main.c: 32:         for(uint8_t i = 0; i < 4; i++){
  1281  07B8  01B7               	clrf	main@i
  1282  07B9                     l1136:
  1283                           
  1284                           ;main.c: 33:             data[i] = encode_digit(i + k);
  1285  07B9  0837               	movf	main@i,w
  1286  07BA  0732               	addwf	main@k,w
  1287  07BB  3186  266A  3187   	fcall	_encode_digit
  1288  07BE  00FC               	movwf	??_main
  1289  07BF  0020               	movlb	0	; select bank0
  1290  07C0  0837               	movf	main@i,w
  1291  07C1  3E33               	addlw	(low (main@data| 0))& (0+255)
  1292  07C2  0086               	movwf	6
  1293  07C3  0187               	clrf	7
  1294  07C4  087C               	movf	??_main,w
  1295  07C5  0081               	movwf	1
  1296  07C6                     l1138:
  1297                           
  1298                           ;main.c: 34:         }
  1299  07C6  3001               	movlw	1
  1300  07C7  00FC               	movwf	??_main
  1301  07C8  087C               	movf	??_main,w
  1302  07C9  07B7               	addwf	main@i,f
  1303  07CA                     l1140:
  1304  07CA  3004               	movlw	4
  1305  07CB  0237               	subwf	main@i,w
  1306  07CC  1C03               	skipc
  1307  07CD  2FCF               	goto	u121
  1308  07CE  2FD0               	goto	u120
  1309  07CF                     u121:
  1310  07CF  2FB9               	goto	l1136
  1311  07D0                     u120:
  1312  07D0                     l1142:
  1313                           
  1314                           ;main.c: 36:         set_segments(data, 4, 0);
  1315  07D0  3004               	movlw	4
  1316  07D1  00FC               	movwf	??_main
  1317  07D2  087C               	movf	??_main,w
  1318  07D3  00F6               	movwf	set_segments@length
  1319  07D4  01F7               	clrf	set_segments@pos
  1320  07D5  3033               	movlw	(low (main@data| 0))& (0+255)
  1321  07D6  3186  26EE  3187   	fcall	_set_segments
  1322  07D9                     l1144:
  1323                           
  1324                           ;main.c: 37:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1325  07D9  300B               	movlw	11
  1326  07DA  00FD               	movwf	??_main+1
  1327  07DB  3026               	movlw	38
  1328  07DC  00FC               	movwf	??_main
  1329  07DD  305E               	movlw	94
  1330  07DE                     u137:
  1331  07DE  0B89               	decfsz	9,f
  1332  07DF  2FDE               	goto	u137
  1333  07E0  0BFC               	decfsz	??_main,f
  1334  07E1  2FDE               	goto	u137
  1335  07E2  0BFD               	decfsz	??_main+1,f
  1336  07E3  2FDE               	goto	u137
  1337  07E4                     l1146:
  1338                           
  1339                           ;main.c: 38:         k++;
  1340  07E4  3001               	movlw	1
  1341  07E5  00FC               	movwf	??_main
  1342  07E6  087C               	movf	??_main,w
  1343  07E7  0020               	movlb	0	; select bank0
  1344  07E8  07B2               	addwf	main@k,f
  1345  07E9  2FB8               	goto	l1130
  1346  07EA  3180  2802         	ljmp	start
  1347  07EC                     __end_of_main:
  1348                           
  1349                           	psect	text1
  1350  06C3                     __ptext1:	
  1351 ;; *************** function _set_brigthness *****************
  1352 ;; Defined at:
  1353 ;;		line 140 in file "tm1637.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  brightness      1    wreg     unsigned char 
  1356 ;;  on              1    0[COMMON] unsigned char 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  brightness      1    2[COMMON] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1368 ;;      Params:         1       0       0       0       0       0
  1369 ;;      Locals:         1       0       0       0       0       0
  1370 ;;      Temps:          1       0       0       0       0       0
  1371 ;;      Totals:         3       0       0       0       0       0
  1372 ;;Total ram usage:        3 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _set_brigthness
  1383  06C3                     _set_brigthness:
  1384                           
  1385                           ;incstack = 0
  1386                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1387                           ;set_brigthness@brightness stored from wreg
  1388  06C3  00F2               	movwf	set_brigthness@brightness
  1389  06C4                     l1090:
  1390                           
  1391                           ;tm1637.c: 141:     if(on == 1){
  1392  06C4  0370               	decf	set_brigthness@on,w
  1393  06C5  1D03               	btfss	3,2
  1394  06C6  2EC8               	goto	u111
  1395  06C7  2EC9               	goto	u110
  1396  06C8                     u111:
  1397  06C8  2ED1               	goto	l1094
  1398  06C9                     u110:
  1399  06C9                     l1092:
  1400                           
  1401                           ;tm1637.c: 142:         m_brightness = (brightness & 0x7 | 0x08);
  1402  06C9  0872               	movf	set_brigthness@brightness,w
  1403  06CA  3907               	andlw	7
  1404  06CB  3808               	iorlw	8
  1405  06CC  00F1               	movwf	??_set_brigthness
  1406  06CD  0871               	movf	??_set_brigthness,w
  1407  06CE  0020               	movlb	0	; select bank0
  1408  06CF  00BC               	movwf	_m_brightness
  1409                           
  1410                           ;tm1637.c: 143:     }else{
  1411  06D0  2ED7               	goto	l112
  1412  06D1                     l1094:
  1413                           
  1414                           ;tm1637.c: 144:         m_brightness = (brightness & 0x7 | 0x00);
  1415  06D1  0872               	movf	set_brigthness@brightness,w
  1416  06D2  3907               	andlw	7
  1417  06D3  00F1               	movwf	??_set_brigthness
  1418  06D4  0871               	movf	??_set_brigthness,w
  1419  06D5  0020               	movlb	0	; select bank0
  1420  06D6  00BC               	movwf	_m_brightness
  1421  06D7                     l112:
  1422  06D7  0008               	return
  1423  06D8                     __end_of_set_brigthness:
  1424                           
  1425                           	psect	text2
  1426  066A                     __ptext2:	
  1427 ;; *************** function _encode_digit *****************
  1428 ;; Defined at:
  1429 ;;		line 190 in file "tm1637.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  digit           1    wreg     unsigned char 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  digit           1    0[COMMON] unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      unsigned char 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1443 ;;      Params:         0       0       0       0       0       0
  1444 ;;      Locals:         1       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0
  1446 ;;      Totals:         1       0       0       0       0       0
  1447 ;;Total ram usage:        1 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _encode_digit
  1458  066A                     _encode_digit:
  1459                           
  1460                           ;incstack = 0
  1461                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  1462                           ;encode_digit@digit stored from wreg
  1463  066A  00F0               	movwf	encode_digit@digit
  1464  066B                     l1100:
  1465                           
  1466                           ;tm1637.c: 191:     return segdata[digit & 0x0f];
  1467  066B  0870               	movf	encode_digit@digit,w
  1468  066C  390F               	andlw	15
  1469  066D  3E20               	addlw	(low (_segdata| 0))& (0+255)
  1470  066E  0086               	movwf	6
  1471  066F  0187               	clrf	7
  1472  0670  0801               	movf	1,w
  1473  0671                     l126:
  1474  0671  0008               	return
  1475  0672                     __end_of_encode_digit:
  1476                           
  1477                           	psect	text3
  1478  06B0                     __ptext3:	
  1479 ;; *************** function _clear_segment *****************
  1480 ;; Defined at:
  1481 ;;		line 180 in file "tm1637.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  data            4    0[BANK0 ] unsigned char [4]
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1495 ;;      Params:         0       0       0       0       0       0
  1496 ;;      Locals:         0       4       0       0       0       0
  1497 ;;      Temps:          1       0       0       0       0       0
  1498 ;;      Totals:         1       4       0       0       0       0
  1499 ;;Total ram usage:        5 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 3
  1502 ;; This function calls:
  1503 ;;		_set_segments
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function _clear_segment
  1511  06B0                     _clear_segment:
  1512  06B0                     l1096:	
  1513                           ;incstack = 0
  1514                           ; Regs used in _clear_segment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1515                           
  1516                           
  1517                           ;tm1637.c: 181:     uint8_t data[] = { 0, 0, 0, 0 };
  1518  06B0  3000               	movlw	0
  1519  06B1  0020               	movlb	0	; select bank0
  1520  06B2  00B1               	movwf	clear_segment@data+3
  1521  06B3  3000               	movlw	0
  1522  06B4  00B0               	movwf	clear_segment@data+2
  1523  06B5  3000               	movlw	0
  1524  06B6  00AF               	movwf	clear_segment@data+1
  1525  06B7  3000               	movlw	0
  1526  06B8  00AE               	movwf	clear_segment@data
  1527  06B9                     l1098:
  1528                           
  1529                           ;tm1637.c: 182:  set_segments(data, 4, 0);
  1530  06B9  3004               	movlw	4
  1531  06BA  00FB               	movwf	??_clear_segment
  1532  06BB  087B               	movf	??_clear_segment,w
  1533  06BC  00F6               	movwf	set_segments@length
  1534  06BD  01F7               	clrf	set_segments@pos
  1535  06BE  302E               	movlw	(low (clear_segment@data| 0))& (0+255)
  1536  06BF  3186  26EE  3186   	fcall	_set_segments
  1537  06C2                     l123:
  1538  06C2  0008               	return
  1539  06C3                     __end_of_clear_segment:
  1540                           
  1541                           	psect	text4
  1542  06EE                     __ptext4:	
  1543 ;; *************** function _set_segments *****************
  1544 ;; Defined at:
  1545 ;;		line 154 in file "tm1637.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  segments        1    wreg     PTR const unsigned char 
  1548 ;;		 -> main@data(4), clear_segment@data(4), 
  1549 ;;  length          1    6[COMMON] unsigned char 
  1550 ;;  pos             1    7[COMMON] unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  segments        1    9[COMMON] PTR const unsigned char 
  1553 ;;		 -> main@data(4), clear_segment@data(4), 
  1554 ;;  k               1   10[COMMON] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1564 ;;      Params:         2       0       0       0       0       0
  1565 ;;      Locals:         2       0       0       0       0       0
  1566 ;;      Temps:          1       0       0       0       0       0
  1567 ;;      Totals:         5       0       0       0       0       0
  1568 ;;Total ram usage:        5 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 2
  1571 ;; This function calls:
  1572 ;;		_start_segment
  1573 ;;		_stop_segment
  1574 ;;		_write_byte
  1575 ;; This function is called by:
  1576 ;;		_clear_segment
  1577 ;;		_main
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           
  1582                           ;psect for function _set_segments
  1583  06EE                     _set_segments:
  1584                           
  1585                           ;incstack = 0
  1586                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1587                           ;set_segments@segments stored from wreg
  1588  06EE  00F9               	movwf	set_segments@segments
  1589  06EF                     l1076:
  1590                           
  1591                           ;tm1637.c: 156:     start_segment();
  1592  06EF  3186  268A  3186   	fcall	_start_segment
  1593                           
  1594                           ;tm1637.c: 157:     write_byte(0x40);
  1595  06F2  3040               	movlw	64
  1596  06F3  3187  2729  3186   	fcall	_write_byte
  1597                           
  1598                           ;tm1637.c: 158:     stop_segment();
  1599  06F6  3186  269D  3186   	fcall	_stop_segment
  1600                           
  1601                           ;tm1637.c: 161:     start_segment();
  1602  06F9  3186  268A  3186   	fcall	_start_segment
  1603                           
  1604                           ;tm1637.c: 162:     write_byte(0xC0 + (pos & 0x03));
  1605  06FC  0877               	movf	set_segments@pos,w
  1606  06FD  3903               	andlw	3
  1607  06FE  3EC0               	addlw	192
  1608  06FF  3187  2729  3186   	fcall	_write_byte
  1609  0702                     l1078:
  1610                           
  1611                           ;tm1637.c: 165:     for(uint8_t k = 0; k < length; k++){
  1612  0702  01FA               	clrf	set_segments@k
  1613  0703  2F12               	goto	l1084
  1614  0704                     l1080:
  1615                           
  1616                           ;tm1637.c: 166:         write_byte(segments[k]);
  1617  0704  087A               	movf	set_segments@k,w
  1618  0705  0779               	addwf	set_segments@segments,w
  1619  0706  00F8               	movwf	??_set_segments
  1620  0707  0878               	movf	??_set_segments,w
  1621  0708  0086               	movwf	6
  1622  0709  0187               	clrf	7
  1623  070A  0801               	movf	1,w
  1624  070B  3187  2729  3186   	fcall	_write_byte
  1625  070E                     l1082:
  1626                           
  1627                           ;tm1637.c: 167:     }
  1628  070E  3001               	movlw	1
  1629  070F  00F8               	movwf	??_set_segments
  1630  0710  0878               	movf	??_set_segments,w
  1631  0711  07FA               	addwf	set_segments@k,f
  1632  0712                     l1084:
  1633  0712  0876               	movf	set_segments@length,w
  1634  0713  027A               	subwf	set_segments@k,w
  1635  0714  1C03               	skipc
  1636  0715  2F17               	goto	u101
  1637  0716  2F18               	goto	u100
  1638  0717                     u101:
  1639  0717  2F04               	goto	l1080
  1640  0718                     u100:
  1641  0718                     l1086:
  1642                           
  1643                           ;tm1637.c: 169:     stop_segment();
  1644  0718  3186  269D  3186   	fcall	_stop_segment
  1645                           
  1646                           ;tm1637.c: 172:     start_segment();
  1647  071B  3186  268A  3186   	fcall	_start_segment
  1648                           
  1649                           ;tm1637.c: 173:     write_byte(0x80 + (m_brightness & 0x0f));
  1650  071E  0020               	movlb	0	; select bank0
  1651  071F  083C               	movf	_m_brightness,w
  1652  0720  390F               	andlw	15
  1653  0721  3E80               	addlw	128
  1654  0722  3187  2729  3186   	fcall	_write_byte
  1655                           
  1656                           ;tm1637.c: 174:     stop_segment();
  1657  0725  3186  269D  3186   	fcall	_stop_segment
  1658  0728                     l118:
  1659  0728  0008               	return
  1660  0729                     __end_of_set_segments:
  1661                           
  1662                           	psect	text5
  1663  0729                     __ptext5:	
  1664 ;; *************** function _write_byte *****************
  1665 ;; Defined at:
  1666 ;;		line 85 in file "tm1637.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  b               1    wreg     unsigned char 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  b               1    2[COMMON] unsigned char 
  1671 ;;  i               1    5[COMMON] unsigned char 
  1672 ;;  data            1    4[COMMON] unsigned char 
  1673 ;;  ack             1    3[COMMON] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      unsigned char 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1683 ;;      Params:         0       0       0       0       0       0
  1684 ;;      Locals:         4       0       0       0       0       0
  1685 ;;      Temps:          1       0       0       0       0       0
  1686 ;;      Totals:         5       0       0       0       0       0
  1687 ;;Total ram usage:        5 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 1
  1690 ;; This function calls:
  1691 ;;		_CLK_SET_HIGH
  1692 ;;		_CLK_SET_LOW
  1693 ;;		_CLK_SET_OUTPUT
  1694 ;;		_DIO_SET_HIGH
  1695 ;;		_DIO_SET_INPUT
  1696 ;;		_DIO_SET_LOW
  1697 ;;		_DIO_SET_OUTPUT
  1698 ;;		_get_DIO_PIN_value
  1699 ;; This function is called by:
  1700 ;;		_set_segments
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           
  1705                           ;psect for function _write_byte
  1706  0729                     _write_byte:
  1707                           
  1708                           ;incstack = 0
  1709                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  1710                           ;write_byte@b stored from wreg
  1711  0729  00F2               	movwf	write_byte@b
  1712  072A                     l1016:
  1713                           
  1714                           ;tm1637.c: 86:     uint8_t data = b;
  1715  072A  0872               	movf	write_byte@b,w
  1716  072B  00F1               	movwf	??_write_byte
  1717  072C  0871               	movf	??_write_byte,w
  1718  072D  00F4               	movwf	write_byte@data
  1719  072E                     l1018:
  1720                           
  1721                           ;tm1637.c: 89:     CLK_SET_OUTPUT();
  1722  072E  3186  264B  3187   	fcall	_CLK_SET_OUTPUT
  1723  0731                     l1020:
  1724                           
  1725                           ;tm1637.c: 90:     for(uint8_t i = 0; i < 8; i++){
  1726  0731  01F5               	clrf	write_byte@i
  1727  0732                     l1026:
  1728                           
  1729                           ;tm1637.c: 92:         CLK_SET_LOW();
  1730  0732  3186  2645  3187   	fcall	_CLK_SET_LOW
  1731  0735                     l1028:
  1732                           
  1733                           ;tm1637.c: 94:         if(data & 0x01){
  1734  0735  1C74               	btfss	write_byte@data,0
  1735  0736  2F38               	goto	u71
  1736  0737  2F39               	goto	u70
  1737  0738                     u71:
  1738  0738  2F3D               	goto	l1032
  1739  0739                     u70:
  1740  0739                     l1030:
  1741                           
  1742                           ;tm1637.c: 96:             DIO_SET_HIGH();
  1743  0739  3186  2636  3187   	fcall	_DIO_SET_HIGH
  1744                           
  1745                           ;tm1637.c: 97:         }else{
  1746  073C  2F40               	goto	l1034
  1747  073D                     l1032:
  1748                           
  1749                           ;tm1637.c: 99:             DIO_SET_LOW();
  1750  073D  3186  2651  3187   	fcall	_DIO_SET_LOW
  1751  0740                     l1034:
  1752                           
  1753                           ;tm1637.c: 103:         CLK_SET_HIGH();
  1754  0740  3186  2633  3187   	fcall	_CLK_SET_HIGH
  1755  0743                     l1036:
  1756                           
  1757                           ;tm1637.c: 105:         data = data >> 1;
  1758  0743  3674               	lsrf	write_byte@data,w
  1759  0744  00F1               	movwf	??_write_byte
  1760  0745  0871               	movf	??_write_byte,w
  1761  0746  00F4               	movwf	write_byte@data
  1762  0747                     l1038:
  1763                           
  1764                           ;tm1637.c: 106:     }
  1765  0747  3001               	movlw	1
  1766  0748  00F1               	movwf	??_write_byte
  1767  0749  0871               	movf	??_write_byte,w
  1768  074A  07F5               	addwf	write_byte@i,f
  1769  074B  3008               	movlw	8
  1770  074C  0275               	subwf	write_byte@i,w
  1771  074D  1C03               	skipc
  1772  074E  2F50               	goto	u81
  1773  074F  2F51               	goto	u80
  1774  0750                     u81:
  1775  0750  2F32               	goto	l1026
  1776  0751                     u80:
  1777  0751                     l1040:
  1778                           
  1779                           ;tm1637.c: 111:     CLK_SET_LOW();
  1780  0751  3186  2645  3187   	fcall	_CLK_SET_LOW
  1781  0754                     l1042:
  1782                           
  1783                           ;tm1637.c: 112:     DIO_SET_HIGH();
  1784  0754  3186  2636  3187   	fcall	_DIO_SET_HIGH
  1785  0757                     l1044:
  1786                           
  1787                           ;tm1637.c: 115:     CLK_SET_HIGH();
  1788  0757  3186  2633  3187   	fcall	_CLK_SET_HIGH
  1789  075A                     l1046:
  1790                           
  1791                           ;tm1637.c: 118:     DIO_SET_INPUT();
  1792  075A  3186  2639  3187   	fcall	_DIO_SET_INPUT
  1793  075D                     l1048:
  1794                           
  1795                           ;tm1637.c: 120:     uint8_t ack = get_DIO_PIN_value();
  1796  075D  3186  2640  3187   	fcall	_get_DIO_PIN_value
  1797  0760  00F1               	movwf	??_write_byte
  1798  0761  0871               	movf	??_write_byte,w
  1799  0762  00F3               	movwf	write_byte@ack
  1800  0763                     l1050:
  1801                           
  1802                           ;tm1637.c: 121:     if(ack == 0){
  1803  0763  0873               	movf	write_byte@ack,w
  1804  0764  1D03               	btfss	3,2
  1805  0765  2F67               	goto	u91
  1806  0766  2F68               	goto	u90
  1807  0767                     u91:
  1808  0767  2F6E               	goto	l106
  1809  0768                     u90:
  1810  0768                     l1052:
  1811                           
  1812                           ;tm1637.c: 123:         DIO_SET_OUTPUT();
  1813  0768  3186  2657  3187   	fcall	_DIO_SET_OUTPUT
  1814                           
  1815                           ;tm1637.c: 126:         DIO_SET_LOW();
  1816  076B  3186  2651  3187   	fcall	_DIO_SET_LOW
  1817  076E                     l106:	
  1818                           ;tm1637.c: 127:     }
  1819                           
  1820                           
  1821                           ;tm1637.c: 130:     DIO_SET_OUTPUT();
  1822  076E  3186  2657  3187   	fcall	_DIO_SET_OUTPUT
  1823  0771                     l107:
  1824  0771  0008               	return
  1825  0772                     __end_of_write_byte:
  1826                           
  1827                           	psect	text6
  1828  0640                     __ptext6:	
  1829 ;; *************** function _get_DIO_PIN_value *****************
  1830 ;; Defined at:
  1831 ;;		line 74 in file "tm1637.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;		None
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;		None
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      unsigned char 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1845 ;;      Params:         0       0       0       0       0       0
  1846 ;;      Locals:         0       0       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0       0
  1848 ;;      Totals:         0       0       0       0       0       0
  1849 ;;Total ram usage:        0 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_write_byte
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _get_DIO_PIN_value
  1860  0640                     _get_DIO_PIN_value:
  1861  0640                     l970:	
  1862                           ;incstack = 0
  1863                           ; Regs used in _get_DIO_PIN_value: [wreg+status,2+status,0]
  1864                           
  1865  0640                     l980:	
  1866                           ;tm1637.c: 75:     if(0x04 == 0x01){ return PORTAbits.RA0; }
  1867                           
  1868  0640  0020               	movlb	0	; select bank0
  1869  0641  0C0C               	rrf	12,w	;volatile
  1870  0642  0C89               	rrf	9,f
  1871  0643  3901               	andlw	1
  1872  0644                     l92:
  1873  0644  0008               	return
  1874  0645                     __end_of_get_DIO_PIN_value:
  1875                           
  1876                           	psect	text7
  1877  0639                     __ptext7:	
  1878 ;; *************** function _DIO_SET_INPUT *****************
  1879 ;; Defined at:
  1880 ;;		line 40 in file "tm1637.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		None
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1894 ;;      Params:         0       0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_write_byte
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           
  1908                           ;psect for function _DIO_SET_INPUT
  1909  0639                     _DIO_SET_INPUT:
  1910  0639                     l964:	
  1911                           ;incstack = 0
  1912                           ; Regs used in _DIO_SET_INPUT: []
  1913                           
  1914  0639  0021               	movlb	1	; select bank1
  1915  063A  150C               	bsf	12,2	;volatile
  1916  063B                     l76:
  1917  063B  0008               	return
  1918  063C                     __end_of_DIO_SET_INPUT:
  1919                           
  1920                           	psect	text8
  1921  069D                     __ptext8:	
  1922 ;; *************** function _stop_segment *****************
  1923 ;; Defined at:
  1924 ;;		line 60 in file "tm1637.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1938 ;;      Params:         0       0       0       0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0
  1941 ;;      Totals:         0       0       0       0       0       0
  1942 ;;Total ram usage:        0 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 1
  1945 ;; This function calls:
  1946 ;;		_CLK_SET_HIGH
  1947 ;;		_CLK_SET_LOW
  1948 ;;		_CLK_SET_OUTPUT
  1949 ;;		_DIO_SET_HIGH
  1950 ;;		_DIO_SET_LOW
  1951 ;;		_DIO_SET_OUTPUT
  1952 ;; This function is called by:
  1953 ;;		_set_segments
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _stop_segment
  1959  069D                     _stop_segment:
  1960  069D                     l1010:	
  1961                           ;incstack = 0
  1962                           ; Regs used in _stop_segment: [wreg+status,2+status,0+pclath+cstack]
  1963                           
  1964                           
  1965                           ;tm1637.c: 62:     DIO_SET_OUTPUT();
  1966  069D  3186  2657  3186   	fcall	_DIO_SET_OUTPUT
  1967                           
  1968                           ;tm1637.c: 63:     CLK_SET_OUTPUT();
  1969  06A0  3186  264B  3186   	fcall	_CLK_SET_OUTPUT
  1970                           
  1971                           ;tm1637.c: 66:     CLK_SET_LOW();
  1972  06A3  3186  2645  3186   	fcall	_CLK_SET_LOW
  1973                           
  1974                           ;tm1637.c: 67:     DIO_SET_LOW();
  1975  06A6  3186  2651  3186   	fcall	_DIO_SET_LOW
  1976  06A9                     l1012:
  1977                           
  1978                           ;tm1637.c: 70:     CLK_SET_HIGH();
  1979  06A9  3186  2633  3186   	fcall	_CLK_SET_HIGH
  1980  06AC                     l1014:
  1981                           
  1982                           ;tm1637.c: 71:     DIO_SET_HIGH();
  1983  06AC  3186  2636  3186   	fcall	_DIO_SET_HIGH
  1984  06AF                     l88:
  1985  06AF  0008               	return
  1986  06B0                     __end_of_stop_segment:
  1987                           
  1988                           	psect	text9
  1989  068A                     __ptext9:	
  1990 ;; *************** function _start_segment *****************
  1991 ;; Defined at:
  1992 ;;		line 46 in file "tm1637.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, pclath, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2006 ;;      Params:         0       0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 1
  2013 ;; This function calls:
  2014 ;;		_CLK_SET_HIGH
  2015 ;;		_CLK_SET_LOW
  2016 ;;		_CLK_SET_OUTPUT
  2017 ;;		_DIO_SET_HIGH
  2018 ;;		_DIO_SET_LOW
  2019 ;;		_DIO_SET_OUTPUT
  2020 ;; This function is called by:
  2021 ;;		_set_segments
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function _start_segment
  2027  068A                     _start_segment:
  2028  068A                     l1004:	
  2029                           ;incstack = 0
  2030                           ; Regs used in _start_segment: [wreg+status,2+status,0+pclath+cstack]
  2031                           
  2032                           
  2033                           ;tm1637.c: 48:     DIO_SET_OUTPUT();
  2034  068A  3186  2657  3186   	fcall	_DIO_SET_OUTPUT
  2035                           
  2036                           ;tm1637.c: 49:     CLK_SET_OUTPUT();
  2037  068D  3186  264B  3186   	fcall	_CLK_SET_OUTPUT
  2038  0690                     l1006:
  2039                           
  2040                           ;tm1637.c: 52:     DIO_SET_HIGH();
  2041  0690  3186  2636  3186   	fcall	_DIO_SET_HIGH
  2042  0693                     l1008:
  2043                           
  2044                           ;tm1637.c: 53:     CLK_SET_HIGH();
  2045  0693  3186  2633  3186   	fcall	_CLK_SET_HIGH
  2046                           
  2047                           ;tm1637.c: 56:     DIO_SET_LOW();
  2048  0696  3186  2651  3186   	fcall	_DIO_SET_LOW
  2049                           
  2050                           ;tm1637.c: 57:     CLK_SET_LOW();
  2051  0699  3186  2645  3186   	fcall	_CLK_SET_LOW
  2052  069C                     l85:
  2053  069C  0008               	return
  2054  069D                     __end_of_start_segment:
  2055                           
  2056                           	psect	text10
  2057  0657                     __ptext10:	
  2058 ;; *************** function _DIO_SET_OUTPUT *****************
  2059 ;; Defined at:
  2060 ;;		line 38 in file "tm1637.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2074 ;;      Params:         0       0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0       0
  2076 ;;      Temps:          1       0       0       0       0       0
  2077 ;;      Totals:         1       0       0       0       0       0
  2078 ;;Total ram usage:        1 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_start_segment
  2084 ;;		_stop_segment
  2085 ;;		_write_byte
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           
  2090                           ;psect for function _DIO_SET_OUTPUT
  2091  0657                     _DIO_SET_OUTPUT:
  2092  0657                     l962:	
  2093                           ;incstack = 0
  2094                           ; Regs used in _DIO_SET_OUTPUT: [wreg+status,2+status,0]
  2095                           
  2096  0657  30FB               	movlw	251
  2097  0658  00F0               	movwf	??_DIO_SET_OUTPUT
  2098  0659  0870               	movf	??_DIO_SET_OUTPUT,w
  2099  065A  0021               	movlb	1	; select bank1
  2100  065B  058C               	andwf	12,f	;volatile
  2101  065C                     l73:
  2102  065C  0008               	return
  2103  065D                     __end_of_DIO_SET_OUTPUT:
  2104                           
  2105                           	psect	text11
  2106  0651                     __ptext11:	
  2107 ;; *************** function _DIO_SET_LOW *****************
  2108 ;; Defined at:
  2109 ;;		line 44 in file "tm1637.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2123 ;;      Params:         0       0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0
  2125 ;;      Temps:          1       0       0       0       0       0
  2126 ;;      Totals:         1       0       0       0       0       0
  2127 ;;Total ram usage:        1 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_start_segment
  2133 ;;		_stop_segment
  2134 ;;		_write_byte
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _DIO_SET_LOW
  2140  0651                     _DIO_SET_LOW:
  2141  0651                     l968:	
  2142                           ;incstack = 0
  2143                           ; Regs used in _DIO_SET_LOW: [wreg+status,2+status,0]
  2144                           
  2145  0651  30FB               	movlw	251
  2146  0652  00F0               	movwf	??_DIO_SET_LOW
  2147  0653  0870               	movf	??_DIO_SET_LOW,w
  2148  0654  0022               	movlb	2	; select bank2
  2149  0655  058C               	andwf	12,f	;volatile
  2150  0656                     l82:
  2151  0656  0008               	return
  2152  0657                     __end_of_DIO_SET_LOW:
  2153                           
  2154                           	psect	text12
  2155  0636                     __ptext12:	
  2156 ;; *************** function _DIO_SET_HIGH *****************
  2157 ;; Defined at:
  2158 ;;		line 42 in file "tm1637.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		None
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2172 ;;      Params:         0       0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0
  2175 ;;      Totals:         0       0       0       0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_start_segment
  2182 ;;		_stop_segment
  2183 ;;		_write_byte
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _DIO_SET_HIGH
  2189  0636                     _DIO_SET_HIGH:
  2190  0636                     l966:	
  2191                           ;incstack = 0
  2192                           ; Regs used in _DIO_SET_HIGH: []
  2193                           
  2194  0636  0022               	movlb	2	; select bank2
  2195  0637  150C               	bsf	12,2	;volatile
  2196  0638                     l79:
  2197  0638  0008               	return
  2198  0639                     __end_of_DIO_SET_HIGH:
  2199                           
  2200                           	psect	text13
  2201  064B                     __ptext13:	
  2202 ;; *************** function _CLK_SET_OUTPUT *****************
  2203 ;; Defined at:
  2204 ;;		line 30 in file "tm1637.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2218 ;;      Params:         0       0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0       0
  2220 ;;      Temps:          1       0       0       0       0       0
  2221 ;;      Totals:         1       0       0       0       0       0
  2222 ;;Total ram usage:        1 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_start_segment
  2228 ;;		_stop_segment
  2229 ;;		_write_byte
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _CLK_SET_OUTPUT
  2235  064B                     _CLK_SET_OUTPUT:
  2236  064B                     l956:	
  2237                           ;incstack = 0
  2238                           ; Regs used in _CLK_SET_OUTPUT: [wreg+status,2+status,0]
  2239                           
  2240  064B  30FD               	movlw	253
  2241  064C  00F0               	movwf	??_CLK_SET_OUTPUT
  2242  064D  0870               	movf	??_CLK_SET_OUTPUT,w
  2243  064E  0021               	movlb	1	; select bank1
  2244  064F  058C               	andwf	12,f	;volatile
  2245  0650                     l64:
  2246  0650  0008               	return
  2247  0651                     __end_of_CLK_SET_OUTPUT:
  2248                           
  2249                           	psect	text14
  2250  0645                     __ptext14:	
  2251 ;; *************** function _CLK_SET_LOW *****************
  2252 ;; Defined at:
  2253 ;;		line 35 in file "tm1637.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2267 ;;      Params:         0       0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0       0
  2269 ;;      Temps:          1       0       0       0       0       0
  2270 ;;      Totals:         1       0       0       0       0       0
  2271 ;;Total ram usage:        1 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_start_segment
  2277 ;;		_stop_segment
  2278 ;;		_write_byte
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _CLK_SET_LOW
  2284  0645                     _CLK_SET_LOW:
  2285  0645                     l960:	
  2286                           ;incstack = 0
  2287                           ; Regs used in _CLK_SET_LOW: [wreg+status,2+status,0]
  2288                           
  2289  0645  30FD               	movlw	253
  2290  0646  00F0               	movwf	??_CLK_SET_LOW
  2291  0647  0870               	movf	??_CLK_SET_LOW,w
  2292  0648  0022               	movlb	2	; select bank2
  2293  0649  058C               	andwf	12,f	;volatile
  2294  064A                     l70:
  2295  064A  0008               	return
  2296  064B                     __end_of_CLK_SET_LOW:
  2297                           
  2298                           	psect	text15
  2299  0633                     __ptext15:	
  2300 ;; *************** function _CLK_SET_HIGH *****************
  2301 ;; Defined at:
  2302 ;;		line 33 in file "tm1637.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		None
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2316 ;;      Params:         0       0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_start_segment
  2326 ;;		_stop_segment
  2327 ;;		_write_byte
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _CLK_SET_HIGH
  2333  0633                     _CLK_SET_HIGH:
  2334  0633                     l958:	
  2335                           ;incstack = 0
  2336                           ; Regs used in _CLK_SET_HIGH: []
  2337                           
  2338  0633  0022               	movlb	2	; select bank2
  2339  0634  148C               	bsf	12,1	;volatile
  2340  0635                     l67:
  2341  0635  0008               	return
  2342  0636                     __end_of_CLK_SET_HIGH:
  2343                           
  2344                           	psect	text16
  2345  0672                     __ptext16:	
  2346 ;; *************** function _SYSTEM_Initialize *****************
  2347 ;; Defined at:
  2348 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, pclath, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2362 ;;      Params:         0       0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 1
  2369 ;; This function calls:
  2370 ;;		_OSCILLATOR_Initialize
  2371 ;;		_PIN_MANAGER_Initialize
  2372 ;;		_WDT_Initialize
  2373 ;; This function is called by:
  2374 ;;		_main
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _SYSTEM_Initialize
  2380  0672                     _SYSTEM_Initialize:
  2381  0672                     l1088:	
  2382                           ;incstack = 0
  2383                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2384                           
  2385                           
  2386                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2387  0672  3186  26D8  3186   	fcall	_PIN_MANAGER_Initialize
  2388                           
  2389                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2390  0675  3186  2663  3186   	fcall	_OSCILLATOR_Initialize
  2391                           
  2392                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2393  0678  3186  263C  3186   	fcall	_WDT_Initialize
  2394  067B                     l45:
  2395  067B  0008               	return
  2396  067C                     __end_of_SYSTEM_Initialize:
  2397                           
  2398                           	psect	text17
  2399  063C                     __ptext17:	
  2400 ;; *************** function _WDT_Initialize *****************
  2401 ;; Defined at:
  2402 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2416 ;;      Params:         0       0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_SYSTEM_Initialize
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _WDT_Initialize
  2431  063C                     _WDT_Initialize:
  2432  063C                     l1074:	
  2433                           ;incstack = 0
  2434                           ; Regs used in _WDT_Initialize: [wreg]
  2435                           
  2436                           
  2437                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  2438  063C  3016               	movlw	22
  2439  063D  0021               	movlb	1	; select bank1
  2440  063E  0097               	movwf	23	;volatile
  2441  063F                     l51:
  2442  063F  0008               	return
  2443  0640                     __end_of_WDT_Initialize:
  2444                           
  2445                           	psect	text18
  2446  06D8                     __ptext18:	
  2447 ;; *************** function _PIN_MANAGER_Initialize *****************
  2448 ;; Defined at:
  2449 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2463 ;;      Params:         0       0       0       0       0       0
  2464 ;;      Locals:         0       0       0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0       0
  2466 ;;      Totals:         0       0       0       0       0       0
  2467 ;;Total ram usage:        0 bytes
  2468 ;; Hardware stack levels used: 1
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_SYSTEM_Initialize
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _PIN_MANAGER_Initialize
  2478  06D8                     _PIN_MANAGER_Initialize:
  2479  06D8                     l1056:	
  2480                           ;incstack = 0
  2481                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2482                           
  2483                           
  2484                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2485  06D8  0022               	movlb	2	; select bank2
  2486  06D9  018C               	clrf	12	;volatile
  2487                           
  2488                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2489  06DA  018D               	clrf	13	;volatile
  2490  06DB                     l1058:
  2491                           
  2492                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  2493  06DB  30FF               	movlw	255
  2494  06DC  0021               	movlb	1	; select bank1
  2495  06DD  008C               	movwf	12	;volatile
  2496  06DE                     l1060:
  2497                           
  2498                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2499  06DE  30FF               	movlw	255
  2500  06DF  008D               	movwf	13	;volatile
  2501  06E0                     l1062:
  2502                           
  2503                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  2504  06E0  30FE               	movlw	254
  2505  06E1  0023               	movlb	3	; select bank3
  2506  06E2  008D               	movwf	13	;volatile
  2507  06E3                     l1064:
  2508                           
  2509                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2510  06E3  301F               	movlw	31
  2511  06E4  008C               	movwf	12	;volatile
  2512                           
  2513                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2514  06E5  0024               	movlb	4	; select bank4
  2515  06E6  018D               	clrf	13	;volatile
  2516                           
  2517                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2518  06E7  018C               	clrf	12	;volatile
  2519  06E8                     l1066:
  2520                           
  2521                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2522  06E8  0021               	movlb	1	; select bank1
  2523  06E9  1795               	bsf	21,7	;volatile
  2524                           
  2525                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2526  06EA  0022               	movlb	2	; select bank2
  2527  06EB  019D               	clrf	29	;volatile
  2528                           
  2529                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2530  06EC  019E               	clrf	30	;volatile
  2531  06ED                     l25:
  2532  06ED  0008               	return
  2533  06EE                     __end_of_PIN_MANAGER_Initialize:
  2534                           
  2535                           	psect	text19
  2536  0663                     __ptext19:	
  2537 ;; *************** function _OSCILLATOR_Initialize *****************
  2538 ;; Defined at:
  2539 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2553 ;;      Params:         0       0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_SYSTEM_Initialize
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _OSCILLATOR_Initialize
  2568  0663                     _OSCILLATOR_Initialize:
  2569  0663                     l1068:	
  2570                           ;incstack = 0
  2571                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2572                           
  2573                           
  2574                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  2575  0663  3070               	movlw	112
  2576  0664  0021               	movlb	1	; select bank1
  2577  0665  0099               	movwf	25	;volatile
  2578  0666                     l1070:
  2579                           
  2580                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  2581  0666  0198               	clrf	24	;volatile
  2582  0667                     l1072:
  2583                           
  2584                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2585  0667  0022               	movlb	2	; select bank2
  2586  0668  0196               	clrf	22	;volatile
  2587  0669                     l48:
  2588  0669  0008               	return
  2589  066A                     __end_of_OSCILLATOR_Initialize:
  2590  007E                     btemp	set	126	;btemp
  2591  007E                     wtemp0	set	126
  2592                           
  2593                           	psect	config
  2594                           
  2595                           ;Config register CONFIG1 @ 0x8007
  2596                           ;	Oscillator Selection
  2597                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2598                           ;	Watchdog Timer Enable
  2599                           ;	WDTE = OFF, WDT disabled
  2600                           ;	Power-up Timer Enable
  2601                           ;	PWRTE = OFF, PWRT disabled
  2602                           ;	MCLR Pin Function Select
  2603                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2604                           ;	Flash Program Memory Code Protection
  2605                           ;	CP = OFF, Program memory code protection is disabled
  2606                           ;	Data Memory Code Protection
  2607                           ;	CPD = OFF, Data memory code protection is disabled
  2608                           ;	Brown-out Reset Enable
  2609                           ;	BOREN = ON, Brown-out Reset enabled
  2610                           ;	Clock Out Enable
  2611                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2612                           ;	Internal/External Switchover
  2613                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2614                           ;	Fail-Safe Clock Monitor Enable
  2615                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2616  8007                     	org	32775
  2617  8007  3FE4               	dw	16356
  2618                           
  2619                           ;Config register CONFIG2 @ 0x8008
  2620                           ;	Flash Memory Self-Write Protection
  2621                           ;	WRT = OFF, Write protection off
  2622                           ;	PLL Enable
  2623                           ;	PLLEN = OFF, 4x PLL disabled
  2624                           ;	Stack Overflow/Underflow Reset Enable
  2625                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2626                           ;	Brown-out Reset Voltage Selection
  2627                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2628                           ;	Low-Voltage Programming Enable
  2629                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2630  8008                     	org	32776
  2631  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      29
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> main@data(BANK0[4]), clear_segment@data(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_clear_segment
    _clear_segment->_set_segments
    _set_segments->_write_byte
    _write_byte->_CLK_SET_LOW
    _write_byte->_CLK_SET_OUTPUT
    _write_byte->_DIO_SET_LOW
    _write_byte->_DIO_SET_OUTPUT
    _stop_segment->_CLK_SET_LOW
    _stop_segment->_CLK_SET_OUTPUT
    _stop_segment->_DIO_SET_LOW
    _stop_segment->_DIO_SET_OUTPUT
    _start_segment->_CLK_SET_LOW
    _start_segment->_CLK_SET_OUTPUT
    _start_segment->_DIO_SET_LOW
    _start_segment->_DIO_SET_OUTPUT

Critical Paths under _main in BANK0

    _main->_clear_segment

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2065
                                             12 COMMON     2     2      0
                                              4 BANK0      6     6      0
                  _SYSTEM_Initialize
                      _clear_segment
                       _encode_digit
                     _set_brigthness
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _encode_digit                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear_segment                                        5     5      0     834
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_segments                                         5     3      2     810
                                              6 COMMON     5     3      2
                      _start_segment
                       _stop_segment
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     143
                                              1 COMMON     5     5      0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                      _DIO_SET_INPUT
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
                  _get_DIO_PIN_value
 ---------------------------------------------------------------------------------
 (3) _get_DIO_PIN_value                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_INPUT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stop_segment                                         0     0      0       0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (2) _start_segment                                        0     0      0       0
                       _CLK_SET_HIGH
                        _CLK_SET_LOW
                     _CLK_SET_OUTPUT
                       _DIO_SET_HIGH
                        _DIO_SET_LOW
                     _DIO_SET_OUTPUT
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_OUTPUT                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_LOW                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DIO_SET_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_OUTPUT                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_LOW                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CLK_SET_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _clear_segment
     _set_segments
       _start_segment
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
       _stop_segment
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
       _write_byte
         _CLK_SET_HIGH
         _CLK_SET_LOW
         _CLK_SET_OUTPUT
         _DIO_SET_HIGH
         _DIO_SET_INPUT
         _DIO_SET_LOW
         _DIO_SET_OUTPUT
         _get_DIO_PIN_value
   _encode_digit
   _set_brigthness
   _set_segments

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      1D       6       36.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 25 23:15:22 2021

         __size_of_start_segment 0013                               l25 06ED                               l51 063F  
                             l45 067B                               l70 064A                               l48 0669  
                             l64 0650                               l73 065C                               l82 0656  
                             l67 0635                               l76 063B                               l92 0644  
                             l85 069C                               l79 0638                               l88 06AF  
                             u70 0739                               u71 0738                               u80 0751  
                             u81 0750                               u90 0768                               u91 0767  
                            l112 06D7                              l106 076E                              l107 0771  
                            l123 06C2                              l118 0728                              l126 0671  
                            l960 0645                              l962 0657                              l970 0640  
                            l956 064B                              l964 0639                              l980 0640  
                            l958 0633                              l966 0636                              l968 0651  
                            u100 0718                              u101 0717                              u110 06C9  
                            u111 06C8                              u120 07D0                              u121 07CF  
                            u137 07DE                              wreg 0009                   ??_encode_digit 0070  
                           l1010 069D                             l1004 068A                             l1012 06A9  
                           l1020 0731                             l1100 066B                             l1006 0690  
                           l1014 06AC                             l1030 0739                             l1110 0779  
                           l1008 0693                             l1040 0751                             l1032 073D  
                           l1016 072A                             l1120 0797                             l1112 077B  
                           l1104 0772                             l1050 0763                             l1042 0754  
                           l1034 0740                             l1026 0732                             l1018 072E  
                           l1130 07B8                             l1122 079F                             l1114 0784  
                           l1106 0775                             l1060 06DE                             l1052 0768  
                           l1044 0757                             l1036 0743                             l1028 0735  
                           l1140 07CA                             l1124 07A7                             l1116 0787  
                           l1108 0777                             l1070 0666                             l1062 06E0  
                           l1046 075A                             l1038 0747                             l1142 07D0  
                           l1126 07AD                             l1118 078F                             l1072 0667  
                           l1064 06E3                             l1056 06D8                             l1048 075D  
                           l1080 0704                             l1144 07D9                             l1136 07B9  
                           l1128 07B6                             l1066 06E8                             l1058 06DB  
                           l1074 063C                             l1082 070E                             l1090 06C4  
                           l1146 07E4                             l1138 07C6                             l1068 0663  
                           l1084 0712                             l1076 06EF                             l1092 06C9  
                           l1086 0718                             l1078 0702                             l1094 06D1  
                           l1088 0672                             l1096 06B0                             l1098 06B9  
                           _LATA 010C                             _LATB 010D                             _WPUA 020C  
                           _WPUB 020D                             _main 0772                    write_byte@ack 0073  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           start 0002   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 066A  
          __size_of_stop_segment 0013                            ?_main 0070                            _TRISA 008C  
                          _TRISB 008D                   _WDT_Initialize 063C                    _start_segment 068A  
                 write_byte@data 0074                            main@i 0037                            main@k 0032  
                          status 0003                            wtemp0 007E             __end_of_CLK_SET_HIGH 0636  
                __initialization 07EC                     _stop_segment 069D                     __end_of_main 07EC  
           __end_of_DIO_SET_HIGH 0639                           ??_main 007C             __size_of_CLK_SET_LOW 0006  
         __end_of_WDT_Initialize 0640             __size_of_DIO_SET_LOW 0006                  set_segments@pos 0077  
                 ?_start_segment 0070                           _ANSELA 018C                           _ANSELB 018D  
                         _BORCON 0116                           _OSCCON 0099                           _WDTCON 0097  
          __end_of_clear_segment 06C3             __end_of_encode_digit 0672                  ?_WDT_Initialize 0070  
        __size_of_set_brigthness 0015                _SYSTEM_Initialize 0672          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070          __size_of_CLK_SET_OUTPUT 0006         set_brigthness@brightness 0072  
                 __pcstackCOMMON 0070                     __pidataBANK0 067C              ??_SYSTEM_Initialize 0070  
          __end_of_DIO_SET_INPUT 063C                   _OPTION_REGbits 0095                  ??_start_segment 0071  
      __end_of_SYSTEM_Initialize 067C                       __pbssBANK0 0038            __size_of_CLK_SET_HIGH 0003  
              _get_DIO_PIN_value 0640          __size_of_DIO_SET_OUTPUT 0006               ?_get_DIO_PIN_value 0070  
          __size_of_DIO_SET_HIGH 0003                       __pmaintext 0772              ??_get_DIO_PIN_value 0070  
                        _APFCON0 011D                          _APFCON1 011E               set_segments@length 0076  
                   _CLK_SET_HIGH 0633                          _OSCTUNE 0098        __end_of_get_DIO_PIN_value 0645  
                   _DIO_SET_HIGH 0636            __size_of_encode_digit 0008                    ?_set_segments 0076  
                        __ptext1 06C3                          __ptext2 066A                          __ptext3 06B0  
                        __ptext4 06EE                          __ptext5 0729                          __ptext6 0640  
                        __ptext7 0639                          __ptext8 069D                          __ptext9 068A  
          _OSCILLATOR_Initialize 0663                          _segdata 0020         ??_PIN_MANAGER_Initialize 0070  
                 _set_brigthness 06C3       __size_of_SYSTEM_Initialize 000A             end_of_initialization 07FD  
                   _encode_digit 066A               clear_segment@F2511 0038                          init_ram 065D  
                        initloop 065E                   _CLK_SET_OUTPUT 064B             set_segments@segments 0079  
                 ??_set_segments 0078                    ??_CLK_SET_LOW 0070                 ??_WDT_Initialize 0070  
                      _PORTAbits 000C                    ??_DIO_SET_LOW 0070                     _m_brightness 003C  
         __end_of_set_brigthness 06D8       __size_of_get_DIO_PIN_value 0005           __end_of_CLK_SET_OUTPUT 0651  
                 _DIO_SET_OUTPUT 0657                       _write_byte 0729           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07EC                  ?_set_brigthness 0070              __end_of_CLK_SET_LOW 064B  
__size_of_PIN_MANAGER_Initialize 0016           __size_of_clear_segment 0013              __end_of_DIO_SET_LOW 0657  
                ?_CLK_SET_OUTPUT 0070           __end_of_DIO_SET_OUTPUT 065D                      __pdataBANK0 0020  
                      ___latbits 0001                    __pcstackBANK0 002E            __end_of_start_segment 069D  
           __end_of_set_segments 0729                  ?_DIO_SET_OUTPUT 0070           __size_of_DIO_SET_INPUT 0003  
               set_brigthness@on 0070           _PIN_MANAGER_Initialize 06D8                    ?_stop_segment 0070  
                  _clear_segment 06B0                      _CLK_SET_LOW 0645                      ?_write_byte 0070  
                    _DIO_SET_LOW 0651                   ??_stop_segment 0071                   ?_clear_segment 0070  
              clear_segment@data 002E                        main@F2504 002A                encode_digit@digit 0070  
                  _DIO_SET_INPUT 0639                      write_byte@b 0072                      write_byte@i 0075  
            __size_of_write_byte 0049                    set_segments@k 007A          ??_OSCILLATOR_Initialize 0070  
               ??_set_brigthness 0071                   ?_DIO_SET_INPUT 0070            __size_of_set_segments 003B  
               ??_CLK_SET_OUTPUT 0070                         __ptext10 0657                         __ptext11 0651  
                       __ptext12 0636                         __ptext13 064B                         __ptext14 0645  
                       __ptext15 0633                         __ptext16 0672                         __ptext17 063C  
                       __ptext18 06D8                         __ptext19 0663                    __size_of_main 007A  
                ??_clear_segment 007B                         main@data 0033                     _set_segments 06EE  
                  ?_CLK_SET_HIGH 0070             __end_of_stop_segment 06B0                 ??_DIO_SET_OUTPUT 0070  
        __size_of_WDT_Initialize 0004                    ?_DIO_SET_HIGH 0070          ?_PIN_MANAGER_Initialize 0070  
                   ?_CLK_SET_LOW 0070                     ??_write_byte 0071                  ??_DIO_SET_INPUT 0070  
                   ?_DIO_SET_LOW 0070                   ??_CLK_SET_HIGH 0070                   ??_DIO_SET_HIGH 0070  
                  ?_encode_digit 0070   __end_of_PIN_MANAGER_Initialize 06EE               __end_of_write_byte 0772  
