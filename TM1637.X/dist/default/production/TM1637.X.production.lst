

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Oct 04 14:22:00 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F1827 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011D                     	;# 
   122  011E                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0199                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  020D                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  0219                     	;# 
   163  021A                     	;# 
   164  021B                     	;# 
   165  021C                     	;# 
   166  021D                     	;# 
   167  021E                     	;# 
   168  021F                     	;# 
   169  0291                     	;# 
   170  0291                     	;# 
   171  0292                     	;# 
   172  0293                     	;# 
   173  0294                     	;# 
   174  0295                     	;# 
   175  0295                     	;# 
   176  0296                     	;# 
   177  0298                     	;# 
   178  0298                     	;# 
   179  0299                     	;# 
   180  029A                     	;# 
   181  029B                     	;# 
   182  029C                     	;# 
   183  029C                     	;# 
   184  029D                     	;# 
   185  029E                     	;# 
   186  029E                     	;# 
   187  0311                     	;# 
   188  0311                     	;# 
   189  0312                     	;# 
   190  0313                     	;# 
   191  0318                     	;# 
   192  0318                     	;# 
   193  0319                     	;# 
   194  031A                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  039A                     	;# 
   199  039C                     	;# 
   200  039D                     	;# 
   201  039E                     	;# 
   202  039F                     	;# 
   203  0415                     	;# 
   204  0416                     	;# 
   205  0417                     	;# 
   206  041C                     	;# 
   207  041D                     	;# 
   208  041E                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  0111                     	;# 
   269  0112                     	;# 
   270  0113                     	;# 
   271  0114                     	;# 
   272  0115                     	;# 
   273  0116                     	;# 
   274  0117                     	;# 
   275  0118                     	;# 
   276  0119                     	;# 
   277  011A                     	;# 
   278  011B                     	;# 
   279  011D                     	;# 
   280  011E                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0191                     	;# 
   284  0191                     	;# 
   285  0192                     	;# 
   286  0193                     	;# 
   287  0193                     	;# 
   288  0193                     	;# 
   289  0194                     	;# 
   290  0195                     	;# 
   291  0196                     	;# 
   292  0199                     	;# 
   293  019A                     	;# 
   294  019B                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019C                     	;# 
   299  019C                     	;# 
   300  019D                     	;# 
   301  019E                     	;# 
   302  019F                     	;# 
   303  020C                     	;# 
   304  020D                     	;# 
   305  0211                     	;# 
   306  0211                     	;# 
   307  0212                     	;# 
   308  0212                     	;# 
   309  0213                     	;# 
   310  0213                     	;# 
   311  0214                     	;# 
   312  0214                     	;# 
   313  0215                     	;# 
   314  0215                     	;# 
   315  0215                     	;# 
   316  0216                     	;# 
   317  0216                     	;# 
   318  0217                     	;# 
   319  0217                     	;# 
   320  0219                     	;# 
   321  021A                     	;# 
   322  021B                     	;# 
   323  021C                     	;# 
   324  021D                     	;# 
   325  021E                     	;# 
   326  021F                     	;# 
   327  0291                     	;# 
   328  0291                     	;# 
   329  0292                     	;# 
   330  0293                     	;# 
   331  0294                     	;# 
   332  0295                     	;# 
   333  0295                     	;# 
   334  0296                     	;# 
   335  0298                     	;# 
   336  0298                     	;# 
   337  0299                     	;# 
   338  029A                     	;# 
   339  029B                     	;# 
   340  029C                     	;# 
   341  029C                     	;# 
   342  029D                     	;# 
   343  029E                     	;# 
   344  029E                     	;# 
   345  0311                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0318                     	;# 
   350  0318                     	;# 
   351  0319                     	;# 
   352  031A                     	;# 
   353  0394                     	;# 
   354  0395                     	;# 
   355  0396                     	;# 
   356  039A                     	;# 
   357  039C                     	;# 
   358  039D                     	;# 
   359  039E                     	;# 
   360  039F                     	;# 
   361  0415                     	;# 
   362  0416                     	;# 
   363  0417                     	;# 
   364  041C                     	;# 
   365  041D                     	;# 
   366  041E                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0093                     	;# 
   412  0094                     	;# 
   413  0095                     	;# 
   414  0096                     	;# 
   415  0097                     	;# 
   416  0098                     	;# 
   417  0099                     	;# 
   418  009A                     	;# 
   419  009B                     	;# 
   420  009B                     	;# 
   421  009C                     	;# 
   422  009D                     	;# 
   423  009E                     	;# 
   424  010C                     	;# 
   425  010D                     	;# 
   426  0111                     	;# 
   427  0112                     	;# 
   428  0113                     	;# 
   429  0114                     	;# 
   430  0115                     	;# 
   431  0116                     	;# 
   432  0117                     	;# 
   433  0118                     	;# 
   434  0119                     	;# 
   435  011A                     	;# 
   436  011B                     	;# 
   437  011D                     	;# 
   438  011E                     	;# 
   439  018C                     	;# 
   440  018D                     	;# 
   441  0191                     	;# 
   442  0191                     	;# 
   443  0192                     	;# 
   444  0193                     	;# 
   445  0193                     	;# 
   446  0193                     	;# 
   447  0194                     	;# 
   448  0195                     	;# 
   449  0196                     	;# 
   450  0199                     	;# 
   451  019A                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019C                     	;# 
   457  019C                     	;# 
   458  019D                     	;# 
   459  019E                     	;# 
   460  019F                     	;# 
   461  020C                     	;# 
   462  020D                     	;# 
   463  0211                     	;# 
   464  0211                     	;# 
   465  0212                     	;# 
   466  0212                     	;# 
   467  0213                     	;# 
   468  0213                     	;# 
   469  0214                     	;# 
   470  0214                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0216                     	;# 
   475  0216                     	;# 
   476  0217                     	;# 
   477  0217                     	;# 
   478  0219                     	;# 
   479  021A                     	;# 
   480  021B                     	;# 
   481  021C                     	;# 
   482  021D                     	;# 
   483  021E                     	;# 
   484  021F                     	;# 
   485  0291                     	;# 
   486  0291                     	;# 
   487  0292                     	;# 
   488  0293                     	;# 
   489  0294                     	;# 
   490  0295                     	;# 
   491  0295                     	;# 
   492  0296                     	;# 
   493  0298                     	;# 
   494  0298                     	;# 
   495  0299                     	;# 
   496  029A                     	;# 
   497  029B                     	;# 
   498  029C                     	;# 
   499  029C                     	;# 
   500  029D                     	;# 
   501  029E                     	;# 
   502  029E                     	;# 
   503  0311                     	;# 
   504  0311                     	;# 
   505  0312                     	;# 
   506  0313                     	;# 
   507  0318                     	;# 
   508  0318                     	;# 
   509  0319                     	;# 
   510  031A                     	;# 
   511  0394                     	;# 
   512  0395                     	;# 
   513  0396                     	;# 
   514  039A                     	;# 
   515  039C                     	;# 
   516  039D                     	;# 
   517  039E                     	;# 
   518  039F                     	;# 
   519  0415                     	;# 
   520  0416                     	;# 
   521  0417                     	;# 
   522  041C                     	;# 
   523  041D                     	;# 
   524  041E                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  0011                     	;# 
   551  0012                     	;# 
   552  0013                     	;# 
   553  0014                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  001E                     	;# 
   564  001F                     	;# 
   565  008C                     	;# 
   566  008D                     	;# 
   567  0091                     	;# 
   568  0092                     	;# 
   569  0093                     	;# 
   570  0094                     	;# 
   571  0095                     	;# 
   572  0096                     	;# 
   573  0097                     	;# 
   574  0098                     	;# 
   575  0099                     	;# 
   576  009A                     	;# 
   577  009B                     	;# 
   578  009B                     	;# 
   579  009C                     	;# 
   580  009D                     	;# 
   581  009E                     	;# 
   582  010C                     	;# 
   583  010D                     	;# 
   584  0111                     	;# 
   585  0112                     	;# 
   586  0113                     	;# 
   587  0114                     	;# 
   588  0115                     	;# 
   589  0116                     	;# 
   590  0117                     	;# 
   591  0118                     	;# 
   592  0119                     	;# 
   593  011A                     	;# 
   594  011B                     	;# 
   595  011D                     	;# 
   596  011E                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599  0191                     	;# 
   600  0191                     	;# 
   601  0192                     	;# 
   602  0193                     	;# 
   603  0193                     	;# 
   604  0193                     	;# 
   605  0194                     	;# 
   606  0195                     	;# 
   607  0196                     	;# 
   608  0199                     	;# 
   609  019A                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019C                     	;# 
   615  019C                     	;# 
   616  019D                     	;# 
   617  019E                     	;# 
   618  019F                     	;# 
   619  020C                     	;# 
   620  020D                     	;# 
   621  0211                     	;# 
   622  0211                     	;# 
   623  0212                     	;# 
   624  0212                     	;# 
   625  0213                     	;# 
   626  0213                     	;# 
   627  0214                     	;# 
   628  0214                     	;# 
   629  0215                     	;# 
   630  0215                     	;# 
   631  0215                     	;# 
   632  0216                     	;# 
   633  0216                     	;# 
   634  0217                     	;# 
   635  0217                     	;# 
   636  0219                     	;# 
   637  021A                     	;# 
   638  021B                     	;# 
   639  021C                     	;# 
   640  021D                     	;# 
   641  021E                     	;# 
   642  021F                     	;# 
   643  0291                     	;# 
   644  0291                     	;# 
   645  0292                     	;# 
   646  0293                     	;# 
   647  0294                     	;# 
   648  0295                     	;# 
   649  0295                     	;# 
   650  0296                     	;# 
   651  0298                     	;# 
   652  0298                     	;# 
   653  0299                     	;# 
   654  029A                     	;# 
   655  029B                     	;# 
   656  029C                     	;# 
   657  029C                     	;# 
   658  029D                     	;# 
   659  029E                     	;# 
   660  029E                     	;# 
   661  0311                     	;# 
   662  0311                     	;# 
   663  0312                     	;# 
   664  0313                     	;# 
   665  0318                     	;# 
   666  0318                     	;# 
   667  0319                     	;# 
   668  031A                     	;# 
   669  0394                     	;# 
   670  0395                     	;# 
   671  0396                     	;# 
   672  039A                     	;# 
   673  039C                     	;# 
   674  039D                     	;# 
   675  039E                     	;# 
   676  039F                     	;# 
   677  0415                     	;# 
   678  0416                     	;# 
   679  0417                     	;# 
   680  041C                     	;# 
   681  041D                     	;# 
   682  041E                     	;# 
   683  0FE4                     	;# 
   684  0FE5                     	;# 
   685  0FE6                     	;# 
   686  0FE7                     	;# 
   687  0FE8                     	;# 
   688  0FE9                     	;# 
   689  0FEA                     	;# 
   690  0FEB                     	;# 
   691  0FED                     	;# 
   692  0FEE                     	;# 
   693  0FEF                     	;# 
   694  0000                     	;# 
   695  0001                     	;# 
   696  0002                     	;# 
   697  0003                     	;# 
   698  0004                     	;# 
   699  0005                     	;# 
   700  0006                     	;# 
   701  0007                     	;# 
   702  0008                     	;# 
   703  0009                     	;# 
   704  000A                     	;# 
   705  000B                     	;# 
   706  000C                     	;# 
   707  000D                     	;# 
   708  0011                     	;# 
   709  0012                     	;# 
   710  0013                     	;# 
   711  0014                     	;# 
   712  0015                     	;# 
   713  0016                     	;# 
   714  0016                     	;# 
   715  0017                     	;# 
   716  0018                     	;# 
   717  0019                     	;# 
   718  001A                     	;# 
   719  001B                     	;# 
   720  001C                     	;# 
   721  001E                     	;# 
   722  001F                     	;# 
   723  008C                     	;# 
   724  008D                     	;# 
   725  0091                     	;# 
   726  0092                     	;# 
   727  0093                     	;# 
   728  0094                     	;# 
   729  0095                     	;# 
   730  0096                     	;# 
   731  0097                     	;# 
   732  0098                     	;# 
   733  0099                     	;# 
   734  009A                     	;# 
   735  009B                     	;# 
   736  009B                     	;# 
   737  009C                     	;# 
   738  009D                     	;# 
   739  009E                     	;# 
   740  010C                     	;# 
   741  010D                     	;# 
   742  0111                     	;# 
   743  0112                     	;# 
   744  0113                     	;# 
   745  0114                     	;# 
   746  0115                     	;# 
   747  0116                     	;# 
   748  0117                     	;# 
   749  0118                     	;# 
   750  0119                     	;# 
   751  011A                     	;# 
   752  011B                     	;# 
   753  011D                     	;# 
   754  011E                     	;# 
   755  018C                     	;# 
   756  018D                     	;# 
   757  0191                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0193                     	;# 
   761  0193                     	;# 
   762  0193                     	;# 
   763  0194                     	;# 
   764  0195                     	;# 
   765  0196                     	;# 
   766  0199                     	;# 
   767  019A                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019C                     	;# 
   773  019C                     	;# 
   774  019D                     	;# 
   775  019E                     	;# 
   776  019F                     	;# 
   777  020C                     	;# 
   778  020D                     	;# 
   779  0211                     	;# 
   780  0211                     	;# 
   781  0212                     	;# 
   782  0212                     	;# 
   783  0213                     	;# 
   784  0213                     	;# 
   785  0214                     	;# 
   786  0214                     	;# 
   787  0215                     	;# 
   788  0215                     	;# 
   789  0215                     	;# 
   790  0216                     	;# 
   791  0216                     	;# 
   792  0217                     	;# 
   793  0217                     	;# 
   794  0219                     	;# 
   795  021A                     	;# 
   796  021B                     	;# 
   797  021C                     	;# 
   798  021D                     	;# 
   799  021E                     	;# 
   800  021F                     	;# 
   801  0291                     	;# 
   802  0291                     	;# 
   803  0292                     	;# 
   804  0293                     	;# 
   805  0294                     	;# 
   806  0295                     	;# 
   807  0295                     	;# 
   808  0296                     	;# 
   809  0298                     	;# 
   810  0298                     	;# 
   811  0299                     	;# 
   812  029A                     	;# 
   813  029B                     	;# 
   814  029C                     	;# 
   815  029C                     	;# 
   816  029D                     	;# 
   817  029E                     	;# 
   818  029E                     	;# 
   819  0311                     	;# 
   820  0311                     	;# 
   821  0312                     	;# 
   822  0313                     	;# 
   823  0318                     	;# 
   824  0318                     	;# 
   825  0319                     	;# 
   826  031A                     	;# 
   827  0394                     	;# 
   828  0395                     	;# 
   829  0396                     	;# 
   830  039A                     	;# 
   831  039C                     	;# 
   832  039D                     	;# 
   833  039E                     	;# 
   834  039F                     	;# 
   835  0415                     	;# 
   836  0416                     	;# 
   837  0417                     	;# 
   838  041C                     	;# 
   839  041D                     	;# 
   840  041E                     	;# 
   841  0FE4                     	;# 
   842  0FE5                     	;# 
   843  0FE6                     	;# 
   844  0FE7                     	;# 
   845  0FE8                     	;# 
   846  0FE9                     	;# 
   847  0FEA                     	;# 
   848  0FEB                     	;# 
   849  0FED                     	;# 
   850  0FEE                     	;# 
   851  0FEF                     	;# 
   852                           
   853                           	psect	idataBANK0
   854  06B2                     __pidataBANK0:
   855                           
   856                           ;initializer for _segdata
   857  06B2  343F               	retlw	63
   858  06B3  3406               	retlw	6
   859  06B4  345B               	retlw	91
   860  06B5  344F               	retlw	79
   861  06B6  3466               	retlw	102
   862  06B7  346D               	retlw	109
   863  06B8  347D               	retlw	125
   864  06B9  3407               	retlw	7
   865  06BA  347F               	retlw	127
   866  06BB  346F               	retlw	111
   867                           
   868                           ;initializer for main@F2503
   869  06BC  34FF               	retlw	255
   870  06BD  34FF               	retlw	255
   871  06BE  34FF               	retlw	255
   872  06BF  34FF               	retlw	255
   873  000C                     _PORTAbits	set	12
   874  008C                     _TRISAbits	set	140
   875  0095                     _OPTION_REGbits	set	149
   876  008D                     _TRISB	set	141
   877  008C                     _TRISA	set	140
   878  0097                     _WDTCON	set	151
   879  0098                     _OSCTUNE	set	152
   880  0099                     _OSCCON	set	153
   881  010C                     _LATAbits	set	268
   882  011E                     _APFCON1	set	286
   883  011D                     _APFCON0	set	285
   884  010D                     _LATB	set	269
   885  010C                     _LATA	set	268
   886  0116                     _BORCON	set	278
   887  018C                     _ANSELA	set	396
   888  018D                     _ANSELB	set	397
   889  020C                     _WPUA	set	524
   890  020D                     _WPUB	set	525
   891                           
   892                           	psect	cinit
   893  07EC                     start_initialization:	
   894                           ; #config settings
   895                           
   896  07EC                     __initialization:
   897                           
   898                           ; Initialize objects allocated to BANK0
   899  07EC  30B2               	movlw	low __pidataBANK0
   900  07ED  0084               	movwf	4
   901  07EE  3086               	movlw	(high __pidataBANK0)| (0+128)
   902  07EF  0085               	movwf	5
   903  07F0  3020               	movlw	low __pdataBANK0
   904  07F1  0086               	movwf	6
   905  07F2  3000               	movlw	high __pdataBANK0
   906  07F3  0087               	movwf	7
   907  07F4  300E               	movlw	14
   908  07F5  3186  2681  3187   	fcall	init_ram
   909                           
   910                           ; Clear objects allocated to COMMON
   911  07F8  01FD               	clrf	__pbssCOMMON& (0+127)
   912                           
   913                           ; Clear objects allocated to BANK0
   914  07F9  01B8               	clrf	__pbssBANK0& (0+127)
   915  07FA  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   916  07FB  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   917  07FC  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   918  07FD                     end_of_initialization:	
   919                           ;End of C runtime variable initialization code
   920                           
   921  07FD                     __end_of__initialization:
   922  07FD  0020               	movlb	0
   923  07FE  3187  2F75         	ljmp	_main	;jump to C main() function
   924                           
   925                           	psect	bssCOMMON
   926  007D                     __pbssCOMMON:
   927  007D                     _m_brightness:
   928  007D                     	ds	1
   929                           
   930                           	psect	bssBANK0
   931  0038                     __pbssBANK0:
   932  0038                     clear@F2521:
   933  0038                     	ds	4
   934                           
   935                           	psect	dataBANK0
   936  0020                     __pdataBANK0:
   937  0020                     _segdata:
   938  0020                     	ds	10
   939  002A                     main@F2503:
   940  002A                     	ds	4
   941                           
   942                           	psect	inittext
   943  0681                     init_ram:
   944  0681  00FE               	movwf	btemp
   945  0682                     initloop:
   946  0682  0012               	moviw fsr0++
   947  0683  001E               	movwi fsr1++
   948  0684  0BFE               	decfsz	btemp,f
   949  0685  2E82               	goto	initloop
   950  0686  3400               	retlw	0
   951                           
   952                           	psect	cstackCOMMON
   953  0070                     __pcstackCOMMON:
   954  0070                     ?_PIN_MANAGER_Initialize:
   955  0070                     ??_PIN_MANAGER_Initialize:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_OSCILLATOR_Initialize:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ??_OSCILLATOR_Initialize:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ?_WDT_Initialize:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ??_WDT_Initialize:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ?_clear:	
   971                           ; 1 bytes @ 0x0
   972                           
   973  0070                     ?_encode_digit:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0070                     ??_encode_digit:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0070                     ?_set_brigthness:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0070                     ?_SYSTEM_Initialize:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ??_SYSTEM_Initialize:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ?_main:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ?_bit_delay:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ??_bit_delay:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ?_start:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ??_start:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?_stop:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ??_stop:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_write_byte:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ??_write_byte:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     set_brigthness@on:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     encode_digit@digit:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x0
  1023  0070                     	ds	1
  1024  0071                     ??_set_brigthness:
  1025  0071                     write_byte@b:	
  1026                           ; 1 bytes @ 0x1
  1027                           
  1028                           
  1029                           ; 1 bytes @ 0x1
  1030  0071                     	ds	1
  1031  0072                     write_byte@ack:
  1032  0072                     set_brigthness@brightness:	
  1033                           ; 1 bytes @ 0x2
  1034                           
  1035                           
  1036                           ; 1 bytes @ 0x2
  1037  0072                     	ds	1
  1038  0073                     write_byte@data:
  1039                           
  1040                           ; 1 bytes @ 0x3
  1041  0073                     	ds	1
  1042  0074                     write_byte@i:
  1043                           
  1044                           ; 1 bytes @ 0x4
  1045  0074                     	ds	1
  1046  0075                     ?_set_segments:
  1047  0075                     set_segments@length:	
  1048                           ; 1 bytes @ 0x5
  1049                           
  1050                           
  1051                           ; 1 bytes @ 0x5
  1052  0075                     	ds	1
  1053  0076                     set_segments@pos:
  1054                           
  1055                           ; 1 bytes @ 0x6
  1056  0076                     	ds	1
  1057  0077                     ??_set_segments:
  1058                           
  1059                           ; 1 bytes @ 0x7
  1060  0077                     	ds	1
  1061  0078                     set_segments@segments:
  1062                           
  1063                           ; 1 bytes @ 0x8
  1064  0078                     	ds	1
  1065  0079                     set_segments@k:
  1066                           
  1067                           ; 1 bytes @ 0x9
  1068  0079                     	ds	1
  1069  007A                     ??_clear:
  1070                           
  1071                           ; 1 bytes @ 0xA
  1072  007A                     	ds	1
  1073  007B                     ??_main:
  1074                           
  1075                           ; 1 bytes @ 0xB
  1076  007B                     	ds	2
  1077                           
  1078                           	psect	cstackBANK0
  1079  002E                     __pcstackBANK0:
  1080  002E                     clear@data:
  1081                           
  1082                           ; 4 bytes @ 0x0
  1083  002E                     	ds	4
  1084  0032                     main@k:
  1085                           
  1086                           ; 1 bytes @ 0x4
  1087  0032                     	ds	1
  1088  0033                     main@data:
  1089                           
  1090                           ; 4 bytes @ 0x5
  1091  0033                     	ds	4
  1092  0037                     main@i:
  1093                           
  1094                           ; 1 bytes @ 0x9
  1095  0037                     	ds	1
  1096                           
  1097                           	psect	maintext
  1098  0775                     __pmaintext:	
  1099 ;;
  1100 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1101 ;;
  1102 ;; *************** function _main *****************
  1103 ;; Defined at:
  1104 ;;		line 8 in file "main.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  i               1    9[BANK0 ] unsigned char 
  1109 ;;  data            4    5[BANK0 ] unsigned char [4]
  1110 ;;  k               1    4[BANK0 ] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : B1F/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1120 ;;      Params:         0       0       0       0       0       0
  1121 ;;      Locals:         0       6       0       0       0       0
  1122 ;;      Temps:          2       0       0       0       0       0
  1123 ;;      Totals:         2       6       0       0       0       0
  1124 ;;Total ram usage:        8 bytes
  1125 ;; Hardware stack levels required when called:    4
  1126 ;; This function calls:
  1127 ;;		_SYSTEM_Initialize
  1128 ;;		_clear
  1129 ;;		_encode_digit
  1130 ;;		_set_brigthness
  1131 ;;		_set_segments
  1132 ;; This function is called by:
  1133 ;;		Startup code after reset
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _main
  1139  0775                     _main:
  1140  0775                     l991:	
  1141                           ;incstack = 0
  1142                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1143                           
  1144                           
  1145                           ;main.c: 11:     SYSTEM_Initialize();
  1146  0775  3186  26A8  3187   	fcall	_SYSTEM_Initialize
  1147  0778                     l993:
  1148  0778  0022               	movlb	2	; select bank2
  1149  0779  150C               	bsf	12,2	;volatile
  1150  077A                     l995:
  1151                           
  1152                           ;main.c: 15:     uint8_t data[] = {0xff, 0xff, 0xff, 0xff};
  1153  077A  0020               	movlb	0	; select bank0
  1154  077B  082D               	movf	main@F2503+3,w
  1155  077C  00B6               	movwf	main@data+3
  1156  077D  082C               	movf	main@F2503+2,w
  1157  077E  00B5               	movwf	main@data+2
  1158  077F  082B               	movf	main@F2503+1,w
  1159  0780  00B4               	movwf	main@data+1
  1160  0781  082A               	movf	main@F2503,w
  1161  0782  00B3               	movwf	main@data
  1162  0783                     l997:
  1163                           
  1164                           ;main.c: 17:     clear();
  1165  0783  3186  26C0  3187   	fcall	_clear
  1166  0786                     l999:
  1167                           
  1168                           ;main.c: 19:     data[0] = encode_digit(1);
  1169  0786  3001               	movlw	1
  1170  0787  3186  268E  3187   	fcall	_encode_digit
  1171  078A  00FB               	movwf	??_main
  1172  078B  087B               	movf	??_main,w
  1173  078C  0020               	movlb	0	; select bank0
  1174  078D  00B3               	movwf	main@data
  1175  078E                     l1001:
  1176                           
  1177                           ;main.c: 20:     data[1] = encode_digit(9);
  1178  078E  3009               	movlw	9
  1179  078F  3186  268E  3187   	fcall	_encode_digit
  1180  0792  00FB               	movwf	??_main
  1181  0793  087B               	movf	??_main,w
  1182  0794  0020               	movlb	0	; select bank0
  1183  0795  00B4               	movwf	main@data+1
  1184  0796                     l1003:
  1185                           
  1186                           ;main.c: 21:     data[2] = encode_digit(8);
  1187  0796  3008               	movlw	8
  1188  0797  3186  268E  3187   	fcall	_encode_digit
  1189  079A  00FB               	movwf	??_main
  1190  079B  087B               	movf	??_main,w
  1191  079C  0020               	movlb	0	; select bank0
  1192  079D  00B5               	movwf	main@data+2
  1193  079E                     l1005:
  1194                           
  1195                           ;main.c: 22:     data[3] = encode_digit(4);
  1196  079E  3004               	movlw	4
  1197  079F  3186  268E  3187   	fcall	_encode_digit
  1198  07A2  00FB               	movwf	??_main
  1199  07A3  087B               	movf	??_main,w
  1200  07A4  0020               	movlb	0	; select bank0
  1201  07A5  00B6               	movwf	main@data+3
  1202  07A6                     l1007:
  1203                           
  1204                           ;main.c: 25:     set_brigthness(0x0f, 1);
  1205  07A6  01F0               	clrf	set_brigthness@on
  1206  07A7  0AF0               	incf	set_brigthness@on,f
  1207  07A8  300F               	movlw	15
  1208  07A9  3186  26D3  3187   	fcall	_set_brigthness
  1209  07AC                     l1009:
  1210                           
  1211                           ;main.c: 26:     set_segments(data, 4, 0);
  1212  07AC  3004               	movlw	4
  1213  07AD  00FB               	movwf	??_main
  1214  07AE  087B               	movf	??_main,w
  1215  07AF  00F5               	movwf	set_segments@length
  1216  07B0  01F6               	clrf	set_segments@pos
  1217  07B1  3033               	movlw	(low (main@data| 0))& (0+255)
  1218  07B2  3186  26FC  3187   	fcall	_set_segments
  1219  07B5                     l1011:
  1220                           
  1221                           ;main.c: 28:     uint8_t k = 0;
  1222  07B5  0020               	movlb	0	; select bank0
  1223  07B6  01B2               	clrf	main@k
  1224  07B7                     l1013:
  1225                           
  1226                           ;main.c: 30:     {;main.c: 31:         for(uint8_t i = 0; i < 4; i++){
  1227  07B7  01B7               	clrf	main@i
  1228  07B8                     l1017:
  1229                           
  1230                           ;main.c: 32:             data[i] = encode_digit(i + k);
  1231  07B8  0837               	movf	main@i,w
  1232  07B9  0732               	addwf	main@k,w
  1233  07BA  3186  268E  3187   	fcall	_encode_digit
  1234  07BD  00FB               	movwf	??_main
  1235  07BE  0020               	movlb	0	; select bank0
  1236  07BF  0837               	movf	main@i,w
  1237  07C0  3E33               	addlw	(low (main@data| 0))& (0+255)
  1238  07C1  0086               	movwf	6
  1239  07C2  0187               	clrf	7
  1240  07C3  087B               	movf	??_main,w
  1241  07C4  0081               	movwf	1
  1242  07C5                     l1019:
  1243                           
  1244                           ;main.c: 33:         }
  1245  07C5  3001               	movlw	1
  1246  07C6  00FB               	movwf	??_main
  1247  07C7  087B               	movf	??_main,w
  1248  07C8  07B7               	addwf	main@i,f
  1249  07C9                     l1021:
  1250  07C9  3004               	movlw	4
  1251  07CA  0237               	subwf	main@i,w
  1252  07CB  1C03               	skipc
  1253  07CC  2FCE               	goto	u121
  1254  07CD  2FCF               	goto	u120
  1255  07CE                     u121:
  1256  07CE  2FB8               	goto	l1017
  1257  07CF                     u120:
  1258  07CF                     l1023:
  1259                           
  1260                           ;main.c: 35:         set_segments(data, 4, 0);
  1261  07CF  3004               	movlw	4
  1262  07D0  00FB               	movwf	??_main
  1263  07D1  087B               	movf	??_main,w
  1264  07D2  00F5               	movwf	set_segments@length
  1265  07D3  01F6               	clrf	set_segments@pos
  1266  07D4  3033               	movlw	(low (main@data| 0))& (0+255)
  1267  07D5  3186  26FC  3187   	fcall	_set_segments
  1268  07D8                     l1025:
  1269                           
  1270                           ;main.c: 36:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  1271  07D8  3015               	movlw	21
  1272  07D9  00FC               	movwf	??_main+1
  1273  07DA  304B               	movlw	75
  1274  07DB  00FB               	movwf	??_main
  1275  07DC  30BE               	movlw	190
  1276  07DD                     u137:
  1277  07DD  0B89               	decfsz	9,f
  1278  07DE  2FDD               	goto	u137
  1279  07DF  0BFB               	decfsz	??_main,f
  1280  07E0  2FDD               	goto	u137
  1281  07E1  0BFC               	decfsz	??_main+1,f
  1282  07E2  2FDD               	goto	u137
  1283  07E3  3200               	nop2
  1284  07E4                     l1027:
  1285                           
  1286                           ;main.c: 37:         k++;
  1287  07E4  3001               	movlw	1
  1288  07E5  00FB               	movwf	??_main
  1289  07E6  087B               	movf	??_main,w
  1290  07E7  0020               	movlb	0	; select bank0
  1291  07E8  07B2               	addwf	main@k,f
  1292  07E9  2FB7               	goto	l1013
  1293  07EA  3180  2802         	ljmp	start
  1294  07EC                     __end_of_main:
  1295                           
  1296                           	psect	text1
  1297  06D3                     __ptext1:	
  1298 ;; *************** function _set_brigthness *****************
  1299 ;; Defined at:
  1300 ;;		line 94 in file "i2c_pp.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  brightness      1    wreg     unsigned char 
  1303 ;;  on              1    0[COMMON] unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  brightness      1    2[COMMON] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1315 ;;      Params:         1       0       0       0       0       0
  1316 ;;      Locals:         1       0       0       0       0       0
  1317 ;;      Temps:          1       0       0       0       0       0
  1318 ;;      Totals:         3       0       0       0       0       0
  1319 ;;Total ram usage:        3 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           
  1329                           ;psect for function _set_brigthness
  1330  06D3                     _set_brigthness:
  1331                           
  1332                           ;incstack = 0
  1333                           ; Regs used in _set_brigthness: [wreg+status,2+status,0]
  1334                           ;set_brigthness@brightness stored from wreg
  1335  06D3  00F2               	movwf	set_brigthness@brightness
  1336  06D4                     l985:
  1337                           
  1338                           ;i2c_pp.c: 95:     if(on == 1){
  1339  06D4  0370               	decf	set_brigthness@on,w
  1340  06D5  1D03               	btfss	3,2
  1341  06D6  2ED8               	goto	u111
  1342  06D7  2ED9               	goto	u110
  1343  06D8                     u111:
  1344  06D8  2EE0               	goto	l989
  1345  06D9                     u110:
  1346  06D9                     l987:
  1347                           
  1348                           ;i2c_pp.c: 96:         m_brightness = (brightness & 0x7 | 0x08);
  1349  06D9  0872               	movf	set_brigthness@brightness,w
  1350  06DA  3907               	andlw	7
  1351  06DB  3808               	iorlw	8
  1352  06DC  00F1               	movwf	??_set_brigthness
  1353  06DD  0871               	movf	??_set_brigthness,w
  1354  06DE  00FD               	movwf	_m_brightness
  1355                           
  1356                           ;i2c_pp.c: 97:     }else{
  1357  06DF  2EE5               	goto	l159
  1358  06E0                     l989:
  1359                           
  1360                           ;i2c_pp.c: 98:         m_brightness = (brightness & 0x7 | 0x00);
  1361  06E0  0872               	movf	set_brigthness@brightness,w
  1362  06E1  3907               	andlw	7
  1363  06E2  00F1               	movwf	??_set_brigthness
  1364  06E3  0871               	movf	??_set_brigthness,w
  1365  06E4  00FD               	movwf	_m_brightness
  1366  06E5                     l159:
  1367  06E5  0008               	return
  1368  06E6                     __end_of_set_brigthness:
  1369                           
  1370                           	psect	text2
  1371  068E                     __ptext2:	
  1372 ;; *************** function _encode_digit *****************
  1373 ;; Defined at:
  1374 ;;		line 131 in file "i2c_pp.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  digit           1    wreg     unsigned char 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  digit           1    0[COMMON] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      unsigned char 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1388 ;;      Params:         0       0       0       0       0       0
  1389 ;;      Locals:         1       0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0
  1391 ;;      Totals:         1       0       0       0       0       0
  1392 ;;Total ram usage:        1 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _encode_digit
  1403  068E                     _encode_digit:
  1404                           
  1405                           ;incstack = 0
  1406                           ; Regs used in _encode_digit: [wreg+fsr1l+fsr1h+status,2+status,0]
  1407                           ;encode_digit@digit stored from wreg
  1408  068E  00F0               	movwf	encode_digit@digit
  1409  068F                     l981:
  1410                           
  1411                           ;i2c_pp.c: 132:     return segdata[digit & 0x0f];
  1412  068F  0870               	movf	encode_digit@digit,w
  1413  0690  390F               	andlw	15
  1414  0691  3E20               	addlw	(low (_segdata| 0))& (0+255)
  1415  0692  0086               	movwf	6
  1416  0693  0187               	clrf	7
  1417  0694  0801               	movf	1,w
  1418  0695                     l173:
  1419  0695  0008               	return
  1420  0696                     __end_of_encode_digit:
  1421                           
  1422                           	psect	text3
  1423  06C0                     __ptext3:	
  1424 ;; *************** function _clear *****************
  1425 ;; Defined at:
  1426 ;;		line 126 in file "i2c_pp.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  data            4    0[BANK0 ] unsigned char [4]
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1440 ;;      Params:         0       0       0       0       0       0
  1441 ;;      Locals:         0       4       0       0       0       0
  1442 ;;      Temps:          1       0       0       0       0       0
  1443 ;;      Totals:         1       4       0       0       0       0
  1444 ;;Total ram usage:        5 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    3
  1447 ;; This function calls:
  1448 ;;		_set_segments
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           
  1455                           ;psect for function _clear
  1456  06C0                     _clear:
  1457  06C0                     l977:	
  1458                           ;incstack = 0
  1459                           ; Regs used in _clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1460                           
  1461                           
  1462                           ;i2c_pp.c: 127:     uint8_t data[] = { 0, 0, 0, 0 };
  1463  06C0  3000               	movlw	0
  1464  06C1  0020               	movlb	0	; select bank0
  1465  06C2  00B1               	movwf	clear@data+3
  1466  06C3  3000               	movlw	0
  1467  06C4  00B0               	movwf	clear@data+2
  1468  06C5  3000               	movlw	0
  1469  06C6  00AF               	movwf	clear@data+1
  1470  06C7  3000               	movlw	0
  1471  06C8  00AE               	movwf	clear@data
  1472  06C9                     l979:
  1473                           
  1474                           ;i2c_pp.c: 128:  set_segments(data, 4, 0);
  1475  06C9  3004               	movlw	4
  1476  06CA  00FA               	movwf	??_clear
  1477  06CB  087A               	movf	??_clear,w
  1478  06CC  00F5               	movwf	set_segments@length
  1479  06CD  01F6               	clrf	set_segments@pos
  1480  06CE  302E               	movlw	(low (clear@data| 0))& (0+255)
  1481  06CF  3186  26FC  3186   	fcall	_set_segments
  1482  06D2                     l170:
  1483  06D2  0008               	return
  1484  06D3                     __end_of_clear:
  1485                           
  1486                           	psect	text4
  1487  06FC                     __ptext4:	
  1488 ;; *************** function _set_segments *****************
  1489 ;; Defined at:
  1490 ;;		line 102 in file "i2c_pp.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  segments        1    wreg     PTR const unsigned char 
  1493 ;;		 -> clear@data(4), main@data(4), 
  1494 ;;  length          1    5[COMMON] unsigned char 
  1495 ;;  pos             1    6[COMMON] unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  segments        1    8[COMMON] PTR const unsigned char 
  1498 ;;		 -> clear@data(4), main@data(4), 
  1499 ;;  k               1    9[COMMON] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1509 ;;      Params:         2       0       0       0       0       0
  1510 ;;      Locals:         2       0       0       0       0       0
  1511 ;;      Temps:          1       0       0       0       0       0
  1512 ;;      Totals:         5       0       0       0       0       0
  1513 ;;Total ram usage:        5 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    2
  1516 ;; This function calls:
  1517 ;;		_start
  1518 ;;		_stop
  1519 ;;		_write_byte
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;;		_clear
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _set_segments
  1528  06FC                     _set_segments:
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in _set_segments: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1532                           ;set_segments@segments stored from wreg
  1533  06FC  00F8               	movwf	set_segments@segments
  1534  06FD                     l951:
  1535                           
  1536                           ;i2c_pp.c: 105:     start();
  1537  06FD  3186  2696  3186   	fcall	_start
  1538  0700                     l953:
  1539                           
  1540                           ;i2c_pp.c: 106:     write_byte(0x40);
  1541  0700  3040               	movlw	64
  1542  0701  3187  2736  3186   	fcall	_write_byte
  1543  0704                     l955:
  1544                           
  1545                           ;i2c_pp.c: 107:     stop();
  1546  0704  3186  269F  3186   	fcall	_stop
  1547  0707                     l957:
  1548                           
  1549                           ;i2c_pp.c: 110:     start();
  1550  0707  3186  2696  3186   	fcall	_start
  1551  070A                     l959:
  1552                           
  1553                           ;i2c_pp.c: 111:     write_byte(0xC0 + (pos & 0x03));
  1554  070A  0876               	movf	set_segments@pos,w
  1555  070B  3903               	andlw	3
  1556  070C  3EC0               	addlw	192
  1557  070D  3187  2736  3186   	fcall	_write_byte
  1558  0710                     l961:
  1559                           
  1560                           ;i2c_pp.c: 114:     for(uint8_t k = 0; k < length; k++){
  1561  0710  01F9               	clrf	set_segments@k
  1562  0711  2F20               	goto	l967
  1563  0712                     l963:
  1564                           
  1565                           ;i2c_pp.c: 115:         write_byte(segments[k]);
  1566  0712  0879               	movf	set_segments@k,w
  1567  0713  0778               	addwf	set_segments@segments,w
  1568  0714  00F7               	movwf	??_set_segments
  1569  0715  0877               	movf	??_set_segments,w
  1570  0716  0086               	movwf	6
  1571  0717  0187               	clrf	7
  1572  0718  0801               	movf	1,w
  1573  0719  3187  2736  3186   	fcall	_write_byte
  1574  071C                     l965:
  1575                           
  1576                           ;i2c_pp.c: 116:     }
  1577  071C  3001               	movlw	1
  1578  071D  00F7               	movwf	??_set_segments
  1579  071E  0877               	movf	??_set_segments,w
  1580  071F  07F9               	addwf	set_segments@k,f
  1581  0720                     l967:
  1582  0720  0875               	movf	set_segments@length,w
  1583  0721  0279               	subwf	set_segments@k,w
  1584  0722  1C03               	skipc
  1585  0723  2F25               	goto	u101
  1586  0724  2F26               	goto	u100
  1587  0725                     u101:
  1588  0725  2F12               	goto	l963
  1589  0726                     u100:
  1590  0726                     l969:
  1591                           
  1592                           ;i2c_pp.c: 118:     stop();
  1593  0726  3186  269F  3186   	fcall	_stop
  1594                           
  1595                           ;i2c_pp.c: 121:     start();
  1596  0729  3186  2696  3186   	fcall	_start
  1597  072C                     l971:
  1598                           
  1599                           ;i2c_pp.c: 122:     write_byte(0x80 + (m_brightness & 0x0f));
  1600  072C  087D               	movf	_m_brightness,w
  1601  072D  390F               	andlw	15
  1602  072E  3E80               	addlw	128
  1603  072F  3187  2736  3186   	fcall	_write_byte
  1604  0732                     l973:
  1605                           
  1606                           ;i2c_pp.c: 123:     stop();
  1607  0732  3186  269F  3186   	fcall	_stop
  1608  0735                     l165:
  1609  0735  0008               	return
  1610  0736                     __end_of_set_segments:
  1611                           
  1612                           	psect	text5
  1613  0736                     __ptext5:	
  1614 ;; *************** function _write_byte *****************
  1615 ;; Defined at:
  1616 ;;		line 53 in file "i2c_pp.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  b               1    wreg     unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  b               1    1[COMMON] unsigned char 
  1621 ;;  i               1    4[COMMON] unsigned char 
  1622 ;;  data            1    3[COMMON] unsigned char 
  1623 ;;  ack             1    2[COMMON] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      unsigned char 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0, pclath, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1633 ;;      Params:         0       0       0       0       0       0
  1634 ;;      Locals:         4       0       0       0       0       0
  1635 ;;      Temps:          1       0       0       0       0       0
  1636 ;;      Totals:         5       0       0       0       0       0
  1637 ;;Total ram usage:        5 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    1
  1640 ;; This function calls:
  1641 ;;		_bit_delay
  1642 ;; This function is called by:
  1643 ;;		_set_segments
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _write_byte
  1649  0736                     _write_byte:
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  1653                           ;write_byte@b stored from wreg
  1654  0736  00F1               	movwf	write_byte@b
  1655  0737                     l905:
  1656                           
  1657                           ;i2c_pp.c: 54:     uint8_t data = b;
  1658  0737  0871               	movf	write_byte@b,w
  1659  0738  00F0               	movwf	??_write_byte
  1660  0739  0870               	movf	??_write_byte,w
  1661  073A  00F3               	movwf	write_byte@data
  1662  073B                     l907:
  1663  073B  0021               	movlb	1	; select bank1
  1664  073C  100C               	bcf	12,0	;volatile
  1665  073D                     l909:
  1666                           
  1667                           ;i2c_pp.c: 57:     for(uint8_t i = 0; i < 8; i++){
  1668  073D  01F4               	clrf	write_byte@i
  1669  073E                     l129:	
  1670                           ;i2c_pp.c: 58:         do { LATAbits.LATA0 = 0; } while(0);
  1671                           
  1672  073E  0022               	movlb	2	; select bank2
  1673  073F  100C               	bcf	12,0	;volatile
  1674  0740                     l130:
  1675                           
  1676                           ;i2c_pp.c: 60:         if(data & 0x01){
  1677  0740  1C73               	btfss	write_byte@data,0
  1678  0741  2F43               	goto	u71
  1679  0742  2F44               	goto	u70
  1680  0743                     u71:
  1681  0743  2F46               	goto	l135
  1682  0744                     u70:
  1683  0744                     l132:	
  1684                           ;i2c_pp.c: 61:             do { LATAbits.LATA3 = 1; } while(0);
  1685                           
  1686  0744  158C               	bsf	12,3	;volatile
  1687  0745  2F47               	goto	l137
  1688  0746                     l135:	
  1689                           ;i2c_pp.c: 63:             do { LATAbits.LATA3 = 0; } while(0);
  1690                           
  1691  0746  118C               	bcf	12,3	;volatile
  1692  0747                     l137:	
  1693                           ;i2c_pp.c: 66:         do { LATAbits.LATA0 = 1; } while(0);
  1694                           
  1695  0747  140C               	bsf	12,0	;volatile
  1696  0748                     l915:
  1697                           
  1698                           ;i2c_pp.c: 68:         data = data >> 1;
  1699  0748  3673               	lsrf	write_byte@data,w
  1700  0749  00F0               	movwf	??_write_byte
  1701  074A  0870               	movf	??_write_byte,w
  1702  074B  00F3               	movwf	write_byte@data
  1703                           
  1704                           ;i2c_pp.c: 69:     }
  1705  074C  3001               	movlw	1
  1706  074D  00F0               	movwf	??_write_byte
  1707  074E  0870               	movf	??_write_byte,w
  1708  074F  07F4               	addwf	write_byte@i,f
  1709  0750                     l917:
  1710  0750  3008               	movlw	8
  1711  0751  0274               	subwf	write_byte@i,w
  1712  0752  1C03               	skipc
  1713  0753  2F55               	goto	u81
  1714  0754  2F56               	goto	u80
  1715  0755                     u81:
  1716  0755  2F3E               	goto	l129
  1717  0756                     u80:
  1718  0756                     l139:	
  1719                           ;i2c_pp.c: 72:     do { LATAbits.LATA0 = 0; } while(0);
  1720                           
  1721  0756  100C               	bcf	12,0	;volatile
  1722  0757                     l141:	
  1723                           ;i2c_pp.c: 73:     do { LATAbits.LATA3 = 1; } while(0);
  1724                           
  1725  0757  158C               	bsf	12,3	;volatile
  1726  0758                     l143:	
  1727                           ;i2c_pp.c: 76:     do { LATAbits.LATA0 = 1; } while(0);
  1728                           
  1729  0758  140C               	bsf	12,0	;volatile
  1730  0759                     l145:	
  1731                           ;i2c_pp.c: 78:     do { TRISAbits.TRISA3 = 1; } while(0);
  1732                           
  1733  0759  0021               	movlb	1	; select bank1
  1734  075A  158C               	bsf	12,3	;volatile
  1735  075B                     l919:
  1736                           
  1737                           ;i2c_pp.c: 79:     bit_delay();
  1738  075B  3186  267C  3187   	fcall	_bit_delay
  1739  075E                     l921:
  1740                           
  1741                           ;i2c_pp.c: 81:     uint8_t ack = PORTAbits.RA3;
  1742  075E  3000               	movlw	0
  1743  075F  0020               	movlb	0	; select bank0
  1744  0760  198C               	btfsc	12,3	;volatile
  1745  0761  3001               	movlw	1
  1746  0762  00F2               	movwf	write_byte@ack
  1747  0763                     l923:
  1748                           
  1749                           ;i2c_pp.c: 82:     if(ack == 0){
  1750  0763  0872               	movf	write_byte@ack,w
  1751  0764  1D03               	btfss	3,2
  1752  0765  2F67               	goto	u91
  1753  0766  2F68               	goto	u90
  1754  0767                     u91:
  1755  0767  2F6C               	goto	l925
  1756  0768                     u90:
  1757  0768                     l148:	
  1758                           ;i2c_pp.c: 83:         do { TRISAbits.TRISA3 = 0; } while(0);
  1759                           
  1760  0768  0021               	movlb	1	; select bank1
  1761  0769  118C               	bcf	12,3	;volatile
  1762  076A                     l150:	
  1763                           ;i2c_pp.c: 84:         do { LATAbits.LATA3 = 0; } while(0);
  1764                           
  1765  076A  0022               	movlb	2	; select bank2
  1766  076B  118C               	bcf	12,3	;volatile
  1767  076C                     l925:
  1768                           
  1769                           ;i2c_pp.c: 87:     bit_delay();
  1770  076C  3186  267C  3187   	fcall	_bit_delay
  1771  076F                     l927:
  1772  076F  0021               	movlb	1	; select bank1
  1773  0770  118C               	bcf	12,3	;volatile
  1774  0771                     l153:
  1775                           
  1776                           ;i2c_pp.c: 89:     bit_delay();
  1777  0771  3186  267C  3187   	fcall	_bit_delay
  1778  0774                     l154:
  1779  0774  0008               	return
  1780  0775                     __end_of_write_byte:
  1781                           
  1782                           	psect	text6
  1783  067C                     __ptext6:	
  1784 ;; *************** function _bit_delay *****************
  1785 ;; Defined at:
  1786 ;;		line 27 in file "i2c_pp.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		None
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1800 ;;      Params:         0       0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0
  1803 ;;      Totals:         0       0       0       0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_write_byte
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _bit_delay
  1815  067C                     _bit_delay:
  1816  067C                     l92:	
  1817                           ;incstack = 0
  1818                           ; Regs used in _bit_delay: []
  1819                           
  1820  067C  0008               	return
  1821  067D                     __end_of_bit_delay:
  1822                           
  1823                           	psect	text7
  1824  069F                     __ptext7:	
  1825 ;; *************** function _stop *****************
  1826 ;; Defined at:
  1827 ;;		line 42 in file "i2c_pp.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		None
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1841 ;;      Params:         0       0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0       0
  1844 ;;      Totals:         0       0       0       0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_set_segments
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _stop
  1856  069F                     _stop:
  1857  069F                     l110:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _stop: []
  1860                           ;i2c_pp.c: 43:     do { TRISAbits.TRISA3 = 0; } while(0);
  1861                           
  1862  069F  0021               	movlb	1	; select bank1
  1863  06A0  118C               	bcf	12,3	;volatile
  1864  06A1                     l112:	
  1865                           ;i2c_pp.c: 44:     do { TRISAbits.TRISA0 = 0; } while(0);
  1866                           
  1867  06A1  100C               	bcf	12,0	;volatile
  1868  06A2                     l114:	
  1869                           ;i2c_pp.c: 46:     do { LATAbits.LATA0 = 0; } while(0);
  1870                           
  1871  06A2  0022               	movlb	2	; select bank2
  1872  06A3  100C               	bcf	12,0	;volatile
  1873  06A4                     l116:	
  1874                           ;i2c_pp.c: 47:     do { LATAbits.LATA3 = 0; } while(0);
  1875                           
  1876  06A4  118C               	bcf	12,3	;volatile
  1877  06A5                     l118:	
  1878                           ;i2c_pp.c: 49:     do { LATAbits.LATA0 = 1; } while(0);
  1879                           
  1880  06A5  140C               	bsf	12,0	;volatile
  1881  06A6                     l120:	
  1882                           ;i2c_pp.c: 50:     do { LATAbits.LATA3 = 1; } while(0);
  1883                           
  1884  06A6  158C               	bsf	12,3	;volatile
  1885  06A7                     l122:
  1886  06A7  0008               	return
  1887  06A8                     __end_of_stop:
  1888                           
  1889                           	psect	text8
  1890  0696                     __ptext8:	
  1891 ;; *************** function _start *****************
  1892 ;; Defined at:
  1893 ;;		line 31 in file "i2c_pp.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		None
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1907 ;;      Params:         0       0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_set_segments
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function _start
  1922  0696                     _start:
  1923  0696                     l95:	
  1924                           ;incstack = 0
  1925                           ; Regs used in _start: []
  1926                           ;i2c_pp.c: 32:     do { TRISAbits.TRISA3 = 0; } while(0);
  1927                           
  1928  0696  0021               	movlb	1	; select bank1
  1929  0697  118C               	bcf	12,3	;volatile
  1930  0698                     l97:	
  1931                           ;i2c_pp.c: 33:     do { TRISAbits.TRISA0 = 0; } while(0);
  1932                           
  1933  0698  100C               	bcf	12,0	;volatile
  1934  0699                     l99:	
  1935                           ;i2c_pp.c: 35:     do { LATAbits.LATA3 = 1; } while(0);
  1936                           
  1937  0699  0022               	movlb	2	; select bank2
  1938  069A  158C               	bsf	12,3	;volatile
  1939  069B                     l101:	
  1940                           ;i2c_pp.c: 36:     do { LATAbits.LATA0 = 1; } while(0);
  1941                           
  1942  069B  140C               	bsf	12,0	;volatile
  1943  069C                     l103:	
  1944                           ;i2c_pp.c: 38:     do { LATAbits.LATA3 = 0; } while(0);
  1945                           
  1946  069C  118C               	bcf	12,3	;volatile
  1947  069D                     l105:	
  1948                           ;i2c_pp.c: 39:     do { LATAbits.LATA0 = 0; } while(0);
  1949                           
  1950  069D  100C               	bcf	12,0	;volatile
  1951  069E                     l107:
  1952  069E  0008               	return
  1953  069F                     __end_of_start:
  1954                           
  1955                           	psect	text9
  1956  06A8                     __ptext9:	
  1957 ;; *************** function _SYSTEM_Initialize *****************
  1958 ;; Defined at:
  1959 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, pclath, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1973 ;;      Params:         0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    1
  1980 ;; This function calls:
  1981 ;;		_OSCILLATOR_Initialize
  1982 ;;		_PIN_MANAGER_Initialize
  1983 ;;		_WDT_Initialize
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _SYSTEM_Initialize
  1991  06A8                     _SYSTEM_Initialize:
  1992  06A8                     l975:	
  1993                           ;incstack = 0
  1994                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1995                           
  1996                           
  1997                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1998  06A8  3186  26E6  3186   	fcall	_PIN_MANAGER_Initialize
  1999                           
  2000                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2001  06AB  3186  2687  3186   	fcall	_OSCILLATOR_Initialize
  2002                           
  2003                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2004  06AE  3186  267D  3186   	fcall	_WDT_Initialize
  2005  06B1                     l17:
  2006  06B1  0008               	return
  2007  06B2                     __end_of_SYSTEM_Initialize:
  2008                           
  2009                           	psect	text10
  2010  067D                     __ptext10:	
  2011 ;; *************** function _WDT_Initialize *****************
  2012 ;; Defined at:
  2013 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2027 ;;      Params:         0       0       0       0       0       0
  2028 ;;      Locals:         0       0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0
  2030 ;;      Totals:         0       0       0       0       0       0
  2031 ;;Total ram usage:        0 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_SYSTEM_Initialize
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _WDT_Initialize
  2042  067D                     _WDT_Initialize:
  2043  067D                     l949:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _WDT_Initialize: [wreg]
  2046                           
  2047                           
  2048                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  2049  067D  3016               	movlw	22
  2050  067E  0021               	movlb	1	; select bank1
  2051  067F  0097               	movwf	23	;volatile
  2052  0680                     l23:
  2053  0680  0008               	return
  2054  0681                     __end_of_WDT_Initialize:
  2055                           
  2056                           	psect	text11
  2057  06E6                     __ptext11:	
  2058 ;; *************** function _PIN_MANAGER_Initialize *****************
  2059 ;; Defined at:
  2060 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2074 ;;      Params:         0       0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0
  2077 ;;      Totals:         0       0       0       0       0       0
  2078 ;;Total ram usage:        0 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_SYSTEM_Initialize
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _PIN_MANAGER_Initialize
  2089  06E6                     _PIN_MANAGER_Initialize:
  2090  06E6                     l931:	
  2091                           ;incstack = 0
  2092                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2093                           
  2094                           
  2095                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2096  06E6  0022               	movlb	2	; select bank2
  2097  06E7  018C               	clrf	12	;volatile
  2098                           
  2099                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2100  06E8  018D               	clrf	13	;volatile
  2101  06E9                     l933:
  2102                           
  2103                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFB;
  2104  06E9  30FB               	movlw	251
  2105  06EA  0021               	movlb	1	; select bank1
  2106  06EB  008C               	movwf	12	;volatile
  2107  06EC                     l935:
  2108                           
  2109                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2110  06EC  30FF               	movlw	255
  2111  06ED  008D               	movwf	13	;volatile
  2112  06EE                     l937:
  2113                           
  2114                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  2115  06EE  30FE               	movlw	254
  2116  06EF  0023               	movlb	3	; select bank3
  2117  06F0  008D               	movwf	13	;volatile
  2118  06F1                     l939:
  2119                           
  2120                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x12;
  2121  06F1  3012               	movlw	18
  2122  06F2  008C               	movwf	12	;volatile
  2123                           
  2124                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2125  06F3  0024               	movlb	4	; select bank4
  2126  06F4  018D               	clrf	13	;volatile
  2127                           
  2128                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2129  06F5  018C               	clrf	12	;volatile
  2130  06F6                     l941:
  2131                           
  2132                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2133  06F6  0021               	movlb	1	; select bank1
  2134  06F7  1795               	bsf	21,7	;volatile
  2135                           
  2136                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2137  06F8  0022               	movlb	2	; select bank2
  2138  06F9  019D               	clrf	29	;volatile
  2139                           
  2140                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2141  06FA  019E               	clrf	30	;volatile
  2142  06FB                     l48:
  2143  06FB  0008               	return
  2144  06FC                     __end_of_PIN_MANAGER_Initialize:
  2145                           
  2146                           	psect	text12
  2147  0687                     __ptext12:	
  2148 ;; *************** function _OSCILLATOR_Initialize *****************
  2149 ;; Defined at:
  2150 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2164 ;;      Params:         0       0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0
  2167 ;;      Totals:         0       0       0       0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_SYSTEM_Initialize
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           
  2178                           ;psect for function _OSCILLATOR_Initialize
  2179  0687                     _OSCILLATOR_Initialize:
  2180  0687                     l943:	
  2181                           ;incstack = 0
  2182                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2183                           
  2184                           
  2185                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x78;
  2186  0687  3078               	movlw	120
  2187  0688  0021               	movlb	1	; select bank1
  2188  0689  0099               	movwf	25	;volatile
  2189  068A                     l945:
  2190                           
  2191                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  2192  068A  0198               	clrf	24	;volatile
  2193  068B                     l947:
  2194                           
  2195                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2196  068B  0022               	movlb	2	; select bank2
  2197  068C  0196               	clrf	22	;volatile
  2198  068D                     l20:
  2199  068D  0008               	return
  2200  068E                     __end_of_OSCILLATOR_Initialize:
  2201  007E                     btemp	set	126	;btemp
  2202  007E                     wtemp0	set	126
  2203                           
  2204                           	psect	config
  2205                           
  2206                           ;Config register CONFIG1 @ 0x8007
  2207                           ;	Oscillator Selection
  2208                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2209                           ;	Watchdog Timer Enable
  2210                           ;	WDTE = OFF, WDT disabled
  2211                           ;	Power-up Timer Enable
  2212                           ;	PWRTE = OFF, PWRT disabled
  2213                           ;	MCLR Pin Function Select
  2214                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2215                           ;	Flash Program Memory Code Protection
  2216                           ;	CP = OFF, Program memory code protection is disabled
  2217                           ;	Data Memory Code Protection
  2218                           ;	CPD = OFF, Data memory code protection is disabled
  2219                           ;	Brown-out Reset Enable
  2220                           ;	BOREN = ON, Brown-out Reset enabled
  2221                           ;	Clock Out Enable
  2222                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2223                           ;	Internal/External Switchover
  2224                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2225                           ;	Fail-Safe Clock Monitor Enable
  2226                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2227  8007                     	org	32775
  2228  8007  3FE4               	dw	16356
  2229                           
  2230                           ;Config register CONFIG2 @ 0x8008
  2231                           ;	Flash Memory Self-Write Protection
  2232                           ;	WRT = OFF, Write protection off
  2233                           ;	PLL Enable
  2234                           ;	PLLEN = OFF, 4x PLL disabled
  2235                           ;	Stack Overflow/Underflow Reset Enable
  2236                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2237                           ;	Brown-out Reset Voltage Selection
  2238                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2239                           ;	Low-Voltage Programming Enable
  2240                           ;	LVP = ON, Low-voltage programming enabled
  2241  8008                     	org	32776
  2242  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     10      28
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    set_segments@segments	PTR const unsigned char  size(1) Largest target is 4
		 -> clear@data(BANK0[4]), main@data(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_clear
    _clear->_set_segments
    _set_segments->_write_byte

Critical Paths under _main in BANK0

    _main->_clear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2065
                                             11 COMMON     2     2      0
                                              4 BANK0      6     6      0
                  _SYSTEM_Initialize
                              _clear
                       _encode_digit
                     _set_brigthness
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_brigthness                                       3     2      1     142
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _encode_digit                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear                                                5     5      0     834
                                             10 COMMON     1     1      0
                                              0 BANK0      4     4      0
                       _set_segments
 ---------------------------------------------------------------------------------
 (1) _set_segments                                         5     3      2     810
                                              5 COMMON     5     3      2
                              _start
                               _stop
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     143
                                              0 COMMON     5     5      0
                          _bit_delay
 ---------------------------------------------------------------------------------
 (3) _bit_delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _clear
     _set_segments
       _start
       _stop
       _write_byte
         _bit_delay
   _encode_digit
   _set_brigthness
   _set_segments
     _start
     _stop
     _write_byte
       _bit_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      1C       6       35.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Oct 04 14:22:00 2020

                             l20 068D                               l23 0680                               l17 06B1  
                             l48 06FB                               l92 067C                               l95 0696  
                             l97 0698                               l99 0699                               u70 0744  
                             u71 0743                               u80 0756                               u81 0755  
                             u90 0768                               u91 0767                              l101 069B  
                            l110 069F                              l103 069C                              l120 06A6  
                            l112 06A1                              l105 069D                              l122 06A7  
                            l114 06A2                              l130 0740                              l107 069E  
                            l116 06A4                              l132 0744                              l141 0757  
                            l118 06A5                              l150 076A                              l143 0758  
                            l135 0746                              l153 0771                              l145 0759  
                            l137 0747                              l129 073E                              l154 0774  
                            l170 06D2                              l139 0756                              l148 0768  
                            l165 0735                              l173 0695                              l159 06E5  
                            l921 075E                              l905 0737                              l931 06E6  
                            l923 0763                              l915 0748                              l907 073B  
                            l941 06F6                              l933 06E9                              l925 076C  
                            l917 0750                              l909 073D                              l943 0687  
                            l935 06EC                              l927 076F                              l919 075B  
                            l951 06FD                              l945 068A                              l937 06EE  
                            l961 0710                              l953 0700                              l947 068B  
                            l939 06F1                              l971 072C                              l963 0712  
                            l955 0704                              l949 067D                              l973 0732  
                            l965 071C                              l957 0707                              l981 068F  
                            l975 06A8                              l967 0720                              l959 070A  
                            l991 0775                              l969 0726                              l977 06C0  
                            l985 06D4                              l993 0778                              l979 06C9  
                            l987 06D9                              l995 077A                              l989 06E0  
                            l997 0783                              l999 0786                              u100 0726  
                            u101 0725                              u110 06D9                              u111 06D8  
                            u120 07CF                              u121 07CE                              u137 07DD  
                            wreg 0009                   ??_encode_digit 0070                             l1001 078E  
                           l1011 07B5                             l1003 0796                             l1021 07C9  
                           l1013 07B7                             l1005 079E                             l1023 07CF  
                           l1007 07A6                             l1025 07D8                             l1017 07B8  
                           l1009 07AC                             l1027 07E4                             l1019 07C5  
                           _LATA 010C                             _LATB 010D                             _WPUA 020C  
                           _WPUB 020D                             _main 0775                    write_byte@ack 0072  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           _stop 069F                             start 0002   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 068E                            ?_main 0070                            ?_stop 0070  
                          _TRISA 008C                            _TRISB 008D                            _clear 06C0  
                 _WDT_Initialize 067D                   write_byte@data 0073                            _start 0696  
                          main@i 0037                            main@k 0032                            status 0003  
                          wtemp0 007E                  __initialization 07EC                     __end_of_main 07EC  
                   __end_of_stop 06A8                           ??_main 007B                           ??_stop 0070  
         __end_of_WDT_Initialize 0681                  set_segments@pos 0076                           ?_clear 0070  
                         _ANSELA 018C                           _ANSELB 018D                           ?_start 0070  
                         _BORCON 0116                           _OSCCON 0099                           _WDTCON 0097  
           __end_of_encode_digit 0696                  ?_WDT_Initialize 0070          __size_of_set_brigthness 0013  
              _SYSTEM_Initialize 06A8          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
       set_brigthness@brightness 0072                   __pcstackCOMMON 0070                     __pidataBANK0 06B2  
            ??_SYSTEM_Initialize 0070                    __end_of_clear 06D3                    __end_of_start 069F  
             __size_of_bit_delay 0001                   _OPTION_REGbits 0095                          ??_clear 007A  
      __end_of_SYSTEM_Initialize 06B2                          ??_start 0070                       __pbssBANK0 0038  
                     __pmaintext 0775                          _APFCON0 011D                          _APFCON1 011E  
             set_segments@length 0075                          _OSCTUNE 0098                __end_of_bit_delay 067D  
          __size_of_encode_digit 0008                       clear@F2521 0038                    ?_set_segments 0075  
                        __ptext1 06D3                          __ptext2 068E                          __ptext3 06C0  
                        __ptext4 06FC                          __ptext5 0736                          __ptext6 067C  
                        __ptext7 069F                          __ptext8 0696                          __ptext9 06A8  
          _OSCILLATOR_Initialize 0687                          _segdata 0020         ??_PIN_MANAGER_Initialize 0070  
                 _set_brigthness 06D3       __size_of_SYSTEM_Initialize 000A             end_of_initialization 07FD  
                   _encode_digit 068E                          init_ram 0681                          initloop 0682  
           set_segments@segments 0078                   ??_set_segments 0077                 ??_WDT_Initialize 0070  
                      _PORTAbits 000C                     _m_brightness 007D           __end_of_set_brigthness 06E6  
                      _TRISAbits 008C                       _write_byte 0736           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07EC                  ?_set_brigthness 0070  __size_of_PIN_MANAGER_Initialize 0016  
                    __pdataBANK0 0020                      __pbssCOMMON 007D                        ___latbits 0001  
                  __pcstackBANK0 002E             __end_of_set_segments 0736                 set_brigthness@on 0070  
         _PIN_MANAGER_Initialize 06E6                        _bit_delay 067C                      ?_write_byte 0070  
                 __size_of_clear 0013                   __size_of_start 0009                        clear@data 002E  
                       _LATAbits 010C                       ?_bit_delay 0070                        main@F2503 002A  
              encode_digit@digit 0070                      write_byte@b 0071                      write_byte@i 0074  
            __size_of_write_byte 003F                    set_segments@k 0079          ??_OSCILLATOR_Initialize 0070  
               ??_set_brigthness 0071            __size_of_set_segments 003A                         __ptext10 067D  
                       __ptext11 06E6                         __ptext12 0687                    __size_of_main 0077  
                  __size_of_stop 0009                      ??_bit_delay 0070                         main@data 0033  
                   _set_segments 06FC          __size_of_WDT_Initialize 0004          ?_PIN_MANAGER_Initialize 0070  
                   ??_write_byte 0070                    ?_encode_digit 0070   __end_of_PIN_MANAGER_Initialize 06FC  
             __end_of_write_byte 0775  
